/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	__webpack_require__(1);

	var _phoenix = __webpack_require__(2);

	var _Main = __webpack_require__(3);

	var _Main2 = _interopRequireDefault(_Main);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_Main2.default.main();

	console.log("Chat");

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	function isLinkToSubmitParent(element) {
	  var isLinkTag = element.tagName === 'A';
	  var shouldSubmitParent = element.getAttribute('data-submit') === 'parent';

	  return isLinkTag && shouldSubmitParent;
	}

	function didHandleSubmitLinkClick(element) {
	  while (element && element.getAttribute) {
	    if (isLinkToSubmitParent(element)) {
	      var message = element.getAttribute('data-confirm');
	      if (message === null || confirm(message)) {
	        element.parentNode.submit();
	      };
	      return true;
	    } else {
	      element = element.parentNode;
	    }
	  }
	  return false;
	}

	// for links with HTTP methods other than GET
	window.addEventListener('click', function (event) {
	  if (event.target && didHandleSubmitLinkClick(event.target)) {
	    event.preventDefault();
	    return false;
	  }
	}, false);



/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	(function(exports){
	"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// Phoenix Channels JavaScript client
	//
	// ## Socket Connection
	//
	// A single connection is established to the server and
	// channels are mulitplexed over the connection.
	// Connect to the server using the `Socket` class:
	//
	//     let socket = new Socket("/ws", {params: {userToken: "123"}})
	//     socket.connect()
	//
	// The `Socket` constructor takes the mount point of the socket,
	// the authentication params, as well as options that can be found in
	// the Socket docs, such as configuring the `LongPoll` transport, and
	// heartbeat.
	//
	// ## Channels
	//
	// Channels are isolated, concurrent processes on the server that
	// subscribe to topics and broker events between the client and server.
	// To join a channel, you must provide the topic, and channel params for
	// authorization. Here's an example chat room example where `"new_msg"`
	// events are listened for, messages are pushed to the server, and
	// the channel is joined with ok/error/timeout matches:
	//
	//     let channel = socket.channel("rooms:123", {token: roomToken})
	//     channel.on("new_msg", msg => console.log("Got message", msg) )
	//     $input.onEnter( e => {
	//       channel.push("new_msg", {body: e.target.val}, 10000)
	//        .receive("ok", (msg) => console.log("created message", msg) )
	//        .receive("error", (reasons) => console.log("create failed", reasons) )
	//        .receive("timeout", () => console.log("Networking issue...") )
	//     })
	//     channel.join()
	//       .receive("ok", ({messages}) => console.log("catching up", messages) )
	//       .receive("error", ({reason}) => console.log("failed join", reason) )
	//       .receive("timeout", () => console.log("Networking issue. Still waiting...") )
	//
	//
	// ## Joining
	//
	// Creating a channel with `socket.channel(topic, params)`, binds the params to
	// `channel.params`, which are sent up on `channel.join()`.
	// Subsequent rejoins will send up the modified params for
	// updating authorization params, or passing up last_message_id information.
	// Successful joins receive an "ok" status, while unsuccessful joins
	// receive "error".
	//
	//
	// ## Pushing Messages
	//
	// From the previous example, we can see that pushing messages to the server
	// can be done with `channel.push(eventName, payload)` and we can optionally
	// receive responses from the push. Additionally, we can use
	// `receive("timeout", callback)` to abort waiting for our other `receive` hooks
	//  and take action after some period of waiting. The default timeout is 5000ms.
	//
	//
	// ## Socket Hooks
	//
	// Lifecycle events of the multiplexed connection can be hooked into via
	// `socket.onError()` and `socket.onClose()` events, ie:
	//
	//     socket.onError( () => console.log("there was an error with the connection!") )
	//     socket.onClose( () => console.log("the connection dropped") )
	//
	//
	// ## Channel Hooks
	//
	// For each joined channel, you can bind to `onError` and `onClose` events
	// to monitor the channel lifecycle, ie:
	//
	//     channel.onError( () => console.log("there was an error!") )
	//     channel.onClose( () => console.log("the channel has gone away gracefully") )
	//
	// ### onError hooks
	//
	// `onError` hooks are invoked if the socket connection drops, or the channel
	// crashes on the server. In either case, a channel rejoin is attemtped
	// automatically in an exponential backoff manner.
	//
	// ### onClose hooks
	//
	// `onClose` hooks are invoked only in two cases. 1) the channel explicitly
	// closed on the server, or 2). The client explicitly closed, by calling
	// `channel.leave()`
	//

	var VSN = "1.0.0";
	var SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 };
	var DEFAULT_TIMEOUT = 10000;
	var CHANNEL_STATES = {
	  closed: "closed",
	  errored: "errored",
	  joined: "joined",
	  joining: "joining"
	};
	var CHANNEL_EVENTS = {
	  close: "phx_close",
	  error: "phx_error",
	  join: "phx_join",
	  reply: "phx_reply",
	  leave: "phx_leave"
	};
	var TRANSPORTS = {
	  longpoll: "longpoll",
	  websocket: "websocket"
	};

	var Push = function () {

	  // Initializes the Push
	  //
	  // channel - The Channel
	  // event - The event, for example `"phx_join"`
	  // payload - The payload, for example `{user_id: 123}`
	  // timeout - The push timeout in milliseconds
	  //

	  function Push(channel, event, payload, timeout) {
	    _classCallCheck(this, Push);

	    this.channel = channel;
	    this.event = event;
	    this.payload = payload || {};
	    this.receivedResp = null;
	    this.timeout = timeout;
	    this.timeoutTimer = null;
	    this.recHooks = [];
	    this.sent = false;
	  }

	  _createClass(Push, [{
	    key: "resend",
	    value: function resend(timeout) {
	      this.timeout = timeout;
	      this.cancelRefEvent();
	      this.ref = null;
	      this.refEvent = null;
	      this.receivedResp = null;
	      this.sent = false;
	      this.send();
	    }
	  }, {
	    key: "send",
	    value: function send() {
	      if (this.hasReceived("timeout")) {
	        return;
	      }
	      this.startTimeout();
	      this.sent = true;
	      this.channel.socket.push({
	        topic: this.channel.topic,
	        event: this.event,
	        payload: this.payload,
	        ref: this.ref
	      });
	    }
	  }, {
	    key: "receive",
	    value: function receive(status, callback) {
	      if (this.hasReceived(status)) {
	        callback(this.receivedResp.response);
	      }

	      this.recHooks.push({ status: status, callback: callback });
	      return this;
	    }

	    // private

	  }, {
	    key: "matchReceive",
	    value: function matchReceive(_ref) {
	      var status = _ref.status;
	      var response = _ref.response;
	      var ref = _ref.ref;

	      this.recHooks.filter(function (h) {
	        return h.status === status;
	      }).forEach(function (h) {
	        return h.callback(response);
	      });
	    }
	  }, {
	    key: "cancelRefEvent",
	    value: function cancelRefEvent() {
	      if (!this.refEvent) {
	        return;
	      }
	      this.channel.off(this.refEvent);
	    }
	  }, {
	    key: "cancelTimeout",
	    value: function cancelTimeout() {
	      clearTimeout(this.timeoutTimer);
	      this.timeoutTimer = null;
	    }
	  }, {
	    key: "startTimeout",
	    value: function startTimeout() {
	      var _this = this;

	      if (this.timeoutTimer) {
	        return;
	      }
	      this.ref = this.channel.socket.makeRef();
	      this.refEvent = this.channel.replyEventName(this.ref);

	      this.channel.on(this.refEvent, function (payload) {
	        _this.cancelRefEvent();
	        _this.cancelTimeout();
	        _this.receivedResp = payload;
	        _this.matchReceive(payload);
	      });

	      this.timeoutTimer = setTimeout(function () {
	        _this.trigger("timeout", {});
	      }, this.timeout);
	    }
	  }, {
	    key: "hasReceived",
	    value: function hasReceived(status) {
	      return this.receivedResp && this.receivedResp.status === status;
	    }
	  }, {
	    key: "trigger",
	    value: function trigger(status, response) {
	      this.channel.trigger(this.refEvent, { status: status, response: response });
	    }
	  }]);

	  return Push;
	}();

	var Channel = exports.Channel = function () {
	  function Channel(topic, params, socket) {
	    var _this2 = this;

	    _classCallCheck(this, Channel);

	    this.state = CHANNEL_STATES.closed;
	    this.topic = topic;
	    this.params = params || {};
	    this.socket = socket;
	    this.bindings = [];
	    this.timeout = this.socket.timeout;
	    this.joinedOnce = false;
	    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);
	    this.pushBuffer = [];
	    this.rejoinTimer = new Timer(function () {
	      return _this2.rejoinUntilConnected();
	    }, this.socket.reconnectAfterMs);
	    this.joinPush.receive("ok", function () {
	      _this2.state = CHANNEL_STATES.joined;
	      _this2.rejoinTimer.reset();
	      _this2.pushBuffer.forEach(function (pushEvent) {
	        return pushEvent.send();
	      });
	      _this2.pushBuffer = [];
	    });
	    this.onClose(function () {
	      _this2.socket.log("channel", "close " + _this2.topic);
	      _this2.state = CHANNEL_STATES.closed;
	      _this2.socket.remove(_this2);
	    });
	    this.onError(function (reason) {
	      _this2.socket.log("channel", "error " + _this2.topic, reason);
	      _this2.state = CHANNEL_STATES.errored;
	      _this2.rejoinTimer.scheduleTimeout();
	    });
	    this.joinPush.receive("timeout", function () {
	      if (_this2.state !== CHANNEL_STATES.joining) {
	        return;
	      }

	      _this2.socket.log("channel", "timeout " + _this2.topic, _this2.joinPush.timeout);
	      _this2.state = CHANNEL_STATES.errored;
	      _this2.rejoinTimer.scheduleTimeout();
	    });
	    this.on(CHANNEL_EVENTS.reply, function (payload, ref) {
	      _this2.trigger(_this2.replyEventName(ref), payload);
	    });
	  }

	  _createClass(Channel, [{
	    key: "rejoinUntilConnected",
	    value: function rejoinUntilConnected() {
	      this.rejoinTimer.scheduleTimeout();
	      if (this.socket.isConnected()) {
	        this.rejoin();
	      }
	    }
	  }, {
	    key: "join",
	    value: function join() {
	      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];

	      if (this.joinedOnce) {
	        throw "tried to join multiple times. 'join' can only be called a single time per channel instance";
	      } else {
	        this.joinedOnce = true;
	      }
	      this.rejoin(timeout);
	      return this.joinPush;
	    }
	  }, {
	    key: "onClose",
	    value: function onClose(callback) {
	      this.on(CHANNEL_EVENTS.close, callback);
	    }
	  }, {
	    key: "onError",
	    value: function onError(callback) {
	      this.on(CHANNEL_EVENTS.error, function (reason) {
	        return callback(reason);
	      });
	    }
	  }, {
	    key: "on",
	    value: function on(event, callback) {
	      this.bindings.push({ event: event, callback: callback });
	    }
	  }, {
	    key: "off",
	    value: function off(event) {
	      this.bindings = this.bindings.filter(function (bind) {
	        return bind.event !== event;
	      });
	    }
	  }, {
	    key: "canPush",
	    value: function canPush() {
	      return this.socket.isConnected() && this.state === CHANNEL_STATES.joined;
	    }
	  }, {
	    key: "push",
	    value: function push(event, payload) {
	      var timeout = arguments.length <= 2 || arguments[2] === undefined ? this.timeout : arguments[2];

	      if (!this.joinedOnce) {
	        throw "tried to push '" + event + "' to '" + this.topic + "' before joining. Use channel.join() before pushing events";
	      }
	      var pushEvent = new Push(this, event, payload, timeout);
	      if (this.canPush()) {
	        pushEvent.send();
	      } else {
	        pushEvent.startTimeout();
	        this.pushBuffer.push(pushEvent);
	      }

	      return pushEvent;
	    }

	    // Leaves the channel
	    //
	    // Unsubscribes from server events, and
	    // instructs channel to terminate on server
	    //
	    // Triggers onClose() hooks
	    //
	    // To receive leave acknowledgements, use the a `receive`
	    // hook to bind to the server ack, ie:
	    //
	    //     channel.leave().receive("ok", () => alert("left!") )
	    //

	  }, {
	    key: "leave",
	    value: function leave() {
	      var _this3 = this;

	      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];

	      var onClose = function onClose() {
	        _this3.socket.log("channel", "leave " + _this3.topic);
	        _this3.trigger(CHANNEL_EVENTS.close, "leave");
	      };
	      var leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);
	      leavePush.receive("ok", function () {
	        return onClose();
	      }).receive("timeout", function () {
	        return onClose();
	      });
	      leavePush.send();
	      if (!this.canPush()) {
	        leavePush.trigger("ok", {});
	      }

	      return leavePush;
	    }

	    // Overridable message hook
	    //
	    // Receives all events for specialized message handling

	  }, {
	    key: "onMessage",
	    value: function onMessage(event, payload, ref) {}

	    // private

	  }, {
	    key: "isMember",
	    value: function isMember(topic) {
	      return this.topic === topic;
	    }
	  }, {
	    key: "sendJoin",
	    value: function sendJoin(timeout) {
	      this.state = CHANNEL_STATES.joining;
	      this.joinPush.resend(timeout);
	    }
	  }, {
	    key: "rejoin",
	    value: function rejoin() {
	      var timeout = arguments.length <= 0 || arguments[0] === undefined ? this.timeout : arguments[0];
	      this.sendJoin(timeout);
	    }
	  }, {
	    key: "trigger",
	    value: function trigger(triggerEvent, payload, ref) {
	      this.onMessage(triggerEvent, payload, ref);
	      this.bindings.filter(function (bind) {
	        return bind.event === triggerEvent;
	      }).map(function (bind) {
	        return bind.callback(payload, ref);
	      });
	    }
	  }, {
	    key: "replyEventName",
	    value: function replyEventName(ref) {
	      return "chan_reply_" + ref;
	    }
	  }]);

	  return Channel;
	}();

	var Socket = exports.Socket = function () {

	  // Initializes the Socket
	  //
	  // endPoint - The string WebSocket endpoint, ie, "ws://example.com/ws",
	  //                                               "wss://example.com"
	  //                                               "/ws" (inherited host & protocol)
	  // opts - Optional configuration
	  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.
	  //               Defaults to WebSocket with automatic LongPoll fallback.
	  //   timeout - The default timeout in milliseconds to trigger push timeouts.
	  //             Defaults `DEFAULT_TIMEOUT`
	  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message
	  //   reconnectAfterMs - The optional function that returns the millsec
	  //                      reconnect interval. Defaults to stepped backoff of:
	  //
	  //     function(tries){
	  //       return [1000, 5000, 10000][tries - 1] || 10000
	  //     }
	  //
	  //   logger - The optional function for specialized logging, ie:
	  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }
	  //
	  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.
	  //                        Defaults to 20s (double the server long poll timer).
	  //
	  //   params - The optional params to pass when connecting
	  //
	  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)
	  //

	  function Socket(endPoint) {
	    var _this4 = this;

	    var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    _classCallCheck(this, Socket);

	    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };
	    this.channels = [];
	    this.sendBuffer = [];
	    this.ref = 0;
	    this.timeout = opts.timeout || DEFAULT_TIMEOUT;
	    this.transport = opts.transport || window.WebSocket || LongPoll;
	    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000;
	    this.reconnectAfterMs = opts.reconnectAfterMs || function (tries) {
	      return [1000, 2000, 5000, 10000][tries - 1] || 10000;
	    };
	    this.logger = opts.logger || function () {}; // noop
	    this.longpollerTimeout = opts.longpollerTimeout || 20000;
	    this.params = opts.params || {};
	    this.endPoint = endPoint + "/" + TRANSPORTS.websocket;
	    this.reconnectTimer = new Timer(function () {
	      _this4.disconnect(function () {
	        return _this4.connect();
	      });
	    }, this.reconnectAfterMs);
	  }

	  _createClass(Socket, [{
	    key: "protocol",
	    value: function protocol() {
	      return location.protocol.match(/^https/) ? "wss" : "ws";
	    }
	  }, {
	    key: "endPointURL",
	    value: function endPointURL() {
	      var uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params), { vsn: VSN });
	      if (uri.charAt(0) !== "/") {
	        return uri;
	      }
	      if (uri.charAt(1) === "/") {
	        return this.protocol() + ":" + uri;
	      }

	      return this.protocol() + "://" + location.host + uri;
	    }
	  }, {
	    key: "disconnect",
	    value: function disconnect(callback, code, reason) {
	      if (this.conn) {
	        this.conn.onclose = function () {}; // noop
	        if (code) {
	          this.conn.close(code, reason || "");
	        } else {
	          this.conn.close();
	        }
	        this.conn = null;
	      }
	      callback && callback();
	    }

	    // params - The params to send when connecting, for example `{user_id: userToken}`

	  }, {
	    key: "connect",
	    value: function connect(params) {
	      var _this5 = this;

	      if (params) {
	        console && console.log("passing params to connect is deprecated. Instead pass :params to the Socket constructor");
	        this.params = params;
	      }
	      if (this.conn) {
	        return;
	      }

	      this.conn = new this.transport(this.endPointURL());
	      this.conn.timeout = this.longpollerTimeout;
	      this.conn.onopen = function () {
	        return _this5.onConnOpen();
	      };
	      this.conn.onerror = function (error) {
	        return _this5.onConnError(error);
	      };
	      this.conn.onmessage = function (event) {
	        return _this5.onConnMessage(event);
	      };
	      this.conn.onclose = function (event) {
	        return _this5.onConnClose(event);
	      };
	    }

	    // Logs the message. Override `this.logger` for specialized logging. noops by default

	  }, {
	    key: "log",
	    value: function log(kind, msg, data) {
	      this.logger(kind, msg, data);
	    }

	    // Registers callbacks for connection state change events
	    //
	    // Examples
	    //
	    //    socket.onError(function(error){ alert("An error occurred") })
	    //

	  }, {
	    key: "onOpen",
	    value: function onOpen(callback) {
	      this.stateChangeCallbacks.open.push(callback);
	    }
	  }, {
	    key: "onClose",
	    value: function onClose(callback) {
	      this.stateChangeCallbacks.close.push(callback);
	    }
	  }, {
	    key: "onError",
	    value: function onError(callback) {
	      this.stateChangeCallbacks.error.push(callback);
	    }
	  }, {
	    key: "onMessage",
	    value: function onMessage(callback) {
	      this.stateChangeCallbacks.message.push(callback);
	    }
	  }, {
	    key: "onConnOpen",
	    value: function onConnOpen() {
	      var _this6 = this;

	      this.log("transport", "connected to " + this.endPointURL(), this.transport.prototype);
	      this.flushSendBuffer();
	      this.reconnectTimer.reset();
	      if (!this.conn.skipHeartbeat) {
	        clearInterval(this.heartbeatTimer);
	        this.heartbeatTimer = setInterval(function () {
	          return _this6.sendHeartbeat();
	        }, this.heartbeatIntervalMs);
	      }
	      this.stateChangeCallbacks.open.forEach(function (callback) {
	        return callback();
	      });
	    }
	  }, {
	    key: "onConnClose",
	    value: function onConnClose(event) {
	      this.log("transport", "close", event);
	      this.triggerChanError();
	      clearInterval(this.heartbeatTimer);
	      this.reconnectTimer.scheduleTimeout();
	      this.stateChangeCallbacks.close.forEach(function (callback) {
	        return callback(event);
	      });
	    }
	  }, {
	    key: "onConnError",
	    value: function onConnError(error) {
	      this.log("transport", error);
	      this.triggerChanError();
	      this.stateChangeCallbacks.error.forEach(function (callback) {
	        return callback(error);
	      });
	    }
	  }, {
	    key: "triggerChanError",
	    value: function triggerChanError() {
	      this.channels.forEach(function (channel) {
	        return channel.trigger(CHANNEL_EVENTS.error);
	      });
	    }
	  }, {
	    key: "connectionState",
	    value: function connectionState() {
	      switch (this.conn && this.conn.readyState) {
	        case SOCKET_STATES.connecting:
	          return "connecting";
	        case SOCKET_STATES.open:
	          return "open";
	        case SOCKET_STATES.closing:
	          return "closing";
	        default:
	          return "closed";
	      }
	    }
	  }, {
	    key: "isConnected",
	    value: function isConnected() {
	      return this.connectionState() === "open";
	    }
	  }, {
	    key: "remove",
	    value: function remove(channel) {
	      this.channels = this.channels.filter(function (c) {
	        return !c.isMember(channel.topic);
	      });
	    }
	  }, {
	    key: "channel",
	    value: function channel(topic) {
	      var chanParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var chan = new Channel(topic, chanParams, this);
	      this.channels.push(chan);
	      return chan;
	    }
	  }, {
	    key: "push",
	    value: function push(data) {
	      var _this7 = this;

	      var topic = data.topic;
	      var event = data.event;
	      var payload = data.payload;
	      var ref = data.ref;

	      var callback = function callback() {
	        return _this7.conn.send(JSON.stringify(data));
	      };
	      this.log("push", topic + " " + event + " (" + ref + ")", payload);
	      if (this.isConnected()) {
	        callback();
	      } else {
	        this.sendBuffer.push(callback);
	      }
	    }

	    // Return the next message ref, accounting for overflows

	  }, {
	    key: "makeRef",
	    value: function makeRef() {
	      var newRef = this.ref + 1;
	      if (newRef === this.ref) {
	        this.ref = 0;
	      } else {
	        this.ref = newRef;
	      }

	      return this.ref.toString();
	    }
	  }, {
	    key: "sendHeartbeat",
	    value: function sendHeartbeat() {
	      if (!this.isConnected()) {
	        return;
	      }
	      this.push({ topic: "phoenix", event: "heartbeat", payload: {}, ref: this.makeRef() });
	    }
	  }, {
	    key: "flushSendBuffer",
	    value: function flushSendBuffer() {
	      if (this.isConnected() && this.sendBuffer.length > 0) {
	        this.sendBuffer.forEach(function (callback) {
	          return callback();
	        });
	        this.sendBuffer = [];
	      }
	    }
	  }, {
	    key: "onConnMessage",
	    value: function onConnMessage(rawMessage) {
	      var msg = JSON.parse(rawMessage.data);
	      var topic = msg.topic;
	      var event = msg.event;
	      var payload = msg.payload;
	      var ref = msg.ref;

	      this.log("receive", (payload.status || "") + " " + topic + " " + event + " " + (ref && "(" + ref + ")" || ""), payload);
	      this.channels.filter(function (channel) {
	        return channel.isMember(topic);
	      }).forEach(function (channel) {
	        return channel.trigger(event, payload, ref);
	      });
	      this.stateChangeCallbacks.message.forEach(function (callback) {
	        return callback(msg);
	      });
	    }
	  }]);

	  return Socket;
	}();

	var LongPoll = exports.LongPoll = function () {
	  function LongPoll(endPoint) {
	    _classCallCheck(this, LongPoll);

	    this.endPoint = null;
	    this.token = null;
	    this.skipHeartbeat = true;
	    this.onopen = function () {}; // noop
	    this.onerror = function () {}; // noop
	    this.onmessage = function () {}; // noop
	    this.onclose = function () {}; // noop
	    this.pollEndpoint = this.normalizeEndpoint(endPoint);
	    this.readyState = SOCKET_STATES.connecting;

	    this.poll();
	  }

	  _createClass(LongPoll, [{
	    key: "normalizeEndpoint",
	    value: function normalizeEndpoint(endPoint) {
	      return endPoint.replace("ws://", "http://").replace("wss://", "https://").replace(new RegExp("(.*)\/" + TRANSPORTS.websocket), "$1/" + TRANSPORTS.longpoll);
	    }
	  }, {
	    key: "endpointURL",
	    value: function endpointURL() {
	      return Ajax.appendParams(this.pollEndpoint, { token: this.token });
	    }
	  }, {
	    key: "closeAndRetry",
	    value: function closeAndRetry() {
	      this.close();
	      this.readyState = SOCKET_STATES.connecting;
	    }
	  }, {
	    key: "ontimeout",
	    value: function ontimeout() {
	      this.onerror("timeout");
	      this.closeAndRetry();
	    }
	  }, {
	    key: "poll",
	    value: function poll() {
	      var _this8 = this;

	      if (!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)) {
	        return;
	      }

	      Ajax.request("GET", this.endpointURL(), "application/json", null, this.timeout, this.ontimeout.bind(this), function (resp) {
	        if (resp) {
	          var status = resp.status;
	          var token = resp.token;
	          var messages = resp.messages;

	          _this8.token = token;
	        } else {
	          var status = 0;
	        }

	        switch (status) {
	          case 200:
	            messages.forEach(function (msg) {
	              return _this8.onmessage({ data: JSON.stringify(msg) });
	            });
	            _this8.poll();
	            break;
	          case 204:
	            _this8.poll();
	            break;
	          case 410:
	            _this8.readyState = SOCKET_STATES.open;
	            _this8.onopen();
	            _this8.poll();
	            break;
	          case 0:
	          case 500:
	            _this8.onerror();
	            _this8.closeAndRetry();
	            break;
	          default:
	            throw "unhandled poll status " + status;
	        }
	      });
	    }
	  }, {
	    key: "send",
	    value: function send(body) {
	      var _this9 = this;

	      Ajax.request("POST", this.endpointURL(), "application/json", body, this.timeout, this.onerror.bind(this, "timeout"), function (resp) {
	        if (!resp || resp.status !== 200) {
	          _this9.onerror(status);
	          _this9.closeAndRetry();
	        }
	      });
	    }
	  }, {
	    key: "close",
	    value: function close(code, reason) {
	      this.readyState = SOCKET_STATES.closed;
	      this.onclose();
	    }
	  }]);

	  return LongPoll;
	}();

	var Ajax = exports.Ajax = function () {
	  function Ajax() {
	    _classCallCheck(this, Ajax);
	  }

	  _createClass(Ajax, null, [{
	    key: "request",
	    value: function request(method, endPoint, accept, body, timeout, ontimeout, callback) {
	      if (window.XDomainRequest) {
	        var req = new XDomainRequest(); // IE8, IE9
	        this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback);
	      } else {
	        var req = window.XMLHttpRequest ? new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari
	        new ActiveXObject("Microsoft.XMLHTTP"); // IE6, IE5
	        this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback);
	      }
	    }
	  }, {
	    key: "xdomainRequest",
	    value: function xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {
	      var _this10 = this;

	      req.timeout = timeout;
	      req.open(method, endPoint);
	      req.onload = function () {
	        var response = _this10.parseJSON(req.responseText);
	        callback && callback(response);
	      };
	      if (ontimeout) {
	        req.ontimeout = ontimeout;
	      }

	      // Work around bug in IE9 that requires an attached onprogress handler
	      req.onprogress = function () {};

	      req.send(body);
	    }
	  }, {
	    key: "xhrRequest",
	    value: function xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback) {
	      var _this11 = this;

	      req.timeout = timeout;
	      req.open(method, endPoint, true);
	      req.setRequestHeader("Content-Type", accept);
	      req.onerror = function () {
	        callback && callback(null);
	      };
	      req.onreadystatechange = function () {
	        if (req.readyState === _this11.states.complete && callback) {
	          var response = _this11.parseJSON(req.responseText);
	          callback(response);
	        }
	      };
	      if (ontimeout) {
	        req.ontimeout = ontimeout;
	      }

	      req.send(body);
	    }
	  }, {
	    key: "parseJSON",
	    value: function parseJSON(resp) {
	      return resp && resp !== "" ? JSON.parse(resp) : null;
	    }
	  }, {
	    key: "serialize",
	    value: function serialize(obj, parentKey) {
	      var queryStr = [];
	      for (var key in obj) {
	        if (!obj.hasOwnProperty(key)) {
	          continue;
	        }
	        var paramKey = parentKey ? parentKey + "[" + key + "]" : key;
	        var paramVal = obj[key];
	        if ((typeof paramVal === "undefined" ? "undefined" : _typeof(paramVal)) === "object") {
	          queryStr.push(this.serialize(paramVal, paramKey));
	        } else {
	          queryStr.push(encodeURIComponent(paramKey) + "=" + encodeURIComponent(paramVal));
	        }
	      }
	      return queryStr.join("&");
	    }
	  }, {
	    key: "appendParams",
	    value: function appendParams(url, params) {
	      if (Object.keys(params).length === 0) {
	        return url;
	      }

	      var prefix = url.match(/\?/) ? "&" : "?";
	      return "" + url + prefix + this.serialize(params);
	    }
	  }]);

	  return Ajax;
	}();

	Ajax.states = { complete: 4 };

	// Creates a timer that accepts a `timerCalc` function to perform
	// calculated timeout retries, such as exponential backoff.
	//
	// ## Examples
	//
	//    let reconnectTimer = new Timer(() => this.connect(), function(tries){
	//      return [1000, 5000, 10000][tries - 1] || 10000
	//    })
	//    reconnectTimer.scheduleTimeout() // fires after 1000
	//    reconnectTimer.scheduleTimeout() // fires after 5000
	//    reconnectTimer.reset()
	//    reconnectTimer.scheduleTimeout() // fires after 1000
	//

	var Timer = function () {
	  function Timer(callback, timerCalc) {
	    _classCallCheck(this, Timer);

	    this.callback = callback;
	    this.timerCalc = timerCalc;
	    this.timer = null;
	    this.tries = 0;
	  }

	  _createClass(Timer, [{
	    key: "reset",
	    value: function reset() {
	      this.tries = 0;
	      clearTimeout(this.timer);
	    }

	    // Cancels any previous scheduleTimeout and schedules callback

	  }, {
	    key: "scheduleTimeout",
	    value: function scheduleTimeout() {
	      var _this12 = this;

	      clearTimeout(this.timer);

	      this.timer = setTimeout(function () {
	        _this12.tries = _this12.tries + 1;
	        _this12.callback();
	      }, this.timerCalc(this.tries + 1));
	    }
	  }]);

	  return Timer;
	}();


	})( false ? window.Phoenix = window.Phoenix || {} : exports);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Coroutine = __webpack_require__(156);
	var Control_Coroutine_Aff = __webpack_require__(155);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Aff_AVar = __webpack_require__(157);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Control_Monad_Eff_Var = __webpack_require__(250);
	var Data_Array = __webpack_require__(122);
	var Data_Either = __webpack_require__(58);
	var Data_Maybe = __webpack_require__(72);
	var Halogen = __webpack_require__(114);
	var Halogen_HTML_Indexed = __webpack_require__(234);
	var Halogen_Util = __webpack_require__(240);
	var WebSocket = __webpack_require__(259);
	var Control_Bind = __webpack_require__(17);
	var Data_Function = __webpack_require__(10);
	var Halogen_Query = __webpack_require__(196);
	var Control_Applicative = __webpack_require__(5);
	var Halogen_HTML_Elements = __webpack_require__(236);
	var Data_Functor = __webpack_require__(8);
	var Halogen_HTML = __webpack_require__(235);
	var Control_Monad_Free = __webpack_require__(116);
	var Halogen_Component = __webpack_require__(115);
	var Halogen_Driver = __webpack_require__(197);
	var Data_Unit = __webpack_require__(13);
	var AddMessage = function () {
	    function AddMessage(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    AddMessage.create = function (value0) {
	        return function (value1) {
	            return new AddMessage(value0, value1);
	        };
	    };
	    return AddMessage;
	}();
	var wsProducer = Control_Coroutine_Aff.produce(function (emit) {
	    return function __do() {
	        var v = WebSocket.newWebSocket("ws://echo.websocket.org")([])();
	        Control_Monad_Eff_Var.set(Control_Monad_Eff_Var.settableSettableVar)(v.onopen)(function (event) {
	            return function __do() {
	                v.send("hello")();
	                v.send("something")();
	                return v.send("goodbye")();
	            };
	        })();
	        return Control_Monad_Eff_Var.set(Control_Monad_Eff_Var.settableSettableVar)(v.onmessage)(function (event) {
	            return Data_Function.apply(emit)(Data_Function.apply(Data_Either.Left.create)(WebSocket.runMessage(WebSocket.runMessageEvent(event))));
	        })();
	    };
	});
	var wsConsumer = function wsConsumer(driver) {
	    return Control_Coroutine.consumer(Control_Monad_Aff.monadAff)(function (msg) {
	        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(driver)(Data_Function.apply(Halogen_Query.action)(AddMessage.create(msg))))(function () {
	            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
	        });
	    });
	};
	var ui = function () {
	    var render = function render(state) {
	        return Data_Function.apply(Halogen_HTML_Elements.ol_)(Data_Functor.map(Data_Functor.functorArray)(function (msg) {
	            return Halogen_HTML_Elements.li_([Halogen_HTML.text(msg)]);
	        })(state.messages));
	    };
	    var $$eval = function $$eval(v) {
	        return Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.modify(function (st) {
	            return {
	                messages: Data_Array.snoc(st.messages)(v.value0)
	            };
	        }))(function () {
	            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value1);
	        });
	    };
	    return Halogen_Component.component({
	        render: render,
	        "eval": $$eval
	    });
	}();
	var initialState = {
	    messages: []
	};
	var main = Halogen_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Util.awaitBody)(function (v) {
	    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Driver.runUI(ui)(initialState)(v))(function (v1) {
	        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.connect(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.monadParAff)(wsProducer)(wsConsumer(v1))))(function () {
	            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
	        });
	    });
	}));
	module.exports = {
	    AddMessage: AddMessage,
	    initialState: initialState,
	    main: main,
	    ui: ui,
	    wsConsumer: wsConsumer,
	    wsProducer: wsProducer
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Category = __webpack_require__(11);
	var Control_Monad = __webpack_require__(19);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Boolean = __webpack_require__(20);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Bounded = __webpack_require__(24);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Eq = __webpack_require__(28);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Field = __webpack_require__(43);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_NaturalTransformation = __webpack_require__(44);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Data_Ring = __webpack_require__(36);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Data_Unit = __webpack_require__(13);
	var Data_Void = __webpack_require__(30);
	module.exports = {};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Apply = __webpack_require__(6);
	var Data_Functor = __webpack_require__(8);
	var Data_Unit = __webpack_require__(13);
	var Applicative = function Applicative(__superclass_Control$dotApply$dotApply_0, pure) {
	    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
	    this.pure = pure;
	};
	var pure = function pure(dict) {
	    return dict.pure;
	};
	var unless = function unless(dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (!v) {
	                return v1;
	            };
	            if (v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var when = function when(dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v) {
	                return v1;
	            };
	            if (!v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var liftA1 = function liftA1(dictApplicative) {
	    return function (f) {
	        return function (a) {
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
	        };
	    };
	};
	var applicativeFn = new Applicative(function () {
	    return Control_Apply.applyFn;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	var applicativeArray = new Applicative(function () {
	    return Control_Apply.applyArray;
	}, function (x) {
	    return [x];
	});
	module.exports = {
	    Applicative: Applicative,
	    liftA1: liftA1,
	    pure: pure,
	    unless: unless,
	    when: when,
	    applicativeFn: applicativeFn,
	    applicativeArray: applicativeArray
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(7);
	var Data_Functor = __webpack_require__(8);
	var Data_Function = __webpack_require__(10);
	var Control_Category = __webpack_require__(11);
	var Apply = function Apply(__superclass_Data$dotFunctor$dotFunctor_0, apply) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.apply = apply;
	};
	var applyFn = new Apply(function () {
	    return Data_Functor.functorFn;
	}, function (f) {
	    return function (g) {
	        return function (x) {
	            return f(x)(g(x));
	        };
	    };
	});
	var applyArray = new Apply(function () {
	    return Data_Functor.functorArray;
	}, $foreign.arrayApply);
	var apply = function apply(dict) {
	    return dict.apply;
	};
	var applyFirst = function applyFirst(dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"])(a))(b);
	        };
	    };
	};
	var applySecond = function applySecond(dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
	        };
	    };
	};
	var lift2 = function lift2(dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
	            };
	        };
	    };
	};
	var lift3 = function lift3(dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c);
	                };
	            };
	        };
	    };
	};
	var lift4 = function lift4(dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d);
	                    };
	                };
	            };
	        };
	    };
	};
	var lift5 = function lift5(dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return function (e) {
	                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d))(e);
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Apply: Apply,
	    apply: apply,
	    applyFirst: applyFirst,
	    applySecond: applySecond,
	    lift2: lift2,
	    lift3: lift3,
	    lift4: lift4,
	    lift5: lift5,
	    applyFn: applyFn,
	    applyArray: applyArray
	};

/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";

	// module Control.Apply

	exports.arrayApply = function (fs) {
	  return function (xs) {
	    var result = [];
	    var n = 0;
	    for (var i = 0, l = fs.length; i < l; i++) {
	      for (var j = 0, k = xs.length; j < k; j++) {
	        result[n++] = fs[i](xs[j]);
	      }
	    }
	    return result;
	  };
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(9);
	var Data_Function = __webpack_require__(10);
	var Data_Unit = __webpack_require__(13);
	var Control_Semigroupoid = __webpack_require__(12);
	var Functor = function Functor(map) {
	    this.map = map;
	};
	var map = function map(dict) {
	    return dict.map;
	};
	var mapFlipped = function mapFlipped(dictFunctor) {
	    return function (fa) {
	        return function (f) {
	            return map(dictFunctor)(f)(fa);
	        };
	    };
	};
	var $$void = function $$void(dictFunctor) {
	    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
	};
	var voidLeft = function voidLeft(dictFunctor) {
	    return function (f) {
	        return function (x) {
	            return map(dictFunctor)(Data_Function["const"](x))(f);
	        };
	    };
	};
	var voidRight = function voidRight(dictFunctor) {
	    return function (x) {
	        return map(dictFunctor)(Data_Function["const"](x));
	    };
	};
	var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
	var functorArray = new Functor($foreign.arrayMap);
	module.exports = {
	    Functor: Functor,
	    map: map,
	    mapFlipped: mapFlipped,
	    "void": $$void,
	    voidLeft: voidLeft,
	    voidRight: voidRight,
	    functorFn: functorFn,
	    functorArray: functorArray
	};

/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Functor

	exports.arrayMap = function (f) {
	  return function (arr) {
	    var l = arr.length;
	    var result = new Array(l);
	    for (var i = 0; i < l; i++) {
	      result[i] = f(arr[i]);
	    }
	    return result;
	  };
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Category = __webpack_require__(11);
	var on = function on(f) {
	    return function (g) {
	        return function (x) {
	            return function (y) {
	                return f(g(x))(g(y));
	            };
	        };
	    };
	};
	var flip = function flip(f) {
	    return function (b) {
	        return function (a) {
	            return f(a)(b);
	        };
	    };
	};
	var $$const = function $$const(a) {
	    return function (v) {
	        return a;
	    };
	};
	var applyFlipped = function applyFlipped(x) {
	    return function (f) {
	        return f(x);
	    };
	};
	var apply = function apply(f) {
	    return function (x) {
	        return f(x);
	    };
	};
	module.exports = {
	    apply: apply,
	    applyFlipped: applyFlipped,
	    "const": $$const,
	    flip: flip,
	    on: on
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Semigroupoid = __webpack_require__(12);
	var Category = function Category(__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
	    this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
	    this.id = id;
	};
	var id = function id(dict) {
	    return dict.id;
	};
	var categoryFn = new Category(function () {
	    return Control_Semigroupoid.semigroupoidFn;
	}, function (x) {
	    return x;
	});
	module.exports = {
	    Category: Category,
	    id: id,
	    categoryFn: categoryFn
	};

/***/ },
/* 12 */
/***/ function(module, exports) {

	// Generated by psc version 0.9.1
	"use strict";

	var Semigroupoid = function Semigroupoid(compose) {
	    this.compose = compose;
	};
	var semigroupoidFn = new Semigroupoid(function (f) {
	    return function (g) {
	        return function (x) {
	            return f(g(x));
	        };
	    };
	});
	var compose = function compose(dict) {
	    return dict.compose;
	};
	var composeFlipped = function composeFlipped(dictSemigroupoid) {
	    return function (f) {
	        return function (g) {
	            return compose(dictSemigroupoid)(g)(f);
	        };
	    };
	};
	module.exports = {
	    Semigroupoid: Semigroupoid,
	    compose: compose,
	    composeFlipped: composeFlipped,
	    semigroupoidFn: semigroupoidFn
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(14);
	var Data_Show = __webpack_require__(15);
	var showUnit = new Data_Show.Show(function (v) {
	    return "unit";
	});
	module.exports = {
	    showUnit: showUnit,
	    unit: $foreign.unit
	};

/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Unit

	exports.unit = {};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(16);
	var Show = function Show(show) {
	    this.show = show;
	};
	var showString = new Show($foreign.showStringImpl);
	var showNumber = new Show($foreign.showNumberImpl);
	var showInt = new Show($foreign.showIntImpl);
	var showChar = new Show($foreign.showCharImpl);
	var showBoolean = new Show(function (v) {
	    if (v) {
	        return "true";
	    };
	    if (!v) {
	        return "false";
	    };
	    throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [v.constructor.name]);
	});
	var show = function show(dict) {
	    return dict.show;
	};
	var showArray = function showArray(dictShow) {
	    return new Show($foreign.showArrayImpl(show(dictShow)));
	};
	module.exports = {
	    Show: Show,
	    show: show,
	    showBoolean: showBoolean,
	    showInt: showInt,
	    showNumber: showNumber,
	    showChar: showChar,
	    showString: showString,
	    showArray: showArray
	};

/***/ },
/* 16 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Show

	exports.showIntImpl = function (n) {
	  return n.toString();
	};

	exports.showNumberImpl = function (n) {
	  var str = n.toString();
	  return isNaN(str + ".0") ? str : str + ".0";
	};

	exports.showCharImpl = function (c) {
	  var code = c.charCodeAt(0);
	  if (code < 0x20 || code === 0x7F) {
	    switch (c) {
	      case "\x07":
	        return "'\\a'";
	      case "\b":
	        return "'\\b'";
	      case "\f":
	        return "'\\f'";
	      case "\n":
	        return "'\\n'";
	      case "\r":
	        return "'\\r'";
	      case "\t":
	        return "'\\t'";
	      case "\v":
	        return "'\\v'";
	    }
	    return "'\\" + code.toString(10) + "'";
	  }
	  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
	};

	exports.showStringImpl = function (s) {
	  var l = s.length;
	  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, function (c, i) {
	    // jshint ignore:line
	    switch (c) {
	      case "\"":
	      case "\\":
	        return "\\" + c;
	      case "\x07":
	        return "\\a";
	      case "\b":
	        return "\\b";
	      case "\f":
	        return "\\f";
	      case "\n":
	        return "\\n";
	      case "\r":
	        return "\\r";
	      case "\t":
	        return "\\t";
	      case "\v":
	        return "\\v";
	    }
	    var k = i + 1;
	    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
	    return "\\" + c.charCodeAt(0).toString(10) + empty;
	  }) + "\"";
	};

	exports.showArrayImpl = function (f) {
	  return function (xs) {
	    var ss = [];
	    for (var i = 0, l = xs.length; i < l; i++) {
	      ss[i] = f(xs[i]);
	    }
	    return "[" + ss.join(",") + "]";
	  };
	};

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Category = __webpack_require__(11);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Bind = function Bind(__superclass_Control$dotApply$dotApply_0, bind) {
	    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
	    this.bind = bind;
	};
	var bindFn = new Bind(function () {
	    return Control_Apply.applyFn;
	}, function (m) {
	    return function (f) {
	        return function (x) {
	            return f(m(x))(x);
	        };
	    };
	});
	var bindArray = new Bind(function () {
	    return Control_Apply.applyArray;
	}, $foreign.arrayBind);
	var bind = function bind(dict) {
	    return dict.bind;
	};
	var bindFlipped = function bindFlipped(dictBind) {
	    return Data_Function.flip(bind(dictBind));
	};
	var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bindFlipped(dictBind)(f)(g(a));
	            };
	        };
	    };
	};
	var composeKleisli = function composeKleisli(dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bind(dictBind)(f(a))(g);
	            };
	        };
	    };
	};
	var ifM = function ifM(dictBind) {
	    return function (cond) {
	        return function (t) {
	            return function (f) {
	                return bind(dictBind)(cond)(function (cond$prime) {
	                    if (cond$prime) {
	                        return t;
	                    };
	                    if (!cond$prime) {
	                        return f;
	                    };
	                    throw new Error("Failed pattern match at Control.Bind line 103, column 35 - line 103, column 56: " + [cond$prime.constructor.name]);
	                });
	            };
	        };
	    };
	};
	var join = function join(dictBind) {
	    return function (m) {
	        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Bind: Bind,
	    bind: bind,
	    bindFlipped: bindFlipped,
	    composeKleisli: composeKleisli,
	    composeKleisliFlipped: composeKleisliFlipped,
	    ifM: ifM,
	    join: join,
	    bindFn: bindFn,
	    bindArray: bindArray
	};

/***/ },
/* 18 */
/***/ function(module, exports) {

	"use strict";

	// module Control.Bind

	exports.arrayBind = function (arr) {
	  return function (f) {
	    var result = [];
	    for (var i = 0, l = arr.length; i < l; i++) {
	      Array.prototype.push.apply(result, f(arr[i]));
	    }
	    return result;
	  };
	};

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Data_Functor = __webpack_require__(8);
	var Monad = function Monad(__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
	    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
	    this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
	};
	var monadFn = new Monad(function () {
	    return Control_Applicative.applicativeFn;
	}, function () {
	    return Control_Bind.bindFn;
	});
	var monadArray = new Monad(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Bind.bindArray;
	});
	var liftM1 = function liftM1(dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f(v));
	            });
	        };
	    };
	};
	var ap = function ap(dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
	                });
	            });
	        };
	    };
	};
	module.exports = {
	    Monad: Monad,
	    ap: ap,
	    liftM1: liftM1,
	    monadFn: monadFn,
	    monadArray: monadArray
	};

/***/ },
/* 20 */
/***/ function(module, exports) {

	// Generated by psc version 0.9.1
	"use strict";

	var otherwise = true;
	module.exports = {
	    otherwise: otherwise
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Unit = __webpack_require__(13);
	var BooleanAlgebra = function BooleanAlgebra(__superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0) {
	    this["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"] = __superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0;
	};
	var booleanAlgebraUnit = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraUnit;
	});
	var booleanAlgebraBoolean = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraBoolean;
	});
	module.exports = {
	    BooleanAlgebra: BooleanAlgebra,
	    booleanAlgebraBoolean: booleanAlgebraBoolean,
	    booleanAlgebraUnit: booleanAlgebraUnit
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(23);
	var Data_Unit = __webpack_require__(13);
	var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
	    this.conj = conj;
	    this.disj = disj;
	    this.ff = ff;
	    this.implies = implies;
	    this.not = not;
	    this.tt = tt;
	};
	var tt = function tt(dict) {
	    return dict.tt;
	};
	var not = function not(dict) {
	    return dict.not;
	};
	var implies = function implies(dict) {
	    return dict.implies;
	};
	var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return Data_Unit.unit;
	}, Data_Unit.unit);
	var ff = function ff(dict) {
	    return dict.ff;
	};
	var disj = function disj(dict) {
	    return dict.disj;
	};
	var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
	    return function (b) {
	        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
	    };
	}, $foreign.boolNot, true);
	var conj = function conj(dict) {
	    return dict.conj;
	};
	var heytingAlgebraFunction = function heytingAlgebraFunction(dictHeytingAlgebra) {
	    return new HeytingAlgebra(function (f) {
	        return function (g) {
	            return function (a) {
	                return conj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return disj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (v) {
	        return ff(dictHeytingAlgebra);
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return implies(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (a) {
	            return not(dictHeytingAlgebra)(f(a));
	        };
	    }, function (v) {
	        return tt(dictHeytingAlgebra);
	    });
	};
	module.exports = {
	    HeytingAlgebra: HeytingAlgebra,
	    conj: conj,
	    disj: disj,
	    ff: ff,
	    implies: implies,
	    not: not,
	    tt: tt,
	    heytingAlgebraBoolean: heytingAlgebraBoolean,
	    heytingAlgebraUnit: heytingAlgebraUnit,
	    heytingAlgebraFunction: heytingAlgebraFunction
	};

/***/ },
/* 23 */
/***/ function(module, exports) {

	"use strict";

	// module Data.HeytingAlgebra

	exports.boolConj = function (b1) {
	  return function (b2) {
	    return b1 && b2;
	  };
	};

	exports.boolDisj = function (b1) {
	  return function (b2) {
	    return b1 || b2;
	  };
	};

	exports.boolNot = function (b) {
	  return !b;
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(25);
	var Data_Ord = __webpack_require__(26);
	var Data_Unit = __webpack_require__(13);
	var Data_Ordering = __webpack_require__(33);
	var Bounded = function Bounded(__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
	    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
	    this.bottom = bottom;
	    this.top = top;
	};
	var top = function top(dict) {
	    return dict.top;
	};
	var boundedUnit = new Bounded(function () {
	    return Data_Ord.ordUnit;
	}, Data_Unit.unit, Data_Unit.unit);
	var boundedOrdering = new Bounded(function () {
	    return Data_Ord.ordOrdering;
	}, Data_Ordering.LT.value, Data_Ordering.GT.value);
	var boundedInt = new Bounded(function () {
	    return Data_Ord.ordInt;
	}, $foreign.bottomInt, $foreign.topInt);
	var boundedChar = new Bounded(function () {
	    return Data_Ord.ordChar;
	}, $foreign.bottomChar, $foreign.topChar);
	var boundedBoolean = new Bounded(function () {
	    return Data_Ord.ordBoolean;
	}, false, true);
	var bottom = function bottom(dict) {
	    return dict.bottom;
	};
	module.exports = {
	    Bounded: Bounded,
	    bottom: bottom,
	    top: top,
	    boundedBoolean: boundedBoolean,
	    boundedInt: boundedInt,
	    boundedChar: boundedChar,
	    boundedOrdering: boundedOrdering,
	    boundedUnit: boundedUnit
	};

/***/ },
/* 25 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Bounded

	exports.topInt = 2147483647;
	exports.bottomInt = -2147483648;

	exports.topChar = String.fromCharCode(65535);
	exports.bottomChar = String.fromCharCode(0);

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(27);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Ord_Unsafe = __webpack_require__(31);
	var Data_Ordering = __webpack_require__(33);
	var Data_Ring = __webpack_require__(36);
	var Data_Unit = __webpack_require__(13);
	var Data_Void = __webpack_require__(30);
	var Data_Semiring = __webpack_require__(38);
	var Ord = function Ord(__superclass_Data$dotEq$dotEq_0, compare) {
	    this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
	    this.compare = compare;
	};
	var ordVoid = new Ord(function () {
	    return Data_Eq.eqVoid;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordUnit = new Ord(function () {
	    return Data_Eq.eqUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordString = new Ord(function () {
	    return Data_Eq.eqString;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordOrdering = new Ord(function () {
	    return Data_Ordering.eqOrdering;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.LT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.GT) {
	            return Data_Ordering.GT.value;
	        };
	        throw new Error("Failed pattern match at Data.Ord line 68, column 3 - line 68, column 21: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var ordNumber = new Ord(function () {
	    return Data_Eq.eqNumber;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordInt = new Ord(function () {
	    return Data_Eq.eqInt;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordChar = new Ord(function () {
	    return Data_Eq.eqChar;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordBoolean = new Ord(function () {
	    return Data_Eq.eqBoolean;
	}, Data_Ord_Unsafe.unsafeCompare);
	var compare = function compare(dict) {
	    return dict.compare;
	};
	var comparing = function comparing(dictOrd) {
	    return function (f) {
	        return Data_Function.on(compare(dictOrd))(f);
	    };
	};
	var greaterThan = function greaterThan(dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $22 = compare(dictOrd)(a1)(a2);
	            if ($22 instanceof Data_Ordering.GT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var greaterThanOrEq = function greaterThanOrEq(dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $23 = compare(dictOrd)(a1)(a2);
	            if ($23 instanceof Data_Ordering.LT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var signum = function signum(dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $24 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            if ($24) {
	                return Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	            };
	            if (!$24) {
	                return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            };
	            throw new Error("Failed pattern match at Data.Ord line 163, column 12 - line 163, column 46: " + [$24.constructor.name]);
	        };
	    };
	};
	var lessThan = function lessThan(dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $25 = compare(dictOrd)(a1)(a2);
	            if ($25 instanceof Data_Ordering.LT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var lessThanOrEq = function lessThanOrEq(dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $26 = compare(dictOrd)(a1)(a2);
	            if ($26 instanceof Data_Ordering.GT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var max = function max(dictOrd) {
	    return function (x) {
	        return function (y) {
	            var $27 = compare(dictOrd)(x)(y);
	            if ($27 instanceof Data_Ordering.LT) {
	                return y;
	            };
	            if ($27 instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if ($27 instanceof Data_Ordering.GT) {
	                return x;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [$27.constructor.name]);
	        };
	    };
	};
	var min = function min(dictOrd) {
	    return function (x) {
	        return function (y) {
	            var $28 = compare(dictOrd)(x)(y);
	            if ($28 instanceof Data_Ordering.LT) {
	                return x;
	            };
	            if ($28 instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if ($28 instanceof Data_Ordering.GT) {
	                return y;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [$28.constructor.name]);
	        };
	    };
	};
	var ordArray = function ordArray(dictOrd) {
	    return new Ord(function () {
	        return Data_Eq.eqArray(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function () {
	        var toDelta = function toDelta(x) {
	            return function (y) {
	                var $29 = compare(dictOrd)(x)(y);
	                if ($29 instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if ($29 instanceof Data_Ordering.LT) {
	                    return 1;
	                };
	                if ($29 instanceof Data_Ordering.GT) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [$29.constructor.name]);
	            };
	        };
	        return function (xs) {
	            return function (ys) {
	                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
	            };
	        };
	    }());
	};
	var clamp = function clamp(dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
	            };
	        };
	    };
	};
	var between = function between(dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                if (lessThan(dictOrd)(x)(low)) {
	                    return false;
	                };
	                if (greaterThan(dictOrd)(x)(hi)) {
	                    return false;
	                };
	                if (true) {
	                    return true;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 150, column 1 - line 153, column 16: " + [low.constructor.name, hi.constructor.name, x.constructor.name]);
	            };
	        };
	    };
	};
	var abs = function abs(dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            if ($33) {
	                return x;
	            };
	            if (!$33) {
	                return Data_Ring.negate(dictRing)(x);
	            };
	            throw new Error("Failed pattern match at Data.Ord line 158, column 9 - line 158, column 42: " + [$33.constructor.name]);
	        };
	    };
	};
	module.exports = {
	    Ord: Ord,
	    abs: abs,
	    between: between,
	    clamp: clamp,
	    compare: compare,
	    comparing: comparing,
	    greaterThan: greaterThan,
	    greaterThanOrEq: greaterThanOrEq,
	    lessThan: lessThan,
	    lessThanOrEq: lessThanOrEq,
	    max: max,
	    min: min,
	    signum: signum,
	    ordBoolean: ordBoolean,
	    ordInt: ordInt,
	    ordNumber: ordNumber,
	    ordString: ordString,
	    ordChar: ordChar,
	    ordUnit: ordUnit,
	    ordVoid: ordVoid,
	    ordArray: ordArray,
	    ordOrdering: ordOrdering
	};

/***/ },
/* 27 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Ord

	exports.ordArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var x = xs[i];
	        var y = ys[i];
	        var o = f(x)(y);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(29);
	var Data_Unit = __webpack_require__(13);
	var Data_Void = __webpack_require__(30);
	var Eq = function Eq(eq) {
	    this.eq = eq;
	};
	var eqVoid = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqUnit = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqString = new Eq($foreign.refEq);
	var eqNumber = new Eq($foreign.refEq);
	var eqInt = new Eq($foreign.refEq);
	var eqChar = new Eq($foreign.refEq);
	var eqBoolean = new Eq($foreign.refEq);
	var eq = function eq(dict) {
	    return dict.eq;
	};
	var eqArray = function eqArray(dictEq) {
	    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
	};
	var notEq = function notEq(dictEq) {
	    return function (x) {
	        return function (y) {
	            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
	        };
	    };
	};
	module.exports = {
	    Eq: Eq,
	    eq: eq,
	    notEq: notEq,
	    eqBoolean: eqBoolean,
	    eqInt: eqInt,
	    eqNumber: eqNumber,
	    eqChar: eqChar,
	    eqString: eqString,
	    eqUnit: eqUnit,
	    eqVoid: eqVoid,
	    eqArray: eqArray
	};

/***/ },
/* 29 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Eq

	exports.refEq = function (r1) {
	  return function (r2) {
	    return r1 === r2;
	  };
	};

	exports.refIneq = function (r1) {
	  return function (r2) {
	    return r1 !== r2;
	  };
	};

	exports.eqArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      if (xs.length !== ys.length) return false;
	      for (var i = 0; i < xs.length; i++) {
	        if (!f(xs[i])(ys[i])) return false;
	      }
	      return true;
	    };
	  };
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Show = __webpack_require__(15);
	var Void = function Void(x) {
	    return x;
	};
	var absurd = function absurd(a) {
	    var spin = function spin(__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            var __tco_v = v;
	            v = __tco_v;
	            continue tco;
	        };
	    };
	    return spin(a);
	};
	var showVoid = new Data_Show.Show(absurd);
	module.exports = {
	    absurd: absurd,
	    showVoid: showVoid
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(32);
	var Data_Ordering = __webpack_require__(33);
	var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	module.exports = {
	    unsafeCompare: unsafeCompare
	};

/***/ },
/* 32 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Ord.Unsafe

	exports.unsafeCompareImpl = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (x) {
	        return function (y) {
	          return x < y ? lt : x > y ? gt : eq;
	        };
	      };
	    };
	  };
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Eq = __webpack_require__(28);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var LT = function () {
	    function LT() {};
	    LT.value = new LT();
	    return LT;
	}();
	var GT = function () {
	    function GT() {};
	    GT.value = new GT();
	    return GT;
	}();
	var EQ = function () {
	    function EQ() {};
	    EQ.value = new EQ();
	    return EQ;
	}();
	var showOrdering = new Data_Show.Show(function (v) {
	    if (v instanceof LT) {
	        return "LT";
	    };
	    if (v instanceof GT) {
	        return "GT";
	    };
	    if (v instanceof EQ) {
	        return "EQ";
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 27, column 3 - line 28, column 3: " + [v.constructor.name]);
	});
	var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof LT) {
	            return LT.value;
	        };
	        if (v instanceof GT) {
	            return GT.value;
	        };
	        if (v instanceof EQ) {
	            return v1;
	        };
	        throw new Error("Failed pattern match at Data.Ordering line 22, column 3 - line 22, column 19: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var invert = function invert(v) {
	    if (v instanceof GT) {
	        return LT.value;
	    };
	    if (v instanceof EQ) {
	        return EQ.value;
	    };
	    if (v instanceof LT) {
	        return GT.value;
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 34, column 1 - line 34, column 15: " + [v.constructor.name]);
	};
	var eqOrdering = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof LT && v1 instanceof LT) {
	            return true;
	        };
	        if (v instanceof GT && v1 instanceof GT) {
	            return true;
	        };
	        if (v instanceof EQ && v1 instanceof EQ) {
	            return true;
	        };
	        return false;
	    };
	});
	module.exports = {
	    LT: LT,
	    GT: GT,
	    EQ: EQ,
	    invert: invert,
	    eqOrdering: eqOrdering,
	    semigroupOrdering: semigroupOrdering,
	    showOrdering: showOrdering
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(35);
	var Data_Unit = __webpack_require__(13);
	var Data_Void = __webpack_require__(30);
	var Semigroup = function Semigroup(append) {
	    this.append = append;
	};
	var semigroupVoid = new Semigroup(function (v) {
	    return Data_Void.absurd;
	});
	var semigroupUnit = new Semigroup(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var semigroupString = new Semigroup($foreign.concatString);
	var semigroupArray = new Semigroup($foreign.concatArray);
	var append = function append(dict) {
	    return dict.append;
	};
	var semigroupFn = function semigroupFn(dictSemigroup) {
	    return new Semigroup(function (f) {
	        return function (g) {
	            return function (x) {
	                return append(dictSemigroup)(f(x))(g(x));
	            };
	        };
	    });
	};
	module.exports = {
	    Semigroup: Semigroup,
	    append: append,
	    semigroupString: semigroupString,
	    semigroupUnit: semigroupUnit,
	    semigroupVoid: semigroupVoid,
	    semigroupFn: semigroupFn,
	    semigroupArray: semigroupArray
	};

/***/ },
/* 35 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Semigroup

	exports.concatString = function (s1) {
	  return function (s2) {
	    return s1 + s2;
	  };
	};

	exports.concatArray = function (xs) {
	  return function (ys) {
	    return xs.concat(ys);
	  };
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(37);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(13);
	var Ring = function Ring(__superclass_Data$dotSemiring$dotSemiring_0, sub) {
	    this["__superclass_Data.Semiring.Semiring_0"] = __superclass_Data$dotSemiring$dotSemiring_0;
	    this.sub = sub;
	};
	var sub = function sub(dict) {
	    return dict.sub;
	};
	var ringUnit = new Ring(function () {
	    return Data_Semiring.semiringUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var ringNumber = new Ring(function () {
	    return Data_Semiring.semiringNumber;
	}, $foreign.numSub);
	var ringInt = new Ring(function () {
	    return Data_Semiring.semiringInt;
	}, $foreign.intSub);
	var negate = function negate(dictRing) {
	    return function (a) {
	        return sub(dictRing)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()))(a);
	    };
	};
	module.exports = {
	    Ring: Ring,
	    negate: negate,
	    sub: sub,
	    ringInt: ringInt,
	    ringNumber: ringNumber,
	    ringUnit: ringUnit
	};

/***/ },
/* 37 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Ring

	exports.intSub = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x - y | 0;
	  };
	};

	exports.numSub = function (n1) {
	  return function (n2) {
	    return n1 - n2;
	  };
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(39);
	var Data_Unit = __webpack_require__(13);
	var Semiring = function Semiring(add, mul, one, zero) {
	    this.add = add;
	    this.mul = mul;
	    this.one = one;
	    this.zero = zero;
	};
	var zero = function zero(dict) {
	    return dict.zero;
	};
	var semiringUnit = new Semiring(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, Data_Unit.unit);
	var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
	var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
	var one = function one(dict) {
	    return dict.one;
	};
	var mul = function mul(dict) {
	    return dict.mul;
	};
	var add = function add(dict) {
	    return dict.add;
	};
	module.exports = {
	    Semiring: Semiring,
	    add: add,
	    mul: mul,
	    one: one,
	    zero: zero,
	    semiringInt: semiringInt,
	    semiringNumber: semiringNumber,
	    semiringUnit: semiringUnit
	};

/***/ },
/* 39 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Semiring

	exports.intAdd = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x + y | 0;
	  };
	};

	exports.intMul = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x * y | 0;
	  };
	};

	exports.numAdd = function (n1) {
	  return function (n2) {
	    return n1 + n2;
	  };
	};

	exports.numMul = function (n1) {
	  return function (n2) {
	    return n1 * n2;
	  };
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Ring = __webpack_require__(36);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(13);
	var CommutativeRing = function CommutativeRing(__superclass_Data$dotRing$dotRing_0) {
	    this["__superclass_Data.Ring.Ring_0"] = __superclass_Data$dotRing$dotRing_0;
	};
	var commutativeRingUnit = new CommutativeRing(function () {
	    return Data_Ring.ringUnit;
	});
	var commutativeRingNumber = new CommutativeRing(function () {
	    return Data_Ring.ringNumber;
	});
	var commutativeRingInt = new CommutativeRing(function () {
	    return Data_Ring.ringInt;
	});
	module.exports = {
	    CommutativeRing: CommutativeRing,
	    commutativeRingInt: commutativeRingInt,
	    commutativeRingNumber: commutativeRingNumber,
	    commutativeRingUnit: commutativeRingUnit
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(42);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Ring = __webpack_require__(36);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(13);
	var EuclideanRing = function EuclideanRing(__superclass_Data$dotCommutativeRing$dotCommutativeRing_0, degree, div, mod) {
	    this["__superclass_Data.CommutativeRing.CommutativeRing_0"] = __superclass_Data$dotCommutativeRing$dotCommutativeRing_0;
	    this.degree = degree;
	    this.div = div;
	    this.mod = mod;
	};
	var mod = function mod(dict) {
	    return dict.mod;
	};
	var euclideanRingUnit = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingUnit;
	}, function (v) {
	    return 1;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var euclideanRingNumber = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingNumber;
	}, function (v) {
	    return 1;
	}, $foreign.numDiv, function (v) {
	    return function (v1) {
	        return 0.0;
	    };
	});
	var euclideanRingInt = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingInt;
	}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
	var div = function div(dict) {
	    return dict.div;
	};
	var degree = function degree(dict) {
	    return dict.degree;
	};
	module.exports = {
	    EuclideanRing: EuclideanRing,
	    degree: degree,
	    div: div,
	    mod: mod,
	    euclideanRingInt: euclideanRingInt,
	    euclideanRingNumber: euclideanRingNumber,
	    euclideanRingUnit: euclideanRingUnit
	};

/***/ },
/* 42 */
/***/ function(module, exports) {

	"use strict";

	// module Data.EuclideanRing

	exports.intDegree = function (x) {
	  return Math.abs(x);
	};

	exports.intDiv = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x / y | 0;
	  };
	};

	exports.intMod = function (x) {
	  return function (y) {
	    return x % y;
	  };
	};

	exports.numDiv = function (n1) {
	  return function (n2) {
	    return n1 / n2;
	  };
	};

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_CommutativeRing = __webpack_require__(40);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Ring = __webpack_require__(36);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(13);
	var Field = function Field(__superclass_Data$dotEuclideanRing$dotEuclideanRing_0) {
	    this["__superclass_Data.EuclideanRing.EuclideanRing_0"] = __superclass_Data$dotEuclideanRing$dotEuclideanRing_0;
	};
	var fieldUnit = new Field(function () {
	    return Data_EuclideanRing.euclideanRingUnit;
	});
	var fieldNumber = new Field(function () {
	    return Data_EuclideanRing.euclideanRingNumber;
	});
	module.exports = {
	    Field: Field,
	    fieldNumber: fieldNumber,
	    fieldUnit: fieldUnit
	};

/***/ },
/* 44 */
/***/ function(module, exports) {

	// Generated by psc version 0.9.1
	"use strict";

	module.exports = {};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(46);
	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Monad_Aff_Internal = __webpack_require__(52);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_Parallel_Class = __webpack_require__(96);
	var Control_Plus = __webpack_require__(51);
	var Data_Either = __webpack_require__(58);
	var Data_Foldable = __webpack_require__(70);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Data_Monoid = __webpack_require__(61);
	var Unsafe_Coerce = __webpack_require__(112);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Apply = __webpack_require__(6);
	var Data_Functor = __webpack_require__(8);
	var Control_Applicative = __webpack_require__(5);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Data_Function = __webpack_require__(10);
	var Control_MonadZero = __webpack_require__(73);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Eq = __webpack_require__(28);
	var Data_Unit = __webpack_require__(13);
	var Data_Semiring = __webpack_require__(38);
	var Control_Semigroupoid = __webpack_require__(12);
	var Canceler = function Canceler(x) {
	    return x;
	};
	var runAff = function runAff(ex) {
	    return function (f) {
	        return function (aff) {
	            return Data_Function_Uncurried.runFn3($foreign._runAff)(ex)(f)(aff);
	        };
	    };
	};
	var makeAff$prime = function makeAff$prime(h) {
	    return $foreign._makeAff(h);
	};
	var functorAff = new Data_Functor.Functor(function (f) {
	    return function (fa) {
	        return Data_Function_Uncurried.runFn2($foreign._fmap)(f)(fa);
	    };
	});
	var fromAVBox = Unsafe_Coerce.unsafeCoerce;
	var cancel = function cancel(v) {
	    return v;
	};
	var launchAff = function () {
	    var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($34) {
	        return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($34)));
	    });
	    return function ($35) {
	        return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($35)));
	    };
	}();
	var attempt = function attempt(aff) {
	    return Data_Function_Uncurried.runFn3($foreign._attempt)(Data_Either.Left.create)(Data_Either.Right.create)(aff);
	};
	var apathize = function apathize(a) {
	    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt(a));
	};
	var applyAff = new Control_Apply.Apply(function () {
	    return functorAff;
	}, function (ff) {
	    return function (fa) {
	        return Data_Function_Uncurried.runFn3($foreign._bind)(alwaysCanceler)(ff)(function (f) {
	            return Data_Functor.map(functorAff)(f)(fa);
	        });
	    };
	});
	var applicativeAff = new Control_Applicative.Applicative(function () {
	    return applyAff;
	}, function (v) {
	    return Data_Function_Uncurried.runFn2($foreign._pure)(nonCanceler)(v);
	});
	var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
	var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
	var cancelWith = function cancelWith(aff) {
	    return function (c) {
	        return Data_Function_Uncurried.runFn3($foreign._cancelWith)(nonCanceler)(aff)(c);
	    };
	};
	var forkAff = function forkAff(aff) {
	    return Data_Function_Uncurried.runFn2($foreign._forkAff)(nonCanceler)(aff);
	};
	var forkAll = function forkAll(dictFoldable) {
	    return function (affs) {
	        return Data_Function_Uncurried.runFn3($foreign._forkAll)(nonCanceler)(Data_Foldable.foldl(dictFoldable))(affs);
	    };
	};
	var killVar = function killVar(q) {
	    return function (e) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal._killVar)(nonCanceler)(q)(e));
	    };
	};
	var later$prime = function later$prime(n) {
	    return function (aff) {
	        return Data_Function_Uncurried.runFn3($foreign._setTimeout)(nonCanceler)(n)(aff);
	    };
	};
	var later = later$prime(0);
	var liftEff$prime = function liftEff$prime(eff) {
	    return attempt($foreign._unsafeInterleaveAff(Data_Function_Uncurried.runFn2($foreign._liftEff)(nonCanceler)(eff)));
	};
	var makeAff = function makeAff(h) {
	    return makeAff$prime(function (e) {
	        return function (a) {
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
	        };
	    });
	};
	var makeVar = Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal._makeVar(nonCanceler));
	var putVar = function putVar(q) {
	    return function (a) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal._putVar)(nonCanceler)(q)(a));
	    };
	};
	var takeVar = function takeVar(q) {
	    return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn2(Control_Monad_Aff_Internal._takeVar)(nonCanceler)(q));
	};
	var semigroupAff = function semigroupAff(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
	        };
	    });
	};
	var monoidAff = function monoidAff(dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAff(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
	};
	var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function (e) {
	            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
	        };
	    };
	});
	var monoidCanceler = new Data_Monoid.Monoid(function () {
	    return semigroupCanceler;
	}, Data_Function["const"](Control_Applicative.pure(applicativeAff)(true)));
	var bindAff = new Control_Bind.Bind(function () {
	    return applyAff;
	}, function (fa) {
	    return function (f) {
	        return Data_Function_Uncurried.runFn3($foreign._bind)(alwaysCanceler)(fa)(f);
	    };
	});
	var monadAff = new Control_Monad.Monad(function () {
	    return applicativeAff;
	}, function () {
	    return bindAff;
	});
	var monadContAff = new Control_Monad_Cont_Class.MonadCont(function () {
	    return monadAff;
	}, function (f) {
	    return makeAff(function (eb) {
	        return function (cb) {
	            return Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(runAff(eb)(cb)(f(function (a) {
	                return makeAff(function (v) {
	                    return function (v1) {
	                        return cb(a);
	                    };
	                });
	            })));
	        };
	    });
	});
	var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
	    return monadAff;
	}, function (eff) {
	    return Data_Function_Uncurried.runFn2($foreign._liftEff)(nonCanceler)(eff);
	});
	var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
	    return monadAff;
	}, function (f) {
	    return function (a) {
	        return Data_Function_Uncurried.runFn3($foreign._tailRecM)(Data_Either.isLeft)(f)(a);
	    };
	});
	var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
	    return monadAff;
	}, function (aff) {
	    return function (ex) {
	        return Control_Bind.bind(bindAff)(attempt(aff))(Data_Either.either(ex)(Control_Applicative.pure(applicativeAff)));
	    };
	}, function (e) {
	    return Data_Function_Uncurried.runFn2($foreign._throwError)(nonCanceler)(e);
	});
	var $$finally = function $$finally(aff1) {
	    return function (aff2) {
	        return Control_Bind.bind(bindAff)(attempt(aff1))(function (v) {
	            return Control_Bind.bind(bindAff)(aff2)(function () {
	                return Data_Either.either(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Applicative.pure(applicativeAff))(v);
	            });
	        });
	    };
	};
	var monadParAff = new Control_Parallel_Class.MonadPar(function () {
	    return monadAff;
	}, function (f) {
	    return function (ma) {
	        return function (mb) {
	            var putOrKill = function putOrKill(v) {
	                return Data_Either.either(killVar(v))(putVar(v));
	            };
	            return Control_Bind.bind(bindAff)(makeVar)(function (v) {
	                return Control_Bind.bind(bindAff)(makeVar)(function (v1) {
	                    return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v))(attempt(ma))))(function (v2) {
	                        return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v1))(attempt(mb))))(function (v3) {
	                            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(f)(takeVar(v)))(takeVar(v1));
	                        });
	                    });
	                });
	            });
	        };
	    };
	});
	var monadRaceAff = new Control_Parallel_Class.MonadRace(function () {
	    return monadParAff;
	}, function (a1) {
	    return function (a2) {
	        var maybeKill = function maybeKill(va) {
	            return function (ve) {
	                return function (err) {
	                    return Control_Bind.bind(bindAff)(takeVar(ve))(function (v) {
	                        return Control_Bind.bind(bindAff)(function () {
	                            var $29 = v === 1;
	                            if ($29) {
	                                return killVar(va)(err);
	                            };
	                            if (!$29) {
	                                return Control_Applicative.pure(applicativeAff)(Data_Unit.unit);
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Aff line 240, column 7 - line 240, column 51: " + [$29.constructor.name]);
	                        }())(function () {
	                            return putVar(ve)(v + 1 | 0);
	                        });
	                    });
	                };
	            };
	        };
	        return Control_Bind.bind(bindAff)(makeVar)(function (v) {
	            return Control_Bind.bind(bindAff)(makeVar)(function (v1) {
	                return Control_Bind.bind(bindAff)(putVar(v1)(0))(function () {
	                    return Control_Bind.bind(bindAff)(Data_Function.apply(forkAff)(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v)(v1))(putVar(v)))(attempt(a1))))(function (v2) {
	                        return Control_Bind.bind(bindAff)(Data_Function.apply(forkAff)(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v)(v1))(putVar(v)))(attempt(a2))))(function (v3) {
	                            return cancelWith(takeVar(v))(Data_Semigroup.append(semigroupCanceler)(v2)(v3));
	                        });
	                    });
	                });
	            });
	        });
	    };
	}, Data_Function.apply(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Monad_Eff_Exception.error("Stalled")));
	var altAff = new Control_Alt.Alt(function () {
	    return functorAff;
	}, function (a1) {
	    return function (a2) {
	        return Control_Bind.bind(bindAff)(attempt(a1))(Data_Either.either(Data_Function["const"](a2))(Control_Applicative.pure(applicativeAff)));
	    };
	});
	var plusAff = new Control_Plus.Plus(function () {
	    return altAff;
	}, Data_Function.apply(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Monad_Eff_Exception.error("Always fails")));
	var alternativeAff = new Control_Alternative.Alternative(function () {
	    return applicativeAff;
	}, function () {
	    return plusAff;
	});
	var monadZero = new Control_MonadZero.MonadZero(function () {
	    return alternativeAff;
	}, function () {
	    return monadAff;
	});
	var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
	    return monadZero;
	});
	module.exports = {
	    Canceler: Canceler,
	    apathize: apathize,
	    attempt: attempt,
	    cancel: cancel,
	    cancelWith: cancelWith,
	    "finally": $$finally,
	    forkAff: forkAff,
	    forkAll: forkAll,
	    later: later,
	    "later'": later$prime,
	    launchAff: launchAff,
	    "liftEff'": liftEff$prime,
	    makeAff: makeAff,
	    "makeAff'": makeAff$prime,
	    nonCanceler: nonCanceler,
	    runAff: runAff,
	    semigroupAff: semigroupAff,
	    monoidAff: monoidAff,
	    functorAff: functorAff,
	    applyAff: applyAff,
	    applicativeAff: applicativeAff,
	    bindAff: bindAff,
	    monadAff: monadAff,
	    monadEffAff: monadEffAff,
	    monadErrorAff: monadErrorAff,
	    altAff: altAff,
	    plusAff: plusAff,
	    alternativeAff: alternativeAff,
	    monadZero: monadZero,
	    monadPlusAff: monadPlusAff,
	    monadRecAff: monadRecAff,
	    monadContAff: monadContAff,
	    semigroupCanceler: semigroupCanceler,
	    monoidCanceler: monoidCanceler,
	    monadParAff: monadParAff,
	    monadRaceAff: monadRaceAff
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {/* global exports */
	"use strict";

	exports._cancelWith = function (nonCanceler, aff, canceler1) {
	  return function (success, error) {
	    var canceler2 = aff(success, error);

	    return function (e) {
	      return function (success, error) {
	        var cancellations = 0;
	        var result = false;
	        var errored = false;

	        var s = function s(bool) {
	          cancellations = cancellations + 1;
	          result = result || bool;

	          if (cancellations === 2 && !errored) {
	            success(result);
	          }
	        };

	        var f = function f(err) {
	          if (!errored) {
	            errored = true;
	            error(err);
	          }
	        };

	        canceler2(e)(s, f);
	        canceler1(e)(s, f);

	        return nonCanceler;
	      };
	    };
	  };
	};

	exports._setTimeout = function (nonCanceler, millis, aff) {
	  var set = setTimeout,
	      clear = clearTimeout;
	  if (millis <= 0 && typeof setImmediate === "function") {
	    set = setImmediate;
	    clear = clearImmediate;
	  }
	  return function (success, error) {
	    var canceler;

	    var timeout = set(function () {
	      canceler = aff(success, error);
	    }, millis);

	    return function (e) {
	      return function (s, f) {
	        if (canceler !== undefined) {
	          return canceler(e)(s, f);
	        } else {
	          clear(timeout);
	          s(true);
	          return nonCanceler;
	        }
	      };
	    };
	  };
	};

	exports._unsafeInterleaveAff = function (aff) {
	  return aff;
	};

	exports._forkAff = function (nonCanceler, aff) {
	  var voidF = function voidF() {};

	  return function (success, error) {
	    var canceler = aff(voidF, voidF);
	    success(canceler);
	    return nonCanceler;
	  };
	};

	exports._forkAll = function (nonCanceler, foldl, affs) {
	  var voidF = function voidF() {};

	  return function (success, error) {
	    try {
	      var cancelers = foldl(function (acc) {
	        return function (aff) {
	          acc.push(aff(voidF, voidF));
	          return acc;
	        };
	      })([])(affs);
	    } catch (err) {
	      error(err);
	    }

	    var canceler = function canceler(e) {
	      return function (success, error) {
	        var cancellations = 0;
	        var result = false;
	        var errored = false;

	        var s = function s(bool) {
	          cancellations = cancellations + 1;
	          result = result || bool;

	          if (cancellations === cancelers.length && !errored) {
	            success(result);
	          }
	        };

	        var f = function f(err) {
	          if (!errored) {
	            errored = true;
	            error(err);
	          }
	        };

	        for (var i = 0; i < cancelers.length; i++) {
	          cancelers[i](e)(s, f);
	        }

	        return nonCanceler;
	      };
	    };

	    success(canceler);
	    return nonCanceler;
	  };
	};

	exports._makeAff = function (cb) {
	  return function (success, error) {
	    try {
	      return cb(function (e) {
	        return function () {
	          error(e);
	        };
	      })(function (v) {
	        return function () {
	          success(v);
	        };
	      })();
	    } catch (err) {
	      error(err);
	    }
	  };
	};

	exports._pure = function (nonCanceler, v) {
	  return function (success, error) {
	    success(v);
	    return nonCanceler;
	  };
	};

	exports._throwError = function (nonCanceler, e) {
	  return function (success, error) {
	    error(e);
	    return nonCanceler;
	  };
	};

	exports._fmap = function (f, aff) {
	  return function (success, error) {
	    try {
	      return aff(function (v) {
	        try {
	          var v2 = f(v);
	        } catch (err) {
	          error(err);
	        }
	        success(v2);
	      }, error);
	    } catch (err) {
	      error(err);
	    }
	  };
	};

	exports._bind = function (alwaysCanceler, aff, f) {
	  return function (success, error) {
	    var canceler1, canceler2;

	    var isCanceled = false;
	    var requestCancel = false;

	    var onCanceler = function onCanceler() {};

	    canceler1 = aff(function (v) {
	      if (requestCancel) {
	        isCanceled = true;

	        return alwaysCanceler;
	      } else {
	        canceler2 = f(v)(success, error);

	        onCanceler(canceler2);

	        return canceler2;
	      }
	    }, error);

	    return function (e) {
	      return function (s, f) {
	        requestCancel = true;

	        if (canceler2 !== undefined) {
	          return canceler2(e)(s, f);
	        } else {
	          return canceler1(e)(function (bool) {
	            if (bool || isCanceled) {
	              s(true);
	            } else {
	              onCanceler = function onCanceler(canceler) {
	                canceler(e)(s, f);
	              };
	            }
	          }, f);
	        }
	      };
	    };
	  };
	};

	exports._attempt = function (Left, Right, aff) {
	  return function (success, error) {
	    try {
	      return aff(function (v) {
	        success(Right(v));
	      }, function (e) {
	        success(Left(e));
	      });
	    } catch (err) {
	      success(Left(err));
	    }
	  };
	};

	exports._runAff = function (errorT, successT, aff) {
	  return function () {
	    return aff(function (v) {
	      successT(v)();
	    }, function (e) {
	      errorT(e)();
	    });
	  };
	};

	exports._liftEff = function (nonCanceler, e) {
	  return function (success, error) {
	    var result;
	    try {
	      result = e();
	    } catch (err) {
	      error(err);
	      return nonCanceler;
	    }

	    success(result);
	    return nonCanceler;
	  };
	};

	exports._tailRecM = function (isLeft, f, a) {
	  return function (success, error) {
	    return function go(acc) {
	      var result, status, canceler;

	      // Observes synchronous effects using a flag.
	      //   status = 0 (unresolved status)
	      //   status = 1 (synchronous effect)
	      //   status = 2 (asynchronous effect)
	      while (true) {
	        status = 0;
	        canceler = f(acc)(function (v) {
	          // If the status is still unresolved, we have observed a
	          // synchronous effect. Otherwise, the status will be `2`.
	          if (status === 0) {
	            // Store the result for further synchronous processing.
	            result = v;
	            status = 1;
	          } else {
	            // When we have observed an asynchronous effect, we use normal
	            // recursion. This is safe because we will be on a new stack.
	            if (isLeft(v)) {
	              go(v.value0);
	            } else {
	              try {
	                success(v.value0);
	              } catch (err) {
	                error(err);
	              }
	            }
	          }
	        }, error);

	        // If the status has already resolved to `1` by our Aff handler, then
	        // we have observed a synchronous effect. Otherwise it will still be
	        // `0`.
	        if (status === 1) {
	          // When we have observed a synchronous effect, we merely swap out the
	          // accumulator and continue the loop, preserving stack.
	          if (isLeft(result)) {
	            acc = result.value0;
	            continue;
	          } else {
	            try {
	              success(result.value0);
	            } catch (err) {
	              error(err);
	            }
	          }
	        } else {
	          // If the status has not resolved yet, then we have observed an
	          // asynchronous effect.
	          status = 2;
	        }
	        return canceler;
	      }
	    }(a);
	  };
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).setImmediate, __webpack_require__(47).clearImmediate))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(48).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47).setImmediate, __webpack_require__(47).clearImmediate))

/***/ },
/* 48 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	(function () {
	    try {
	        cachedSetTimeout = setTimeout;
	    } catch (e) {
	        cachedSetTimeout = function () {
	            throw new Error('setTimeout is not defined');
	        }
	    }
	    try {
	        cachedClearTimeout = clearTimeout;
	    } catch (e) {
	        cachedClearTimeout = function () {
	            throw new Error('clearTimeout is not defined');
	        }
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Functor = __webpack_require__(8);
	var Data_Semigroup = __webpack_require__(34);
	var Alt = function Alt(__superclass_Data$dotFunctor$dotFunctor_0, alt) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.alt = alt;
	};
	var altArray = new Alt(function () {
	    return Data_Functor.functorArray;
	}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
	var alt = function alt(dict) {
	    return dict.alt;
	};
	module.exports = {
	    Alt: Alt,
	    alt: alt,
	    altArray: altArray
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Plus = __webpack_require__(51);
	var Data_Functor = __webpack_require__(8);
	var Alternative = function Alternative(__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
	    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
	    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
	};
	var alternativeArray = new Alternative(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Plus.plusArray;
	});
	module.exports = {
	    Alternative: Alternative,
	    alternativeArray: alternativeArray
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Data_Functor = __webpack_require__(8);
	var Plus = function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
	    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
	    this.empty = empty;
	};
	var plusArray = new Plus(function () {
	    return Control_Alt.altArray;
	}, []);
	var empty = function empty(dict) {
	    return dict.empty;
	};
	module.exports = {
	    Plus: Plus,
	    empty: empty,
	    plusArray: plusArray
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(53);
	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Data_Function_Uncurried = __webpack_require__(80);
	module.exports = {
	    _killVar: $foreign._killVar,
	    _makeVar: $foreign._makeVar,
	    _putVar: $foreign._putVar,
	    _takeVar: $foreign._takeVar
	};

/***/ },
/* 53 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	exports._makeVar = function (nonCanceler) {
	  return function (success, error) {
	    try {
	      success({
	        consumers: [],
	        producers: [],
	        error: undefined
	      });
	    } catch (err) {
	      error(err);
	    }

	    return nonCanceler;
	  };
	};

	exports._takeVar = function (nonCanceler, avar) {
	  return function (success, error) {
	    if (avar.error !== undefined) {
	      error(avar.error);
	    } else if (avar.producers.length > 0) {
	      var producer = avar.producers.shift();

	      producer(success, error);
	    } else {
	      avar.consumers.push({ success: success, error: error });
	    }

	    return nonCanceler;
	  };
	};

	exports._putVar = function (nonCanceler, avar, a) {
	  return function (success, error) {
	    if (avar.error !== undefined) {
	      error(avar.error);
	    } else if (avar.consumers.length === 0) {
	      avar.producers.push(function (success, error) {
	        try {
	          success(a);
	        } catch (err) {
	          error(err);
	        }
	      });

	      success({});
	    } else {
	      var consumer = avar.consumers.shift();

	      try {
	        consumer.success(a);
	      } catch (err) {
	        error(err);

	        return;
	      }

	      success({});
	    }

	    return nonCanceler;
	  };
	};

	exports._killVar = function (nonCanceler, avar, e) {
	  return function (success, error) {
	    if (avar.error !== undefined) {
	      error(avar.error);
	    } else {
	      var errors = [];

	      avar.error = e;

	      while (avar.consumers.length > 0) {
	        var consumer = avar.consumers.shift();

	        try {
	          consumer.error(e);
	        } catch (err) {
	          errors.push(err);
	        }
	      }

	      if (errors.length > 0) error(errors[0]);else success({});
	    }

	    return nonCanceler;
	  };
	};

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(55);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Either = __webpack_require__(58);
	var Data_Maybe = __webpack_require__(72);
	var Data_Show = __webpack_require__(15);
	var Prelude = __webpack_require__(4);
	var Control_Applicative = __webpack_require__(5);
	var Data_Functor = __webpack_require__(8);
	var $$try = function $$try(action) {
	    return $foreign.catchException(function ($0) {
	        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
	    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
	};
	var $$throw = function $$throw($1) {
	    return $foreign.throwException($foreign.error($1));
	};
	var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var showError = new Data_Show.Show($foreign.showErrorImpl);
	module.exports = {
	    stack: stack,
	    "throw": $$throw,
	    "try": $$try,
	    showError: showError,
	    catchException: $foreign.catchException,
	    error: $foreign.error,
	    message: $foreign.message,
	    throwException: $foreign.throwException
	};

/***/ },
/* 55 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Control.Monad.Eff.Exception

	exports.showErrorImpl = function (err) {
	  return err.stack || err.toString();
	};

	exports.error = function (msg) {
	  return new Error(msg);
	};

	exports.message = function (e) {
	  return e.message;
	};

	exports.stackImpl = function (just) {
	  return function (nothing) {
	    return function (e) {
	      return e.stack ? just(e.stack) : nothing;
	    };
	  };
	};

	exports.throwException = function (e) {
	  return function () {
	    throw e;
	  };
	};

	exports.catchException = function (c) {
	  return function (t) {
	    return function () {
	      try {
	        return t();
	      } catch (e) {
	        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
	          return c(e)();
	        } else {
	          return c(new Error(e.toString()))();
	        }
	      }
	    };
	  };
	};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(57);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Data_Functor = __webpack_require__(8);
	var Data_Unit = __webpack_require__(13);
	var monadEff = new Control_Monad.Monad(function () {
	    return applicativeEff;
	}, function () {
	    return bindEff;
	});
	var bindEff = new Control_Bind.Bind(function () {
	    return applyEff;
	}, $foreign.bindE);
	var applyEff = new Control_Apply.Apply(function () {
	    return functorEff;
	}, Control_Monad.ap(monadEff));
	var applicativeEff = new Control_Applicative.Applicative(function () {
	    return applyEff;
	}, $foreign.pureE);
	var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
	module.exports = {
	    functorEff: functorEff,
	    applyEff: applyEff,
	    applicativeEff: applicativeEff,
	    bindEff: bindEff,
	    monadEff: monadEff,
	    forE: $foreign.forE,
	    foreachE: $foreign.foreachE,
	    runPure: $foreign.runPure,
	    untilE: $foreign.untilE,
	    whileE: $foreign.whileE
	};

/***/ },
/* 57 */
/***/ function(module, exports) {

	"use strict";

	// module Control.Monad.Eff

	exports.pureE = function (a) {
	  return function () {
	    return a;
	  };
	};

	exports.bindE = function (a) {
	  return function (f) {
	    return function () {
	      return f(a())();
	    };
	  };
	};

	exports.runPure = function (f) {
	  return f();
	};

	exports.untilE = function (f) {
	  return function () {
	    while (!f()) {}
	    return {};
	  };
	};

	exports.whileE = function (f) {
	  return function (a) {
	    return function () {
	      while (f()) {
	        a();
	      }
	      return {};
	    };
	  };
	};

	exports.forE = function (lo) {
	  return function (hi) {
	    return function (f) {
	      return function () {
	        for (var i = lo; i < hi; i++) {
	          f(i)();
	        }
	      };
	    };
	  };
	};

	exports.foreachE = function (as) {
	  return function (f) {
	    return function () {
	      for (var i = 0, l = as.length; i < l; i++) {
	        f(as[i])();
	      }
	    };
	  };
	};

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_Bifoldable = __webpack_require__(60);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Bitraversable = __webpack_require__(69);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Foldable = __webpack_require__(70);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Data_Traversable = __webpack_require__(78);
	var Left = function () {
	    function Left(value0) {
	        this.value0 = value0;
	    };
	    Left.create = function (value0) {
	        return new Left(value0);
	    };
	    return Left;
	}();
	var Right = function () {
	    function Right(value0) {
	        this.value0 = value0;
	    };
	    Right.create = function (value0) {
	        return new Right(value0);
	    };
	    return Right;
	}();
	var showEither = function showEither(dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            if (v instanceof Left) {
	                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
	            };
	            if (v instanceof Right) {
	                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
	            };
	            throw new Error("Failed pattern match at Data.Either line 171, column 3 - line 172, column 3: " + [v.constructor.name]);
	        });
	    };
	};
	var functorEither = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        if (v1 instanceof Right) {
	            return new Right(v(v1.value0));
	        };
	        throw new Error("Failed pattern match at Data.Either line 46, column 3 - line 46, column 26: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
	var fromRight = function fromRight(dictPartial) {
	    return function (v) {
	        var __unused = function __unused(dictPartial1) {
	            return function ($dollar52) {
	                return $dollar52;
	            };
	        };
	        return __unused(dictPartial)(function () {
	            if (v instanceof Right) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 262, column 1 - line 262, column 23: " + [v.constructor.name]);
	        }());
	    };
	};
	var fromLeft = function fromLeft(dictPartial) {
	    return function (v) {
	        var __unused = function __unused(dictPartial1) {
	            return function ($dollar56) {
	                return $dollar56;
	            };
	        };
	        return __unused(dictPartial)(function () {
	            if (v instanceof Left) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 257, column 1 - line 257, column 22: " + [v.constructor.name]);
	        }());
	    };
	};
	var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Left) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Right) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 202, column 3 - line 202, column 31: " + [f.constructor.name, v.constructor.name]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 200, column 3 - line 200, column 26: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Either line 198, column 3 - line 198, column 26: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var traversableEither = new Data_Traversable.Traversable(function () {
	    return foldableEither;
	}, function () {
	    return functorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 216, column 3 - line 216, column 36: " + [v.constructor.name]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
	            };
	            if (v1 instanceof Right) {
	                return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Right.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 214, column 3 - line 214, column 39: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var extendEither = new Control_Extend.Extend(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        return new Right(v(v1));
	    };
	});
	var eqEither = function eqEither(dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (v) {
	            return function (v1) {
	                if (v instanceof Left && v1 instanceof Left) {
	                    return Data_Eq.eq(dictEq)(v.value0)(v1.value0);
	                };
	                if (v instanceof Right && v1 instanceof Right) {
	                    return Data_Eq.eq(dictEq1)(v.value0)(v1.value0);
	                };
	                return false;
	            };
	        });
	    };
	};
	var ordEither = function ordEither(dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqEither(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (v) {
	            return function (v1) {
	                if (v instanceof Left && v1 instanceof Left) {
	                    return Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                };
	                if (v instanceof Right && v1 instanceof Right) {
	                    return Data_Ord.compare(dictOrd1)(v.value0)(v1.value0);
	                };
	                if (v instanceof Left) {
	                    return Data_Ordering.LT.value;
	                };
	                if (v1 instanceof Left) {
	                    return Data_Ordering.GT.value;
	                };
	                throw new Error("Failed pattern match at Data.Either line 188, column 3 - line 188, column 48: " + [v.constructor.name, v1.constructor.name]);
	            };
	        });
	    };
	};
	var either = function either(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return v(v2.value0);
	            };
	            if (v2 instanceof Right) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 26: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	};
	var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
	var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
	var boundedEither = function boundedEither(dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordEither(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
	        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
	    };
	};
	var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return new Left(v(v2.value0));
	            };
	            if (v2 instanceof Right) {
	                return new Right(v1(v2.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 53, column 3 - line 53, column 34: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	});
	var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 210, column 3 - line 210, column 31: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(z)(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(z)(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 208, column 3 - line 208, column 33: " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0)(z);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0)(z);
	                };
	                throw new Error("Failed pattern match at Data.Either line 206, column 3 - line 206, column 33: " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
	            };
	        };
	    };
	});
	var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableEither;
	}, function () {
	    return bifunctorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Left.create)(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 222, column 3 - line 222, column 35: " + [v.constructor.name]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Left.create)(v(v2.value0));
	                };
	                if (v2 instanceof Right) {
	                    return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Right.create)(v1(v2.value0));
	                };
	                throw new Error("Failed pattern match at Data.Either line 220, column 3 - line 220, column 41: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	            };
	        };
	    };
	});
	var applyEither = new Control_Apply.Apply(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return new Left(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map(functorEither)(v.value0)(v1);
	        };
	        throw new Error("Failed pattern match at Data.Either line 89, column 3 - line 89, column 28: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var bindEither = new Control_Bind.Bind(function () {
	    return applyEither;
	}, either(function (e) {
	    return function (v) {
	        return new Left(e);
	    };
	})(function (a) {
	    return function (f) {
	        return f(a);
	    };
	}));
	var semigroupEither = function semigroupEither(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
	        };
	    });
	};
	var semiringEither = function semiringEither(dictSemiring) {
	    return new Data_Semiring.Semiring(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
	        };
	    }, function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
	        };
	    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
	};
	var applicativeEither = new Control_Applicative.Applicative(function () {
	    return applyEither;
	}, Right.create);
	var monadEither = new Control_Monad.Monad(function () {
	    return applicativeEither;
	}, function () {
	    return bindEither;
	});
	var altEither = new Control_Alt.Alt(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return v1;
	        };
	        return v;
	    };
	});
	module.exports = {
	    Left: Left,
	    Right: Right,
	    either: either,
	    fromLeft: fromLeft,
	    fromRight: fromRight,
	    isLeft: isLeft,
	    isRight: isRight,
	    functorEither: functorEither,
	    invariantEither: invariantEither,
	    bifunctorEither: bifunctorEither,
	    applyEither: applyEither,
	    applicativeEither: applicativeEither,
	    altEither: altEither,
	    bindEither: bindEither,
	    monadEither: monadEither,
	    extendEither: extendEither,
	    showEither: showEither,
	    eqEither: eqEither,
	    ordEither: ordEither,
	    boundedEither: boundedEither,
	    foldableEither: foldableEither,
	    bifoldableEither: bifoldableEither,
	    traversableEither: traversableEither,
	    bitraversableEither: bitraversableEither,
	    semiringEither: semiringEither,
	    semigroupEither: semigroupEither
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Category = __webpack_require__(11);
	var Data_Functor = __webpack_require__(8);
	var Data_Semigroup = __webpack_require__(34);
	var Extend = function Extend(__superclass_Data$dotFunctor$dotFunctor_0, extend) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.extend = extend;
	};
	var extendFn = function extendFn(dictSemigroup) {
	    return new Extend(function () {
	        return Data_Functor.functorFn;
	    }, function (f) {
	        return function (g) {
	            return function (w) {
	                return f(function (w$prime) {
	                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
	                });
	            };
	        };
	    });
	};
	var extend = function extend(dict) {
	    return dict.extend;
	};
	var extendFlipped = function extendFlipped(dictExtend) {
	    return function (w) {
	        return function (f) {
	            return extend(dictExtend)(f)(w);
	        };
	    };
	};
	var duplicate = function duplicate(dictExtend) {
	    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
	};
	var composeCoKleisliFlipped = function composeCoKleisliFlipped(dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return f(extend(dictExtend)(g)(w));
	            };
	        };
	    };
	};
	var composeCoKleisli = function composeCoKleisli(dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return g(extend(dictExtend)(f)(w));
	            };
	        };
	    };
	};
	module.exports = {
	    Extend: Extend,
	    composeCoKleisli: composeCoKleisli,
	    composeCoKleisliFlipped: composeCoKleisliFlipped,
	    duplicate: duplicate,
	    extend: extend,
	    extendFlipped: extendFlipped,
	    extendFn: extendFn
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Function = __webpack_require__(10);
	var Data_Monoid = __webpack_require__(61);
	var Data_Monoid_Conj = __webpack_require__(62);
	var Data_Monoid_Disj = __webpack_require__(65);
	var Data_Monoid_Dual = __webpack_require__(66);
	var Data_Monoid_Endo = __webpack_require__(67);
	var Data_Unit = __webpack_require__(13);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Data_Semigroup = __webpack_require__(34);
	var Bifoldable = function Bifoldable(bifoldMap, bifoldl, bifoldr) {
	    this.bifoldMap = bifoldMap;
	    this.bifoldl = bifoldl;
	    this.bifoldr = bifoldr;
	};
	var bifoldr = function bifoldr(dict) {
	    return dict.bifoldr;
	};
	var bitraverse_ = function bitraverse_(dictBifoldable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return bifoldr(dictBifoldable)(function ($18) {
	                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($18));
	                })(function ($19) {
	                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(g($19));
	                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	            };
	        };
	    };
	};
	var bifor_ = function bifor_(dictBifoldable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	var bisequence_ = function bisequence_(dictBifoldable) {
	    return function (dictApplicative) {
	        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var bifoldl = function bifoldl(dict) {
	    return dict.bifoldl;
	};
	var bifoldMapDefaultR = function bifoldMapDefaultR(dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return function (p) {
	                    return bifoldr(dictBifoldable)(function ($20) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f($20));
	                    })(function ($21) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(g($21));
	                    })(Data_Monoid.mempty(dictMonoid))(p);
	                };
	            };
	        };
	    };
	};
	var bifoldMapDefaultL = function bifoldMapDefaultL(dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return function (p) {
	                    return bifoldl(dictBifoldable)(function (m) {
	                        return function (a) {
	                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(f(a));
	                        };
	                    })(function (m) {
	                        return function (b) {
	                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(g(b));
	                        };
	                    })(Data_Monoid.mempty(dictMonoid))(p);
	                };
	            };
	        };
	    };
	};
	var bifoldMap = function bifoldMap(dict) {
	    return dict.bifoldMap;
	};
	var bifoldlDefault = function bifoldlDefault(dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($22)));
	                    })(function ($23) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($23)));
	                    })(p)))(z);
	                };
	            };
	        };
	    };
	};
	var bifoldrDefault = function bifoldrDefault(dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Monoid_Endo.runEndo(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
	                        return Data_Monoid_Endo.Endo(f($24));
	                    })(function ($25) {
	                        return Data_Monoid_Endo.Endo(g($25));
	                    })(p))(z);
	                };
	            };
	        };
	    };
	};
	var bifold = function bifold(dictBifoldable) {
	    return function (dictMonoid) {
	        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var biany = function biany(dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($26) {
	                    return Data_Monoid_Disj.runDisj(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($27) {
	                        return Data_Monoid_Disj.Disj(p($27));
	                    })(function ($28) {
	                        return Data_Monoid_Disj.Disj(q($28));
	                    })($26));
	                };
	            };
	        };
	    };
	};
	var biall = function biall(dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($29) {
	                    return Data_Monoid_Conj.runConj(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($30) {
	                        return Data_Monoid_Conj.Conj(p($30));
	                    })(function ($31) {
	                        return Data_Monoid_Conj.Conj(q($31));
	                    })($29));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bifoldable: Bifoldable,
	    biall: biall,
	    biany: biany,
	    bifold: bifold,
	    bifoldMap: bifoldMap,
	    bifoldMapDefaultL: bifoldMapDefaultL,
	    bifoldMapDefaultR: bifoldMapDefaultR,
	    bifoldl: bifoldl,
	    bifoldlDefault: bifoldlDefault,
	    bifoldr: bifoldr,
	    bifoldrDefault: bifoldrDefault,
	    bifor_: bifor_,
	    bisequence_: bisequence_,
	    bitraverse_: bitraverse_
	};

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Function = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Unit = __webpack_require__(13);
	var Monoid = function Monoid(__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
	    this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
	    this.mempty = mempty;
	};
	var monoidUnit = new Monoid(function () {
	    return Data_Semigroup.semigroupUnit;
	}, Data_Unit.unit);
	var monoidString = new Monoid(function () {
	    return Data_Semigroup.semigroupString;
	}, "");
	var monoidArray = new Monoid(function () {
	    return Data_Semigroup.semigroupArray;
	}, []);
	var mempty = function mempty(dict) {
	    return dict.mempty;
	};
	var monoidFn = function monoidFn(dictMonoid) {
	    return new Monoid(function () {
	        return Data_Semigroup.semigroupFn(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Function["const"](mempty(dictMonoid)));
	};
	module.exports = {
	    Monoid: Monoid,
	    mempty: mempty,
	    monoidUnit: monoidUnit,
	    monoidFn: monoidFn,
	    monoidString: monoidString,
	    monoidArray: monoidArray
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Conj = function Conj(x) {
	    return x;
	};
	var showConj = function showConj(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConj = function semiringConj(dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var semigroupConj = function semigroupConj(dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var runConj = function runConj(v) {
	    return v;
	};
	var monoidConj = function monoidConj(dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupConj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorConj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendConj = new Control_Extend.Extend(function () {
	    return functorConj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqConj = function eqConj(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordConj = function ordConj(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqConj(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadConj = new Control_Comonad.Comonad(function () {
	    return extendConj;
	}, runConj);
	var boundedConj = function boundedConj(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordConj(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyConj = new Control_Apply.Apply(function () {
	    return functorConj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindConj = new Control_Bind.Bind(function () {
	    return applyConj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeConj = new Control_Applicative.Applicative(function () {
	    return applyConj;
	}, Conj);
	var monadConj = new Control_Monad.Monad(function () {
	    return applicativeConj;
	}, function () {
	    return bindConj;
	});
	module.exports = {
	    Conj: Conj,
	    runConj: runConj,
	    eqConj: eqConj,
	    ordConj: ordConj,
	    boundedConj: boundedConj,
	    functorConj: functorConj,
	    invariantConj: invariantConj,
	    applyConj: applyConj,
	    applicativeConj: applicativeConj,
	    bindConj: bindConj,
	    monadConj: monadConj,
	    extendConj: extendConj,
	    comonadConj: comonadConj,
	    showConj: showConj,
	    semigroupConj: semigroupConj,
	    monoidConj: monoidConj,
	    semiringConj: semiringConj
	};

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Extend = __webpack_require__(59);
	var Data_Functor = __webpack_require__(8);
	var Comonad = function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
	    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
	    this.extract = extract;
	};
	var extract = function extract(dict) {
	    return dict.extract;
	};
	module.exports = {
	    Comonad: Comonad,
	    extract: extract
	};

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Invariant = function Invariant(imap) {
	    this.imap = imap;
	};
	var imapF = function imapF(dictFunctor) {
	    return function ($1) {
	        return Data_Function["const"](Data_Functor.map(dictFunctor)($1));
	    };
	};
	var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
	var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
	var imap = function imap(dict) {
	    return dict.imap;
	};
	module.exports = {
	    Invariant: Invariant,
	    imap: imap,
	    imapF: imapF,
	    invariantFn: invariantFn,
	    invariantArray: invariantArray
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Functor = __webpack_require__(8);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Disj = function Disj(x) {
	    return x;
	};
	var showDisj = function showDisj(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringDisj = function semiringDisj(dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var runDisj = function runDisj(v) {
	    return v;
	};
	var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDisj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var functorDisj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDisj = new Control_Extend.Extend(function () {
	    return functorDisj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDisj = function eqDisj(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordDisj = function ordDisj(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqDisj(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadDisj = new Control_Comonad.Comonad(function () {
	    return extendDisj;
	}, runDisj);
	var boundedDisj = function boundedDisj(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordDisj(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyDisj = new Control_Apply.Apply(function () {
	    return functorDisj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDisj = new Control_Bind.Bind(function () {
	    return applyDisj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDisj = new Control_Applicative.Applicative(function () {
	    return applyDisj;
	}, Disj);
	var monadDisj = new Control_Monad.Monad(function () {
	    return applicativeDisj;
	}, function () {
	    return bindDisj;
	});
	module.exports = {
	    Disj: Disj,
	    runDisj: runDisj,
	    eqDisj: eqDisj,
	    ordDisj: ordDisj,
	    boundedDisj: boundedDisj,
	    functorDisj: functorDisj,
	    applyDisj: applyDisj,
	    applicativeDisj: applicativeDisj,
	    bindDisj: bindDisj,
	    monadDisj: monadDisj,
	    extendDisj: extendDisj,
	    comonadDisj: comonadDisj,
	    showDisj: showDisj,
	    semigroupDisj: semigroupDisj,
	    monoidDisj: monoidDisj,
	    semiringDisj: semiringDisj
	};

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var Dual = function Dual(x) {
	    return x;
	};
	var showDual = function showDual(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupDual = function semigroupDual(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v1)(v);
	        };
	    });
	};
	var runDual = function runDual(v) {
	    return v;
	};
	var monoidDual = function monoidDual(dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDual(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorDual = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDual = new Control_Extend.Extend(function () {
	    return functorDual;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDual = function eqDual(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordDual = function ordDual(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqDual(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadDual = new Control_Comonad.Comonad(function () {
	    return extendDual;
	}, runDual);
	var boundedDual = function boundedDual(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordDual(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyDual = new Control_Apply.Apply(function () {
	    return functorDual;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDual = new Control_Bind.Bind(function () {
	    return applyDual;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDual = new Control_Applicative.Applicative(function () {
	    return applyDual;
	}, Dual);
	var monadDual = new Control_Monad.Monad(function () {
	    return applicativeDual;
	}, function () {
	    return bindDual;
	});
	module.exports = {
	    Dual: Dual,
	    runDual: runDual,
	    eqDual: eqDual,
	    ordDual: ordDual,
	    boundedDual: boundedDual,
	    functorDual: functorDual,
	    invariantDual: invariantDual,
	    applyDual: applyDual,
	    applicativeDual: applicativeDual,
	    bindDual: bindDual,
	    monadDual: monadDual,
	    extendDual: extendDual,
	    comonadDual: comonadDual,
	    showDual: showDual,
	    semigroupDual: semigroupDual,
	    monoidDual: monoidDual
	};

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Function = __webpack_require__(10);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Endo = function Endo(x) {
	    return x;
	};
	var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function ($10) {
	            return v(v1($10));
	        };
	    };
	});
	var runEndo = function runEndo(v) {
	    return v;
	};
	var monoidEndo = new Data_Monoid.Monoid(function () {
	    return semigroupEndo;
	}, Control_Category.id(Control_Category.categoryFn));
	var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
	    return function (ba) {
	        return function (v) {
	            return function ($11) {
	                return ab(v(ba($11)));
	            };
	        };
	    };
	});
	module.exports = {
	    Endo: Endo,
	    runEndo: runEndo,
	    invariantEndo: invariantEndo,
	    semigroupEndo: semigroupEndo,
	    monoidEndo: monoidEndo
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Category = __webpack_require__(11);
	var Bifunctor = function Bifunctor(bimap) {
	    this.bimap = bimap;
	};
	var bimap = function bimap(dict) {
	    return dict.bimap;
	};
	var lmap = function lmap(dictBifunctor) {
	    return function (f) {
	        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var rmap = function rmap(dictBifunctor) {
	    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
	};
	module.exports = {
	    Bifunctor: Bifunctor,
	    bimap: bimap,
	    lmap: lmap,
	    rmap: rmap
	};

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Category = __webpack_require__(11);
	var Data_Bifoldable = __webpack_require__(60);
	var Data_Bifunctor = __webpack_require__(68);
	var Bitraversable = function Bitraversable(__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
	    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
	    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
	    this.bisequence = bisequence;
	    this.bitraverse = bitraverse;
	};
	var bitraverse = function bitraverse(dict) {
	    return dict.bitraverse;
	};
	var bisequenceDefault = function bisequenceDefault(dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(t);
	        };
	    };
	};
	var bisequence = function bisequence(dict) {
	    return dict.bisequence;
	};
	var bitraverseDefault = function bitraverseDefault(dictBitraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return function (t) {
	                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
	                };
	            };
	        };
	    };
	};
	var bifor = function bifor(dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bitraversable: Bitraversable,
	    bifor: bifor,
	    bisequence: bisequence,
	    bisequenceDefault: bisequenceDefault,
	    bitraverse: bitraverse,
	    bitraverseDefault: bitraverseDefault
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(71);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Plus = __webpack_require__(51);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Maybe = __webpack_require__(72);
	var Data_Maybe_First = __webpack_require__(74);
	var Data_Maybe_Last = __webpack_require__(75);
	var Data_Monoid = __webpack_require__(61);
	var Data_Monoid_Additive = __webpack_require__(76);
	var Data_Monoid_Conj = __webpack_require__(62);
	var Data_Monoid_Disj = __webpack_require__(65);
	var Data_Monoid_Dual = __webpack_require__(66);
	var Data_Monoid_Endo = __webpack_require__(67);
	var Data_Monoid_Multiplicative = __webpack_require__(77);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(13);
	var Control_Alt = __webpack_require__(49);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Data_Semigroup = __webpack_require__(34);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Foldable = function Foldable(foldMap, foldl, foldr) {
	    this.foldMap = foldMap;
	    this.foldl = foldl;
	    this.foldr = foldr;
	};
	var foldr = function foldr(dict) {
	    return dict.foldr;
	};
	var oneOf = function oneOf(dictFoldable) {
	    return function (dictPlus) {
	        return foldr(dictFoldable)(Control_Alt.alt(dictPlus["__superclass_Control.Alt.Alt_0"]()))(Control_Plus.empty(dictPlus));
	    };
	};
	var traverse_ = function traverse_(dictApplicative) {
	    return function (dictFoldable) {
	        return function (f) {
	            return foldr(dictFoldable)(function ($164) {
	                return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($164));
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var for_ = function for_(dictApplicative) {
	    return function (dictFoldable) {
	        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
	    };
	};
	var sequence_ = function sequence_(dictApplicative) {
	    return function (dictFoldable) {
	        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var foldl = function foldl(dict) {
	    return dict.foldl;
	};
	var intercalate = function intercalate(dictFoldable) {
	    return function (dictMonoid) {
	        return function (sep) {
	            return function (xs) {
	                var go = function go(v) {
	                    return function (x) {
	                        if (v.init) {
	                            return {
	                                init: false,
	                                acc: x
	                            };
	                        };
	                        return {
	                            init: false,
	                            acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
	                        };
	                    };
	                };
	                return foldl(dictFoldable)(go)({
	                    init: true,
	                    acc: Data_Monoid.mempty(dictMonoid)
	                })(xs).acc;
	            };
	        };
	    };
	};
	var maximumBy = function maximumBy(dictFoldable) {
	    return function (cmp) {
	        var max$prime = function max$prime(v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just(function () {
	                        var $89 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
	                        if ($89) {
	                            return v.value0;
	                        };
	                        if (!$89) {
	                            return v1;
	                        };
	                        throw new Error("Failed pattern match at Data.Foldable line 290, column 27 - line 290, column 57: " + [$89.constructor.name]);
	                    }());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 289, column 3 - line 289, column 27: " + [v.constructor.name, v1.constructor.name]);
	            };
	        };
	        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var maximum = function maximum(dictOrd) {
	    return function (dictFoldable) {
	        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var minimumBy = function minimumBy(dictFoldable) {
	    return function (cmp) {
	        var min$prime = function min$prime(v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just(function () {
	                        var $93 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
	                        if ($93) {
	                            return v.value0;
	                        };
	                        if (!$93) {
	                            return v1;
	                        };
	                        throw new Error("Failed pattern match at Data.Foldable line 303, column 27 - line 303, column 57: " + [$93.constructor.name]);
	                    }());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 302, column 3 - line 302, column 27: " + [v.constructor.name, v1.constructor.name]);
	            };
	        };
	        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var minimum = function minimum(dictOrd) {
	    return function (dictFoldable) {
	        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var product = function product(dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
	    };
	};
	var sum = function sum(dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
	    };
	};
	var foldableMultiplicative = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableMaybe = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Data_Maybe.Nothing) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Data_Maybe.Just) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 132, column 3 - line 132, column 30: " + [f.constructor.name, v.constructor.name]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 130, column 3 - line 130, column 25: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 128, column 3 - line 128, column 25: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var foldableDual = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableDisj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableConj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableAdditive = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (xs) {
	                return foldr(dictFoldable)(function (x) {
	                    return function (acc) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
	                    };
	                })(Data_Monoid.mempty(dictMonoid))(xs);
	            };
	        };
	    };
	};
	var foldableArray = new Foldable(function (dictMonoid) {
	    return foldMapDefaultR(foldableArray)(dictMonoid);
	}, $foreign.foldlArray, $foreign.foldrArray);
	var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (xs) {
	                return foldl(dictFoldable)(function (acc) {
	                    return function (x) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
	                    };
	                })(Data_Monoid.mempty(dictMonoid))(xs);
	            };
	        };
	    };
	};
	var foldMap = function foldMap(dict) {
	    return dict.foldMap;
	};
	var foldableFirst = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldableLast = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldlDefault = function foldlDefault(dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($165) {
	                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($165)));
	                })(xs)))(u);
	            };
	        };
	    };
	};
	var foldrDefault = function foldrDefault(dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Monoid_Endo.runEndo(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($166) {
	                    return Data_Monoid_Endo.Endo(c($166));
	                })(xs))(u);
	            };
	        };
	    };
	};
	var fold = function fold(dictFoldable) {
	    return function (dictMonoid) {
	        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var find = function find(dictFoldable) {
	    return function (p) {
	        var go = function go(v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing && p(v1)) {
	                    return new Data_Maybe.Just(v1);
	                };
	                return v;
	            };
	        };
	        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var any = function any(dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function ($167) {
	                return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($168) {
	                    return Data_Monoid_Disj.Disj(p($168));
	                })($167));
	            };
	        };
	    };
	};
	var elem = function elem(dictFoldable) {
	    return function (dictEq) {
	        return function ($169) {
	            return any(dictFoldable)(Data_BooleanAlgebra.booleanAlgebraBoolean)(Data_Eq.eq(dictEq)($169));
	        };
	    };
	};
	var notElem = function notElem(dictFoldable) {
	    return function (dictEq) {
	        return function (x) {
	            return function ($170) {
	                return !elem(dictFoldable)(dictEq)(x)($170);
	            };
	        };
	    };
	};
	var or = function or(dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return any(dictFoldable)(dictBooleanAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var all = function all(dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function ($171) {
	                return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($172) {
	                    return Data_Monoid_Conj.Conj(p($172));
	                })($171));
	            };
	        };
	    };
	};
	var and = function and(dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return all(dictFoldable)(dictBooleanAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Foldable: Foldable,
	    all: all,
	    and: and,
	    any: any,
	    elem: elem,
	    find: find,
	    fold: fold,
	    foldMap: foldMap,
	    foldMapDefaultL: foldMapDefaultL,
	    foldMapDefaultR: foldMapDefaultR,
	    foldl: foldl,
	    foldlDefault: foldlDefault,
	    foldr: foldr,
	    foldrDefault: foldrDefault,
	    for_: for_,
	    intercalate: intercalate,
	    maximum: maximum,
	    maximumBy: maximumBy,
	    minimum: minimum,
	    minimumBy: minimumBy,
	    notElem: notElem,
	    oneOf: oneOf,
	    or: or,
	    product: product,
	    sequence_: sequence_,
	    sum: sum,
	    traverse_: traverse_,
	    foldableArray: foldableArray,
	    foldableMaybe: foldableMaybe,
	    foldableFirst: foldableFirst,
	    foldableLast: foldableLast,
	    foldableAdditive: foldableAdditive,
	    foldableDual: foldableDual,
	    foldableDisj: foldableDisj,
	    foldableConj: foldableConj,
	    foldableMultiplicative: foldableMultiplicative
	};

/***/ },
/* 71 */
/***/ function(module, exports) {

	"use strict";

	exports.foldrArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = len - 1; i >= 0; i--) {
	        acc = f(xs[i])(acc);
	      }
	      return acc;
	    };
	  };
	};

	exports.foldlArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = 0; i < len; i++) {
	        acc = f(acc)(xs[i]);
	      }
	      return acc;
	    };
	  };
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var Data_Unit = __webpack_require__(13);
	var Control_Category = __webpack_require__(11);
	var Just = function () {
	    function Just(value0) {
	        this.value0 = value0;
	    };
	    Just.create = function (value0) {
	        return new Just(value0);
	    };
	    return Just;
	}();
	var Nothing = function () {
	    function Nothing() {};
	    Nothing.value = new Nothing();
	    return Nothing;
	}();
	var showMaybe = function showMaybe(dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Just) {
	            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
	        };
	        if (v instanceof Nothing) {
	            return "Nothing";
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 220, column 3 - line 221, column 3: " + [v.constructor.name]);
	    });
	};
	var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            if (v instanceof Nothing) {
	                return v1;
	            };
	            if (v1 instanceof Nothing) {
	                return v;
	            };
	            if (v instanceof Just && v1 instanceof Just) {
	                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 186, column 3 - line 186, column 23: " + [v.constructor.name, v1.constructor.name]);
	        };
	    });
	};
	var monoidMaybe = function monoidMaybe(dictSemigroup) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMaybe(dictSemigroup);
	    }, Nothing.value);
	};
	var maybe$prime = function maybe$prime(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v(Data_Unit.unit);
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 245, column 1 - line 245, column 28: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	};
	var maybe = function maybe(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v;
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 22: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	};
	var isNothing = maybe(true)(Data_Function["const"](false));
	var isJust = maybe(false)(Data_Function["const"](true));
	var functorMaybe = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Just) {
	            return new Just(v(v1.value0));
	        };
	        return Nothing.value;
	    };
	});
	var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
	var fromMaybe$prime = function fromMaybe$prime(a) {
	    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromMaybe = function fromMaybe(a) {
	    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromJust = function fromJust(dictPartial) {
	    return function (v) {
	        var __unused = function __unused(dictPartial1) {
	            return function ($dollar29) {
	                return $dollar29;
	            };
	        };
	        return __unused(dictPartial)(function () {
	            if (v instanceof Just) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [v.constructor.name]);
	        }());
	    };
	};
	var extendMaybe = new Control_Extend.Extend(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Nothing) {
	            return Nothing.value;
	        };
	        return new Just(v(v1));
	    };
	});
	var eqMaybe = function eqMaybe(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            if (v instanceof Nothing && v1 instanceof Nothing) {
	                return true;
	            };
	            if (v instanceof Just && v1 instanceof Just) {
	                return Data_Eq.eq(dictEq)(v.value0)(v1.value0);
	            };
	            return false;
	        };
	    });
	};
	var ordMaybe = function ordMaybe(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqMaybe(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            if (v instanceof Just && v1 instanceof Just) {
	                return Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	            };
	            if (v instanceof Nothing && v1 instanceof Nothing) {
	                return Data_Ordering.EQ.value;
	            };
	            if (v instanceof Nothing) {
	                return Data_Ordering.LT.value;
	            };
	            if (v1 instanceof Nothing) {
	                return Data_Ordering.GT.value;
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 207, column 3 - line 207, column 42: " + [v.constructor.name, v1.constructor.name]);
	        };
	    });
	};
	var boundedMaybe = function boundedMaybe(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordMaybe(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
	};
	var applyMaybe = new Control_Apply.Apply(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return Data_Functor.map(functorMaybe)(v.value0)(v1);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 78, column 3 - line 78, column 31: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var bindMaybe = new Control_Bind.Bind(function () {
	    return applyMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return v1(v.value0);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 137, column 3 - line 137, column 24: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var applicativeMaybe = new Control_Applicative.Applicative(function () {
	    return applyMaybe;
	}, Just.create);
	var monadMaybe = new Control_Monad.Monad(function () {
	    return applicativeMaybe;
	}, function () {
	    return bindMaybe;
	});
	var altMaybe = new Control_Alt.Alt(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nothing) {
	            return v1;
	        };
	        return v;
	    };
	});
	var plusMaybe = new Control_Plus.Plus(function () {
	    return altMaybe;
	}, Nothing.value);
	var alternativeMaybe = new Control_Alternative.Alternative(function () {
	    return applicativeMaybe;
	}, function () {
	    return plusMaybe;
	});
	var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
	    return alternativeMaybe;
	}, function () {
	    return monadMaybe;
	});
	module.exports = {
	    Just: Just,
	    Nothing: Nothing,
	    fromJust: fromJust,
	    fromMaybe: fromMaybe,
	    "fromMaybe'": fromMaybe$prime,
	    isJust: isJust,
	    isNothing: isNothing,
	    maybe: maybe,
	    "maybe'": maybe$prime,
	    functorMaybe: functorMaybe,
	    applyMaybe: applyMaybe,
	    applicativeMaybe: applicativeMaybe,
	    altMaybe: altMaybe,
	    plusMaybe: plusMaybe,
	    alternativeMaybe: alternativeMaybe,
	    bindMaybe: bindMaybe,
	    monadMaybe: monadMaybe,
	    monadZeroMaybe: monadZeroMaybe,
	    extendMaybe: extendMaybe,
	    invariantMaybe: invariantMaybe,
	    semigroupMaybe: semigroupMaybe,
	    monoidMaybe: monoidMaybe,
	    eqMaybe: eqMaybe,
	    ordMaybe: ordMaybe,
	    boundedMaybe: boundedMaybe,
	    showMaybe: showMaybe
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Control_Plus = __webpack_require__(51);
	var Data_Functor = __webpack_require__(8);
	var Data_Unit = __webpack_require__(13);
	var MonadZero = function MonadZero(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
	    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	};
	var monadZeroArray = new MonadZero(function () {
	    return Control_Alternative.alternativeArray;
	}, function () {
	    return Control_Monad.monadArray;
	});
	var guard = function guard(dictMonadZero) {
	    return function (v) {
	        if (v) {
	            return Control_Applicative.pure(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]()["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
	        };
	        if (!v) {
	            return Control_Plus.empty(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]()["__superclass_Control.Plus.Plus_1"]());
	        };
	        throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [v.constructor.name]);
	    };
	};
	module.exports = {
	    MonadZero: MonadZero,
	    guard: guard,
	    monadZeroArray: monadZeroArray
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var Control_Semigroupoid = __webpack_require__(12);
	var First = function First(x) {
	    return x;
	};
	var showFirst = function showFirst(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Just) {
	            return v;
	        };
	        return v1;
	    };
	});
	var runFirst = function runFirst(v) {
	    return v;
	};
	var monoidFirst = new Data_Monoid.Monoid(function () {
	    return semigroupFirst;
	}, Data_Maybe.Nothing.value);
	var functorFirst = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(f)(v);
	    };
	});
	var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
	var extendFirst = new Control_Extend.Extend(function () {
	    return functorFirst;
	}, function (f) {
	    return function (v) {
	        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
	            return f(First($34));
	        })(v);
	    };
	});
	var eqFirst = function eqFirst(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(v)(v1);
	        };
	    });
	};
	var ordFirst = function ordFirst(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqFirst(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
	        };
	    });
	};
	var boundedFirst = function boundedFirst(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordFirst(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(Data_Maybe.boundedMaybe(dictBounded)), Data_Bounded.top(Data_Maybe.boundedMaybe(dictBounded)));
	};
	var applyFirst = new Control_Apply.Apply(function () {
	    return functorFirst;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(v)(v1);
	    };
	});
	var bindFirst = new Control_Bind.Bind(function () {
	    return applyFirst;
	}, function (v) {
	    return function (f) {
	        return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
	            return runFirst(f($35));
	        });
	    };
	});
	var applicativeFirst = new Control_Applicative.Applicative(function () {
	    return applyFirst;
	}, function ($36) {
	    return First(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($36));
	});
	var monadFirst = new Control_Monad.Monad(function () {
	    return applicativeFirst;
	}, function () {
	    return bindFirst;
	});
	module.exports = {
	    First: First,
	    runFirst: runFirst,
	    eqFirst: eqFirst,
	    ordFirst: ordFirst,
	    boundedFirst: boundedFirst,
	    functorFirst: functorFirst,
	    invariantFirst: invariantFirst,
	    applyFirst: applyFirst,
	    applicativeFirst: applicativeFirst,
	    bindFirst: bindFirst,
	    monadFirst: monadFirst,
	    extendFirst: extendFirst,
	    showFirst: showFirst,
	    semigroupFirst: semigroupFirst,
	    monoidFirst: monoidFirst
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var Control_Semigroupoid = __webpack_require__(12);
	var Last = function Last(x) {
	    return x;
	};
	var showLast = function showLast(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Maybe.Just) {
	            return v1;
	        };
	        if (v1 instanceof Data_Maybe.Nothing) {
	            return v;
	        };
	        throw new Error("Failed pattern match at Data.Maybe.Last line 67, column 3 - line 67, column 39: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var runLast = function runLast(v) {
	    return v;
	};
	var monoidLast = new Data_Monoid.Monoid(function () {
	    return semigroupLast;
	}, Data_Maybe.Nothing.value);
	var functorLast = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(f)(v);
	    };
	});
	var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
	var extendLast = new Control_Extend.Extend(function () {
	    return functorLast;
	}, function (f) {
	    return function (v) {
	        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
	            return f(Last($34));
	        })(v);
	    };
	});
	var eqLast = function eqLast(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(v)(v1);
	        };
	    });
	};
	var ordLast = function ordLast(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqLast(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
	        };
	    });
	};
	var boundedLast = function boundedLast(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordLast(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(Data_Maybe.boundedMaybe(dictBounded)), Data_Bounded.top(Data_Maybe.boundedMaybe(dictBounded)));
	};
	var applyLast = new Control_Apply.Apply(function () {
	    return functorLast;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(v)(v1);
	    };
	});
	var bindLast = new Control_Bind.Bind(function () {
	    return applyLast;
	}, function (v) {
	    return function (f) {
	        return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
	            return runLast(f($35));
	        });
	    };
	});
	var applicativeLast = new Control_Applicative.Applicative(function () {
	    return applyLast;
	}, function ($36) {
	    return Last(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($36));
	});
	var monadLast = new Control_Monad.Monad(function () {
	    return applicativeLast;
	}, function () {
	    return bindLast;
	});
	module.exports = {
	    Last: Last,
	    runLast: runLast,
	    eqLast: eqLast,
	    ordLast: ordLast,
	    boundedLast: boundedLast,
	    functorLast: functorLast,
	    invariantLast: invariantLast,
	    applyLast: applyLast,
	    applicativeLast: applicativeLast,
	    bindLast: bindLast,
	    monadLast: monadLast,
	    extendLast: extendLast,
	    showLast: showLast,
	    semigroupLast: semigroupLast,
	    monoidLast: monoidLast
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Additive = function Additive(x) {
	    return x;
	};
	var showAdditive = function showAdditive(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupAdditive = function semigroupAdditive(dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    });
	};
	var runAdditive = function runAdditive(v) {
	    return v;
	};
	var monoidAdditive = function monoidAdditive(dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAdditive(dictSemiring);
	    }, Data_Semiring.zero(dictSemiring));
	};
	var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorAdditive = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendAdditive = new Control_Extend.Extend(function () {
	    return functorAdditive;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqAdditive = function eqAdditive(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordAdditive = function ordAdditive(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqAdditive(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadAdditive = new Control_Comonad.Comonad(function () {
	    return extendAdditive;
	}, runAdditive);
	var boundedAdditive = function boundedAdditive(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordAdditive(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyAdditive = new Control_Apply.Apply(function () {
	    return functorAdditive;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindAdditive = new Control_Bind.Bind(function () {
	    return applyAdditive;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeAdditive = new Control_Applicative.Applicative(function () {
	    return applyAdditive;
	}, Additive);
	var monadAdditive = new Control_Monad.Monad(function () {
	    return applicativeAdditive;
	}, function () {
	    return bindAdditive;
	});
	module.exports = {
	    Additive: Additive,
	    runAdditive: runAdditive,
	    eqAdditive: eqAdditive,
	    ordAdditive: ordAdditive,
	    boundedAdditive: boundedAdditive,
	    functorAdditive: functorAdditive,
	    invariantAdditive: invariantAdditive,
	    applyAdditive: applyAdditive,
	    applicativeAdditive: applicativeAdditive,
	    bindAdditive: bindAdditive,
	    monadAdditive: monadAdditive,
	    extendAdditive: extendAdditive,
	    comonadAdditive: comonadAdditive,
	    showAdditive: showAdditive,
	    semigroupAdditive: semigroupAdditive,
	    monoidAdditive: monoidAdditive
	};

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Multiplicative = function Multiplicative(x) {
	    return x;
	};
	var showMultiplicative = function showMultiplicative(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupMultiplicative = function semigroupMultiplicative(dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    });
	};
	var runMultiplicative = function runMultiplicative(v) {
	    return v;
	};
	var monoidMultiplicative = function monoidMultiplicative(dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMultiplicative(dictSemiring);
	    }, Data_Semiring.one(dictSemiring));
	};
	var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorMultiplicative = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendMultiplicative = new Control_Extend.Extend(function () {
	    return functorMultiplicative;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqMultiplicative = function eqMultiplicative(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordMultiplicative = function ordMultiplicative(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqMultiplicative(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadMultiplicative = new Control_Comonad.Comonad(function () {
	    return extendMultiplicative;
	}, runMultiplicative);
	var boundedMultiplicative = function boundedMultiplicative(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordMultiplicative(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyMultiplicative = new Control_Apply.Apply(function () {
	    return functorMultiplicative;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindMultiplicative = new Control_Bind.Bind(function () {
	    return applyMultiplicative;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
	    return applyMultiplicative;
	}, Multiplicative);
	var monadMultiplicative = new Control_Monad.Monad(function () {
	    return applicativeMultiplicative;
	}, function () {
	    return bindMultiplicative;
	});
	module.exports = {
	    Multiplicative: Multiplicative,
	    runMultiplicative: runMultiplicative,
	    eqMultiplicative: eqMultiplicative,
	    ordMultiplicative: ordMultiplicative,
	    boundedMultiplicative: boundedMultiplicative,
	    functorMultiplicative: functorMultiplicative,
	    invariantMultiplicative: invariantMultiplicative,
	    applyMultiplicative: applyMultiplicative,
	    applicativeMultiplicative: applicativeMultiplicative,
	    bindMultiplicative: bindMultiplicative,
	    monadMultiplicative: monadMultiplicative,
	    extendMultiplicative: extendMultiplicative,
	    comonadMultiplicative: comonadMultiplicative,
	    showMultiplicative: showMultiplicative,
	    semigroupMultiplicative: semigroupMultiplicative,
	    monoidMultiplicative: monoidMultiplicative
	};

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(79);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Category = __webpack_require__(11);
	var Data_Foldable = __webpack_require__(70);
	var Data_Functor = __webpack_require__(8);
	var Data_Maybe = __webpack_require__(72);
	var Data_Maybe_First = __webpack_require__(74);
	var Data_Maybe_Last = __webpack_require__(75);
	var Data_Monoid_Additive = __webpack_require__(76);
	var Data_Monoid_Conj = __webpack_require__(62);
	var Data_Monoid_Disj = __webpack_require__(65);
	var Data_Monoid_Dual = __webpack_require__(66);
	var Data_Monoid_Multiplicative = __webpack_require__(77);
	var StateL = function StateL(x) {
	    return x;
	};
	var StateR = function StateR(x) {
	    return x;
	};
	var Traversable = function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
	    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.sequence = sequence;
	    this.traverse = traverse;
	};
	var traverse = function traverse(dict) {
	    return dict.traverse;
	};
	var traversableMultiplicative = new Traversable(function () {
	    return Data_Foldable.foldableMultiplicative;
	}, function () {
	    return Data_Monoid_Multiplicative.functorMultiplicative;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
	        };
	    };
	});
	var traversableMaybe = new Traversable(function () {
	    return Data_Foldable.foldableMaybe;
	}, function () {
	    return Data_Maybe.functorMaybe;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Traversable line 88, column 3 - line 88, column 35: " + [v.constructor.name]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Traversable line 86, column 3 - line 86, column 37: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var traversableDual = new Traversable(function () {
	    return Data_Foldable.foldableDual;
	}, function () {
	    return Data_Monoid_Dual.functorDual;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
	        };
	    };
	});
	var traversableDisj = new Traversable(function () {
	    return Data_Foldable.foldableDisj;
	}, function () {
	    return Data_Monoid_Disj.functorDisj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
	        };
	    };
	});
	var traversableConj = new Traversable(function () {
	    return Data_Foldable.foldableConj;
	}, function () {
	    return Data_Monoid_Conj.functorConj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
	        };
	    };
	});
	var traversableAdditive = new Traversable(function () {
	    return Data_Foldable.foldableAdditive;
	}, function () {
	    return Data_Monoid_Additive.functorAdditive;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
	        };
	    };
	});
	var stateR = function stateR(v) {
	    return v;
	};
	var stateL = function stateL(v) {
	    return v;
	};
	var sequenceDefault = function sequenceDefault(dictTraversable) {
	    return function (dictApplicative) {
	        return function (tma) {
	            return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
	        };
	    };
	};
	var traversableArray = new Traversable(function () {
	    return Data_Foldable.foldableArray;
	}, function () {
	    return Data_Functor.functorArray;
	}, function (dictApplicative) {
	    return sequenceDefault(traversableArray)(dictApplicative);
	}, function (dictApplicative) {
	    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
	});
	var sequence = function sequence(dict) {
	    return dict.sequence;
	};
	var traversableFirst = new Traversable(function () {
	    return Data_Foldable.foldableFirst;
	}, function () {
	    return Data_Maybe_First.functorFirst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traversableLast = new Traversable(function () {
	    return Data_Foldable.foldableLast;
	}, function () {
	    return Data_Maybe_Last.functorLast;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traverseDefault = function traverseDefault(dictTraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (ta) {
	                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable["__superclass_Data.Functor.Functor_0"]())(f)(ta));
	            };
	        };
	    };
	};
	var functorStateR = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var $75 = stateR(k)(s);
	            return {
	                accum: $75.accum,
	                value: f($75.value)
	            };
	        };
	    };
	});
	var functorStateL = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var $78 = stateL(k)(s);
	            return {
	                accum: $78.accum,
	                value: f($78.value)
	            };
	        };
	    };
	});
	var $$for = function $$for(dictApplicative) {
	    return function (dictTraversable) {
	        return function (x) {
	            return function (f) {
	                return traverse(dictTraversable)(dictApplicative)(f)(x);
	            };
	        };
	    };
	};
	var applyStateR = new Control_Apply.Apply(function () {
	    return functorStateR;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var $81 = stateR(x)(s);
	            var $82 = stateR(f)($81.accum);
	            return {
	                accum: $82.accum,
	                value: $82.value($81.value)
	            };
	        };
	    };
	});
	var applyStateL = new Control_Apply.Apply(function () {
	    return functorStateL;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var $87 = stateL(f)(s);
	            var $88 = stateL(x)($87.accum);
	            return {
	                accum: $88.accum,
	                value: $87.value($88.value)
	            };
	        };
	    };
	});
	var applicativeStateR = new Control_Applicative.Applicative(function () {
	    return applyStateR;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s,
	            value: a
	        };
	    };
	});
	var mapAccumR = function mapAccumR(dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanr = function scanr(dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return mapAccumR(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(a)(b);
	                        return {
	                            accum: b$prime,
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs).value;
	            };
	        };
	    };
	};
	var applicativeStateL = new Control_Applicative.Applicative(function () {
	    return applyStateL;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s,
	            value: a
	        };
	    };
	});
	var mapAccumL = function mapAccumL(dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanl = function scanl(dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return mapAccumL(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(b)(a);
	                        return {
	                            accum: b$prime,
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs).value;
	            };
	        };
	    };
	};
	module.exports = {
	    Traversable: Traversable,
	    "for": $$for,
	    mapAccumL: mapAccumL,
	    mapAccumR: mapAccumR,
	    scanl: scanl,
	    scanr: scanr,
	    sequence: sequence,
	    sequenceDefault: sequenceDefault,
	    traverse: traverse,
	    traverseDefault: traverseDefault,
	    traversableArray: traversableArray,
	    traversableMaybe: traversableMaybe,
	    traversableFirst: traversableFirst,
	    traversableLast: traversableLast,
	    traversableAdditive: traversableAdditive,
	    traversableDual: traversableDual,
	    traversableConj: traversableConj,
	    traversableDisj: traversableDisj,
	    traversableMultiplicative: traversableMultiplicative
	};

/***/ },
/* 79 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Traversable

	// jshint maxparams: 3

	exports.traverseArrayImpl = function () {
	  function Cont(fn) {
	    this.fn = fn;
	  }

	  var emptyList = {};

	  var ConsCell = function ConsCell(head, tail) {
	    this.head = head;
	    this.tail = tail;
	  };

	  function consList(x) {
	    return function (xs) {
	      return new ConsCell(x, xs);
	    };
	  }

	  function listToArray(list) {
	    var arr = [];
	    while (list !== emptyList) {
	      arr.push(list.head);
	      list = list.tail;
	    }
	    return arr;
	  }

	  return function (apply) {
	    return function (map) {
	      return function (pure) {
	        return function (f) {
	          var buildFrom = function buildFrom(x, ys) {
	            return apply(map(consList)(f(x)))(ys);
	          };

	          var go = function go(acc, currentLen, xs) {
	            if (currentLen === 0) {
	              return acc;
	            } else {
	              var last = xs[currentLen - 1];
	              return new Cont(function () {
	                return go(buildFrom(last, acc), currentLen - 1, xs);
	              });
	            }
	          };

	          return function (array) {
	            var result = go(pure(emptyList), array.length, array);
	            while (result instanceof Cont) {
	              result = result.fn();
	            }

	            return map(listToArray)(result);
	          };
	        };
	      };
	    };
	  };
	}();

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(81);
	var Data_Unit = __webpack_require__(13);
	module.exports = {
	    mkFn0: $foreign.mkFn0,
	    mkFn1: $foreign.mkFn1,
	    mkFn10: $foreign.mkFn10,
	    mkFn2: $foreign.mkFn2,
	    mkFn3: $foreign.mkFn3,
	    mkFn4: $foreign.mkFn4,
	    mkFn5: $foreign.mkFn5,
	    mkFn6: $foreign.mkFn6,
	    mkFn7: $foreign.mkFn7,
	    mkFn8: $foreign.mkFn8,
	    mkFn9: $foreign.mkFn9,
	    runFn0: $foreign.runFn0,
	    runFn1: $foreign.runFn1,
	    runFn10: $foreign.runFn10,
	    runFn2: $foreign.runFn2,
	    runFn3: $foreign.runFn3,
	    runFn4: $foreign.runFn4,
	    runFn5: $foreign.runFn5,
	    runFn6: $foreign.runFn6,
	    runFn7: $foreign.runFn7,
	    runFn8: $foreign.runFn8,
	    runFn9: $foreign.runFn9
	};

/***/ },
/* 81 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Function.Uncurried

	exports.mkFn0 = function (fn) {
	  return function () {
	    return fn({});
	  };
	};

	exports.mkFn1 = function (fn) {
	  return function (a) {
	    return fn(a);
	  };
	};

	exports.mkFn2 = function (fn) {
	  /* jshint maxparams: 2 */
	  return function (a, b) {
	    return fn(a)(b);
	  };
	};

	exports.mkFn3 = function (fn) {
	  /* jshint maxparams: 3 */
	  return function (a, b, c) {
	    return fn(a)(b)(c);
	  };
	};

	exports.mkFn4 = function (fn) {
	  /* jshint maxparams: 4 */
	  return function (a, b, c, d) {
	    return fn(a)(b)(c)(d);
	  };
	};

	exports.mkFn5 = function (fn) {
	  /* jshint maxparams: 5 */
	  return function (a, b, c, d, e) {
	    return fn(a)(b)(c)(d)(e);
	  };
	};

	exports.mkFn6 = function (fn) {
	  /* jshint maxparams: 6 */
	  return function (a, b, c, d, e, f) {
	    return fn(a)(b)(c)(d)(e)(f);
	  };
	};

	exports.mkFn7 = function (fn) {
	  /* jshint maxparams: 7 */
	  return function (a, b, c, d, e, f, g) {
	    return fn(a)(b)(c)(d)(e)(f)(g);
	  };
	};

	exports.mkFn8 = function (fn) {
	  /* jshint maxparams: 8 */
	  return function (a, b, c, d, e, f, g, h) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h);
	  };
	};

	exports.mkFn9 = function (fn) {
	  /* jshint maxparams: 9 */
	  return function (a, b, c, d, e, f, g, h, i) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
	  };
	};

	exports.mkFn10 = function (fn) {
	  /* jshint maxparams: 10 */
	  return function (a, b, c, d, e, f, g, h, i, j) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
	  };
	};

	exports.runFn0 = function (fn) {
	  return fn();
	};

	exports.runFn1 = function (fn) {
	  return function (a) {
	    return fn(a);
	  };
	};

	exports.runFn2 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return fn(a, b);
	    };
	  };
	};

	exports.runFn3 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return fn(a, b, c);
	      };
	    };
	  };
	};

	exports.runFn4 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return fn(a, b, c, d);
	        };
	      };
	    };
	  };
	};

	exports.runFn5 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return fn(a, b, c, d, e);
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn6 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return fn(a, b, c, d, e, f);
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn7 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return fn(a, b, c, d, e, f, g);
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn8 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return fn(a, b, c, d, e, f, g, h);
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn9 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return function (i) {
	                    return fn(a, b, c, d, e, f, g, h, i);
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

	exports.runFn10 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return function (i) {
	                    return function (j) {
	                      return fn(a, b, c, d, e, f, g, h, i, j);
	                    };
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var MonadCont = function MonadCont(__superclass_Control$dotMonad$dotMonad_0, callCC) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.callCC = callCC;
	};
	var callCC = function callCC(dict) {
	    return dict.callCC;
	};
	module.exports = {
	    MonadCont: MonadCont,
	    callCC: callCC
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Category = __webpack_require__(11);
	var Control_Monad = __webpack_require__(19);
	var Control_Monad_Eff = __webpack_require__(56);
	var MonadEff = function MonadEff(__superclass_Control$dotMonad$dotMonad_0, liftEff) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.liftEff = liftEff;
	};
	var monadEffEff = new MonadEff(function () {
	    return Control_Monad_Eff.monadEff;
	}, Control_Category.id(Control_Category.categoryFn));
	var liftEff = function liftEff(dict) {
	    return dict.liftEff;
	};
	module.exports = {
	    MonadEff: MonadEff,
	    liftEff: liftEff,
	    monadEffEff: monadEffEff
	};

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_Either = __webpack_require__(58);
	var Data_Function = __webpack_require__(10);
	var Data_Unit = __webpack_require__(13);
	var MonadError = function MonadError(__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.catchError = catchError;
	    this.throwError = throwError;
	};
	var throwError = function throwError(dict) {
	    return dict.throwError;
	};
	var monadErrorMaybe = new MonadError(function () {
	    return Data_Maybe.monadMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return v1(Data_Unit.unit);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 55, column 3 - line 55, column 33: " + [v.constructor.name, v1.constructor.name]);
	    };
	}, Data_Function["const"](Data_Maybe.Nothing.value));
	var monadErrorEither = new MonadError(function () {
	    return Data_Either.monadEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Either.Left) {
	            return v1(v.value0);
	        };
	        if (v instanceof Data_Either.Right) {
	            return new Data_Either.Right(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 50, column 3 - line 50, column 30: " + [v.constructor.name, v1.constructor.name]);
	    };
	}, Data_Either.Left.create);
	var catchError = function catchError(dict) {
	    return dict.catchError;
	};
	var catchJust = function catchJust(dictMonadError) {
	    return function (p) {
	        return function (act) {
	            return function (handler) {
	                var handle = function handle(e) {
	                    var $12 = p(e);
	                    if ($12 instanceof Data_Maybe.Nothing) {
	                        return throwError(dictMonadError)(e);
	                    };
	                    if ($12 instanceof Data_Maybe.Just) {
	                        return handler($12.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 44, column 5 - line 46, column 26: " + [$12.constructor.name]);
	                };
	                return catchError(dictMonadError)(act)(handle);
	            };
	        };
	    };
	};
	module.exports = {
	    MonadError: MonadError,
	    catchError: catchError,
	    catchJust: catchJust,
	    throwError: throwError,
	    monadErrorEither: monadErrorEither,
	    monadErrorMaybe: monadErrorMaybe
	};

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Unsafe = __webpack_require__(86);
	var Control_Monad_ST = __webpack_require__(88);
	var Data_Either = __webpack_require__(58);
	var Data_Identity = __webpack_require__(90);
	var Partial_Unsafe = __webpack_require__(91);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Bind = __webpack_require__(17);
	var Control_Applicative = __webpack_require__(5);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Unit = __webpack_require__(13);
	var MonadRec = function MonadRec(__superclass_Control$dotMonad$dotMonad_0, tailRecM) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.tailRecM = tailRecM;
	};
	var tailRecM = function tailRecM(dict) {
	    return dict.tailRecM;
	};
	var tailRecM2 = function tailRecM2(dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return tailRecM(dictMonadRec)(function (o) {
	                    return f(o.a)(o.b);
	                })({
	                    a: a,
	                    b: b
	                });
	            };
	        };
	    };
	};
	var tailRecM3 = function tailRecM3(dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return tailRecM(dictMonadRec)(function (o) {
	                        return f(o.a)(o.b)(o.c);
	                    })({
	                        a: a,
	                        b: b,
	                        c: c
	                    });
	                };
	            };
	        };
	    };
	};
	var tailRecEff = function tailRecEff(f) {
	    return function (a) {
	        var f$prime = function f$prime($26) {
	            return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f($26));
	        };
	        return function __do() {
	            var v = f$prime(a)();
	            var v1 = {
	                value: v
	            };
	            (function () {
	                while (!function __do() {
	                    var v2 = v1.value;
	                    if (v2 instanceof Data_Either.Left) {
	                        var v3 = f$prime(v2.value0)();
	                        v1.value = v3;
	                        return false;
	                    };
	                    if (v2 instanceof Data_Either.Right) {
	                        return true;
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 103, column 5 - line 108, column 27: " + [v2.constructor.name]);
	                }()) {};
	                return {};
	            })();
	            return Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
	                return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.fromRight(dictPartial))(Control_Monad_ST.readSTRef(v1));
	            })();
	        };
	    };
	};
	var tailRec = function tailRec(f) {
	    return function (a) {
	        var go = function go(__copy_v) {
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Data_Either.Left) {
	                    var __tco_v = f(v.value0);
	                    v = __tco_v;
	                    continue tco;
	                };
	                if (v instanceof Data_Either.Right) {
	                    return v.value0;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 78, column 1 - line 81, column 19: " + [v.constructor.name]);
	            };
	        };
	        return go(f(a));
	    };
	};
	var monadRecIdentity = new MonadRec(function () {
	    return Data_Identity.monadIdentity;
	}, function (f) {
	    return function ($27) {
	        return Data_Identity.Identity(tailRec(function ($28) {
	            return Data_Identity.runIdentity(f($28));
	        })($27));
	    };
	});
	var monadRecEither = new MonadRec(function () {
	    return Data_Either.monadEither;
	}, function (f) {
	    return function (a0) {
	        var g = function g(v) {
	            if (v instanceof Data_Either.Left) {
	                return new Data_Either.Right(new Data_Either.Left(v.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
	                return new Data_Either.Left(f(v.value0.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
	                return new Data_Either.Right(new Data_Either.Right(v.value0.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 92, column 7 - line 92, column 34: " + [v.constructor.name]);
	        };
	        return tailRec(g)(f(a0));
	    };
	});
	var monadRecEff = new MonadRec(function () {
	    return Control_Monad_Eff.monadEff;
	}, tailRecEff);
	var forever = function forever(dictMonadRec) {
	    return function (ma) {
	        return tailRecM(dictMonadRec)(function (u) {
	            return Data_Functor.voidRight(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(new Data_Either.Left(u))(ma);
	        })(Data_Unit.unit);
	    };
	};
	module.exports = {
	    MonadRec: MonadRec,
	    forever: forever,
	    tailRec: tailRec,
	    tailRecM: tailRecM,
	    tailRecM2: tailRecM2,
	    tailRecM3: tailRecM3,
	    monadRecIdentity: monadRecIdentity,
	    monadRecEff: monadRecEff,
	    monadRecEither: monadRecEither
	};

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(87);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Semigroupoid = __webpack_require__(12);
	var unsafePerformEff = function unsafePerformEff($0) {
	    return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff($0));
	};
	module.exports = {
	    unsafePerformEff: unsafePerformEff,
	    unsafeInterleaveEff: $foreign.unsafeInterleaveEff
	};

/***/ },
/* 87 */
/***/ function(module, exports) {

	"use strict";

	// module Control.Monad.Eff.Unsafe

	exports.unsafeInterleaveEff = function (f) {
	  return f;
	};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(89);
	var Control_Monad_Eff = __webpack_require__(56);
	var pureST = function pureST(st) {
	    return Control_Monad_Eff.runPure($foreign.runST(st));
	};
	module.exports = {
	    pureST: pureST,
	    modifySTRef: $foreign.modifySTRef,
	    newSTRef: $foreign.newSTRef,
	    readSTRef: $foreign.readSTRef,
	    runST: $foreign.runST,
	    writeSTRef: $foreign.writeSTRef
	};

/***/ },
/* 89 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Control.Monad.ST

	exports.newSTRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};

	exports.readSTRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};

	exports.modifySTRef = function (ref) {
	  return function (f) {
	    return function () {
	      /* jshint boss: true */
	      return ref.value = f(ref.value);
	    };
	  };
	};

	exports.writeSTRef = function (ref) {
	  return function (a) {
	    return function () {
	      /* jshint boss: true */
	      return ref.value = a;
	    };
	  };
	};

	exports.runST = function (f) {
	  return f;
	};

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Monad = __webpack_require__(19);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Bounded = __webpack_require__(24);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Eq = __webpack_require__(28);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Field = __webpack_require__(43);
	var Data_Foldable = __webpack_require__(70);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Ring = __webpack_require__(36);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Data_Traversable = __webpack_require__(78);
	var Identity = function Identity(x) {
	    return x;
	};
	var showIdentity = function showIdentity(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringIdentity = function semiringIdentity(dictSemiring) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    }, Data_Semiring.one(dictSemiring), Data_Semiring.zero(dictSemiring));
	};
	var semigroupIdenity = function semigroupIdenity(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var runIdentity = function runIdentity(v) {
	    return v;
	};
	var ringIdentity = function ringIdentity(dictRing) {
	    return new Data_Ring.Ring(function () {
	        return semiringIdentity(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ring.sub(dictRing)(v)(v1);
	        };
	    });
	};
	var monoidIdentity = function monoidIdentity(dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupIdenity(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var heytingAlgebraIdentity = function heytingAlgebraIdentity(dictHeytingAlgebra) {
	    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return Data_HeytingAlgebra.not(dictHeytingAlgebra)(v);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var functorIdentity = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
	var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var traversableIdentity = new Data_Traversable.Traversable(function () {
	    return foldableIdentity;
	}, function () {
	    return functorIdentity;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Identity)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Identity)(f(v));
	        };
	    };
	});
	var extendIdentity = new Control_Extend.Extend(function () {
	    return functorIdentity;
	}, function (f) {
	    return function (m) {
	        return f(m);
	    };
	});
	var eqIdentity = function eqIdentity(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordIdentity = function ordIdentity(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqIdentity(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadIdentity = new Control_Comonad.Comonad(function () {
	    return extendIdentity;
	}, function (v) {
	    return v;
	});
	var commutativeRingIdentity = function commutativeRingIdentity(dictCommutativeRing) {
	    return new Data_CommutativeRing.CommutativeRing(function () {
	        return ringIdentity(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
	    });
	};
	var euclideanRingIdentity = function euclideanRingIdentity(dictEuclideanRing) {
	    return new Data_EuclideanRing.EuclideanRing(function () {
	        return commutativeRingIdentity(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
	    }, function (v) {
	        return Data_EuclideanRing.degree(dictEuclideanRing)(v);
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.div(dictEuclideanRing)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.mod(dictEuclideanRing)(v)(v1);
	        };
	    });
	};
	var fieldIdentity = function fieldIdentity(dictField) {
	    return new Data_Field.Field(function () {
	        return euclideanRingIdentity(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
	    });
	};
	var boundedIdentity = function boundedIdentity(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordIdentity(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var booleanAlgebraIdentity = function booleanAlgebraIdentity(dictBooleanAlgebra) {
	    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	        return heytingAlgebraIdentity(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	    });
	};
	var applyIdentity = new Control_Apply.Apply(function () {
	    return functorIdentity;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindIdentity = new Control_Bind.Bind(function () {
	    return applyIdentity;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeIdentity = new Control_Applicative.Applicative(function () {
	    return applyIdentity;
	}, Identity);
	var monadIdentity = new Control_Monad.Monad(function () {
	    return applicativeIdentity;
	}, function () {
	    return bindIdentity;
	});
	var altIdentity = new Control_Alt.Alt(function () {
	    return functorIdentity;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	module.exports = {
	    Identity: Identity,
	    runIdentity: runIdentity,
	    eqIdentity: eqIdentity,
	    ordIdentity: ordIdentity,
	    boundedIdentity: boundedIdentity,
	    heytingAlgebraIdentity: heytingAlgebraIdentity,
	    booleanAlgebraIdentity: booleanAlgebraIdentity,
	    semigroupIdenity: semigroupIdenity,
	    monoidIdentity: monoidIdentity,
	    semiringIdentity: semiringIdentity,
	    euclideanRingIdentity: euclideanRingIdentity,
	    ringIdentity: ringIdentity,
	    commutativeRingIdentity: commutativeRingIdentity,
	    fieldIdentity: fieldIdentity,
	    showIdentity: showIdentity,
	    functorIdentity: functorIdentity,
	    invariantIdentity: invariantIdentity,
	    altIdentity: altIdentity,
	    applyIdentity: applyIdentity,
	    applicativeIdentity: applicativeIdentity,
	    bindIdentity: bindIdentity,
	    monadIdentity: monadIdentity,
	    extendIdentity: extendIdentity,
	    comonadIdentity: comonadIdentity,
	    foldableIdentity: foldableIdentity,
	    traversableIdentity: traversableIdentity
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(92);
	var Partial = __webpack_require__(93);
	var unsafeCrashWith = function unsafeCrashWith(msg) {
	    return $foreign.unsafePartial(function (dictPartial) {
	        return Partial.crashWith(dictPartial)(msg);
	    });
	};
	module.exports = {
	    unsafeCrashWith: unsafeCrashWith,
	    unsafePartial: $foreign.unsafePartial
	};

/***/ },
/* 92 */
/***/ function(module, exports) {

	"use strict";

	// module Partial.Unsafe

	exports.unsafePartial = function (f) {
	  return f();
	};

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(94);
	var crash = function crash(dictPartial) {
	    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
	};
	module.exports = {
	    crash: crash,
	    crashWith: $foreign.crashWith
	};

/***/ },
/* 94 */
/***/ function(module, exports) {

	"use strict";

	// module Partial

	exports.crashWith = function () {
	  return function (msg) {
	    throw new Error(msg);
	  };
	};

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Functor = __webpack_require__(8);
	var MonadPlus = function MonadPlus(__superclass_Control$dotMonadZero$dotMonadZero_0) {
	    this["__superclass_Control.MonadZero.MonadZero_0"] = __superclass_Control$dotMonadZero$dotMonadZero_0;
	};
	var monadPlusArray = new MonadPlus(function () {
	    return Control_MonadZero.monadZeroArray;
	});
	module.exports = {
	    MonadPlus: MonadPlus,
	    monadPlusArray: monadPlusArray
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad_Cont_Trans = __webpack_require__(97);
	var Control_Monad_Except_Trans = __webpack_require__(105);
	var Control_Monad_Reader_Trans = __webpack_require__(108);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Ref = __webpack_require__(110);
	var Control_Monad_Eff_Unsafe = __webpack_require__(86);
	var Control_Plus = __webpack_require__(51);
	var Data_Maybe = __webpack_require__(72);
	var Data_Foldable = __webpack_require__(70);
	var Data_Traversable = __webpack_require__(78);
	var Control_Bind = __webpack_require__(17);
	var Control_Applicative = __webpack_require__(5);
	var Data_Unit = __webpack_require__(13);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Function = __webpack_require__(10);
	var Data_Either = __webpack_require__(58);
	var Parallel = function Parallel(x) {
	    return x;
	};
	var MonadPar = function MonadPar(__superclass_Control$dotMonad$dotMonad_0, par) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.par = par;
	};
	var MonadRace = function MonadRace(__superclass_Control$dotParallel$dotClass$dotMonadPar_0, race, stall) {
	    this["__superclass_Control.Parallel.Class.MonadPar_0"] = __superclass_Control$dotParallel$dotClass$dotMonadPar_0;
	    this.race = race;
	    this.stall = stall;
	};
	var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeInterleaveEff;
	var stall = function stall(dict) {
	    return dict.stall;
	};
	var runParallel = function runParallel(v) {
	    return v;
	};
	var race = function race(dict) {
	    return dict.race;
	};
	var parallel = Parallel;
	var par = function par(dict) {
	    return dict.par;
	};
	var monadParReaderT = function monadParReaderT(dictMonadPar) {
	    return new MonadPar(function () {
	        return Control_Monad_Reader_Trans.monadReaderT(dictMonadPar["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (v) {
	            return function (v1) {
	                return function (r) {
	                    return par(dictMonadPar)(f)(v(r))(v1(r));
	                };
	            };
	        };
	    });
	};
	var monadRaceReaderT = function monadRaceReaderT(dictMonadRace) {
	    return new MonadRace(function () {
	        return monadParReaderT(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return race(dictMonadRace)(v(r))(v1(r));
	            };
	        };
	    }, function (v) {
	        return stall(dictMonadRace);
	    });
	};
	var monadParExceptT = function monadParExceptT(dictMonadPar) {
	    return new MonadPar(function () {
	        return Control_Monad_Except_Trans.monadExceptT(dictMonadPar["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (v) {
	            return function (v1) {
	                return par(dictMonadPar)(Control_Apply.lift2(Data_Either.applyEither)(f))(v)(v1);
	            };
	        };
	    });
	};
	var monadRaceExceptT = function monadRaceExceptT(dictMonadRace) {
	    return new MonadRace(function () {
	        return monadParExceptT(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]());
	    }, function (v) {
	        return function (v1) {
	            return race(dictMonadRace)(v)(v1);
	        };
	    }, stall(dictMonadRace));
	};
	var monadParContT = new MonadPar(function () {
	    return Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff);
	}, function (f) {
	    return function (ca) {
	        return function (cb) {
	            return function (k) {
	                return function __do() {
	                    var v = unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))();
	                    var v1 = unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))();
	                    Control_Monad_Cont_Trans.runContT(ca)(function (a) {
	                        return function __do() {
	                            var v2 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v1))();
	                            if (v2 instanceof Data_Maybe.Nothing) {
	                                return unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v)(new Data_Maybe.Just(a)))();
	                            };
	                            if (v2 instanceof Data_Maybe.Just) {
	                                return k(f(a)(v2.value0))();
	                            };
	                            throw new Error("Failed pattern match at Control.Parallel.Class line 75, column 7 - line 77, column 28: " + [v2.constructor.name]);
	                        };
	                    })();
	                    return Control_Monad_Cont_Trans.runContT(cb)(function (b) {
	                        return function __do() {
	                            var v2 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v))();
	                            if (v2 instanceof Data_Maybe.Nothing) {
	                                return unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v1)(new Data_Maybe.Just(b)))();
	                            };
	                            if (v2 instanceof Data_Maybe.Just) {
	                                return k(f(v2.value0)(b))();
	                            };
	                            throw new Error("Failed pattern match at Control.Parallel.Class line 81, column 7 - line 83, column 28: " + [v2.constructor.name]);
	                        };
	                    })();
	                };
	            };
	        };
	    };
	});
	var monadRaceContT = new MonadRace(function () {
	    return monadParContT;
	}, function (c1) {
	    return function (c2) {
	        return function (k) {
	            return function __do() {
	                var v = unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))();
	                Control_Monad_Cont_Trans.runContT(c1)(function (a) {
	                    return function __do() {
	                        var v1 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v))();
	                        if (v1) {
	                            return Data_Unit.unit;
	                        };
	                        if (!v1) {
	                            unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v)(true))();
	                            return k(a)();
	                        };
	                        throw new Error("Failed pattern match at Control.Parallel.Class line 98, column 7 - line 102, column 14: " + [v1.constructor.name]);
	                    };
	                })();
	                return Control_Monad_Cont_Trans.runContT(c2)(function (a) {
	                    return function __do() {
	                        var v1 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v))();
	                        if (v1) {
	                            return Data_Unit.unit;
	                        };
	                        if (!v1) {
	                            unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v)(true))();
	                            return k(a)();
	                        };
	                        throw new Error("Failed pattern match at Control.Parallel.Class line 106, column 7 - line 110, column 14: " + [v1.constructor.name]);
	                    };
	                })();
	            };
	        };
	    };
	}, function (v) {
	    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	});
	var functorParallel = function functorParallel(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function ($58) {
	            return parallel(Data_Functor.map(dictFunctor)(f)(runParallel($58)));
	        };
	    });
	};
	var applyParallel = function applyParallel(dictMonadPar) {
	    return new Control_Apply.Apply(function () {
	        return functorParallel(dictMonadPar["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	    }, function (f) {
	        return function (a) {
	            return parallel(par(dictMonadPar)(Data_Function.apply)(runParallel(f))(runParallel(a)));
	        };
	    });
	};
	var applicativeParallel = function applicativeParallel(dictMonadPar) {
	    return new Control_Applicative.Applicative(function () {
	        return applyParallel(dictMonadPar);
	    }, function ($59) {
	        return parallel(Control_Applicative.pure(dictMonadPar["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())($59));
	    });
	};
	var parTraverse = function parTraverse(dictMonadPar) {
	    return function (dictTraversable) {
	        return function (f) {
	            return function ($60) {
	                return runParallel(Data_Traversable.traverse(dictTraversable)(applicativeParallel(dictMonadPar))(function ($61) {
	                    return Parallel(f($61));
	                })($60));
	            };
	        };
	    };
	};
	var parTraverse_ = function parTraverse_(dictMonadPar) {
	    return function (dictFoldable) {
	        return function (f) {
	            return function ($62) {
	                return runParallel(Data_Foldable.traverse_(applicativeParallel(dictMonadPar))(dictFoldable)(function ($63) {
	                    return Parallel(f($63));
	                })($62));
	            };
	        };
	    };
	};
	var altParallel = function altParallel(dictMonadRace) {
	    return new Control_Alt.Alt(function () {
	        return functorParallel(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]()["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	    }, function (a) {
	        return function (b) {
	            return parallel(race(dictMonadRace)(runParallel(a))(runParallel(b)));
	        };
	    });
	};
	var plusParallel = function plusParallel(dictMonadRace) {
	    return new Control_Plus.Plus(function () {
	        return altParallel(dictMonadRace);
	    }, parallel(stall(dictMonadRace)));
	};
	var alternativeParallel = function alternativeParallel(dictMonadRace) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeParallel(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]());
	    }, function () {
	        return plusParallel(dictMonadRace);
	    });
	};
	module.exports = {
	    MonadPar: MonadPar,
	    MonadRace: MonadRace,
	    par: par,
	    parTraverse: parTraverse,
	    parTraverse_: parTraverse_,
	    parallel: parallel,
	    race: race,
	    runParallel: runParallel,
	    stall: stall,
	    monadParContT: monadParContT,
	    monadParExceptT: monadParExceptT,
	    monadParReaderT: monadParReaderT,
	    monadRaceContT: monadRaceContT,
	    monadRaceExceptT: monadRaceExceptT,
	    monadRaceReaderT: monadRaceReaderT,
	    functorParallel: functorParallel,
	    applyParallel: applyParallel,
	    applicativeParallel: applicativeParallel,
	    altParallel: altParallel,
	    plusParallel: plusParallel,
	    alternativeParallel: alternativeParallel
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Data_Functor = __webpack_require__(8);
	var Data_Function = __webpack_require__(10);
	var Control_Apply = __webpack_require__(6);
	var Control_Applicative = __webpack_require__(5);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Control_Semigroupoid = __webpack_require__(12);
	var ContT = function ContT(x) {
	    return x;
	};
	var withContT = function withContT(f) {
	    return function (v) {
	        return function (k) {
	            return v(f(k));
	        };
	    };
	};
	var runContT = function runContT(v) {
	    return function (k) {
	        return v(k);
	    };
	};
	var monadTransContT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(k);
	        };
	    };
	});
	var mapContT = function mapContT(f) {
	    return function (v) {
	        return function (k) {
	            return f(v(k));
	        };
	    };
	};
	var functorContT = function functorContT(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (k) {
	                return v(function (a) {
	                    return Data_Function.apply(k)(f(a));
	                });
	            };
	        };
	    });
	};
	var applyContT = function applyContT(dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorContT(dictApply["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (k) {
	                return v(function (g) {
	                    return v1(function (a) {
	                        return k(g(a));
	                    });
	                });
	            };
	        };
	    });
	};
	var bindContT = function bindContT(dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyContT(dictBind["__superclass_Control.Apply.Apply_0"]());
	    }, function (v) {
	        return function (k) {
	            return function (k$prime) {
	                return v(function (a) {
	                    var $32 = k(a);
	                    return $32(k$prime);
	                });
	            };
	        };
	    });
	};
	var applicativeContT = function applicativeContT(dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyContT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	    }, function (a) {
	        return function (k) {
	            return k(a);
	        };
	    });
	};
	var monadContT = function monadContT(dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeContT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return bindContT(dictMonad["__superclass_Control.Bind.Bind_1"]());
	    });
	};
	var monadContContT = function monadContContT(dictMonad) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadContT(dictMonad);
	    }, function (f) {
	        return function (k) {
	            var $34 = f(function (a) {
	                return function (v) {
	                    return k(a);
	                };
	            });
	            return $34(k);
	        };
	    });
	};
	var monadEffContT = function monadEffContT(dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadContT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($38) {
	        return Control_Monad_Trans.lift(monadTransContT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($38));
	    });
	};
	var monadReaderContT = function monadReaderContT(dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadContT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransContT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return function (v) {
	            return function (k) {
	                return Control_Bind.bind(dictMonadReader["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Reader_Class.ask(dictMonadReader))(function (v1) {
	                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($39) {
	                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($39));
	                    }));
	                });
	            };
	        };
	    });
	};
	var monadStateContT = function monadStateContT(dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadContT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function ($40) {
	        return Control_Monad_Trans.lift(monadTransContT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)($40));
	    });
	};
	module.exports = {
	    ContT: ContT,
	    mapContT: mapContT,
	    runContT: runContT,
	    withContT: withContT,
	    monadContContT: monadContContT,
	    functorContT: functorContT,
	    applyContT: applyContT,
	    applicativeContT: applicativeContT,
	    bindContT: bindContT,
	    monadContT: monadContT,
	    monadTransContT: monadTransContT,
	    monadEffContT: monadEffContT,
	    monadReaderContT: monadReaderContT,
	    monadStateContT: monadStateContT
	};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Monad = __webpack_require__(19);
	var Control_Bind = __webpack_require__(17);
	var Control_Applicative = __webpack_require__(5);
	var MonadReader = function MonadReader(__superclass_Control$dotMonad$dotMonad_0, ask, local) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.ask = ask;
	    this.local = local;
	};
	var monadReaderFun = new MonadReader(function () {
	    return Control_Monad.monadFn;
	}, Control_Category.id(Control_Category.categoryFn), Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
	var local = function local(dict) {
	    return dict.local;
	};
	var ask = function ask(dict) {
	    return dict.ask;
	};
	var reader = function reader(dictMonadReader) {
	    return function (f) {
	        return Control_Bind.bindFlipped(dictMonadReader["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(function ($1) {
	            return Control_Applicative.pure(dictMonadReader["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(f($1));
	        })(ask(dictMonadReader));
	    };
	};
	module.exports = {
	    MonadReader: MonadReader,
	    ask: ask,
	    local: local,
	    reader: reader,
	    monadReaderFun: monadReaderFun
	};

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Tuple = __webpack_require__(100);
	var Data_Unit = __webpack_require__(13);
	var MonadState = function MonadState(__superclass_Control$dotMonad$dotMonad_0, state) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.state = state;
	};
	var state = function state(dict) {
	    return dict.state;
	};
	var put = function put(dictMonadState) {
	    return function (s) {
	        return state(dictMonadState)(function (v) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, s);
	        });
	    };
	};
	var modify = function modify(dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
	        });
	    };
	};
	var gets = function gets(dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(f(s), s);
	        });
	    };
	};
	var get = function get(dictMonadState) {
	    return state(dictMonadState)(function (s) {
	        return new Data_Tuple.Tuple(s, s);
	    });
	};
	module.exports = {
	    MonadState: MonadState,
	    get: get,
	    gets: gets,
	    modify: modify,
	    put: put,
	    state: state
	};

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Biapplicative = __webpack_require__(101);
	var Control_Biapply = __webpack_require__(102);
	var Control_Bind = __webpack_require__(17);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Lazy = __webpack_require__(103);
	var Control_Monad = __webpack_require__(19);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Bifoldable = __webpack_require__(60);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Bitraversable = __webpack_require__(69);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Foldable = __webpack_require__(70);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Maybe = __webpack_require__(72);
	var Data_Maybe_First = __webpack_require__(74);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Data_Ring = __webpack_require__(36);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Data_Traversable = __webpack_require__(78);
	var Data_Unit = __webpack_require__(13);
	var Tuple = function () {
	    function Tuple(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Tuple.create = function (value0) {
	        return function (value1) {
	            return new Tuple(value0, value1);
	        };
	    };
	    return Tuple;
	}();
	var uncurry = function uncurry(f) {
	    return function (v) {
	        return f(v.value0)(v.value1);
	    };
	};
	var swap = function swap(v) {
	    return new Tuple(v.value1, v.value0);
	};
	var snd = function snd(v) {
	    return v.value1;
	};
	var showTuple = function showTuple(dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var semiringTuple = function semiringTuple(dictSemiring) {
	    return function (dictSemiring1) {
	        return new Data_Semiring.Semiring(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
	    };
	};
	var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return new Tuple(v1.value0, v.value1);
	    };
	});
	var semigroupTuple = function semigroupTuple(dictSemigroup) {
	    return function (dictSemigroup1) {
	        return new Data_Semigroup.Semigroup(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var ringTuple = function ringTuple(dictRing) {
	    return function (dictRing1) {
	        return new Data_Ring.Ring(function () {
	            return semiringTuple(dictRing["__superclass_Data.Semiring.Semiring_0"]())(dictRing1["__superclass_Data.Semiring.Semiring_0"]());
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var monoidTuple = function monoidTuple(dictMonoid) {
	    return function (dictMonoid1) {
	        return new Data_Monoid.Monoid(function () {
	            return semigroupTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonoid1["__superclass_Data.Semigroup.Semigroup_0"]());
	        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
	    };
	};
	var lookup = function lookup(dictFoldable) {
	    return function (dictEq) {
	        return function (a) {
	            return function (f) {
	                return Data_Function.apply(Data_Maybe_First.runFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
	                    var $127 = Data_Eq.eq(dictEq)(a)(v.value0);
	                    if ($127) {
	                        return new Data_Maybe.Just(v.value1);
	                    };
	                    if (!$127) {
	                        return Data_Maybe.Nothing.value;
	                    };
	                    throw new Error("Failed pattern match at Data.Tuple line 189, column 58 - line 189, column 93: " + [$127.constructor.name]);
	                })(f));
	            };
	        };
	    };
	};
	var heytingAlgebraTuple = function heytingAlgebraTuple(dictHeytingAlgebra) {
	    return function (dictHeytingAlgebra1) {
	        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
	        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
	    };
	};
	var functorTuple = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v.value1));
	    };
	});
	var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
	var fst = function fst(v) {
	    return v.value0;
	};
	var lazyTuple = function lazyTuple(dictLazy) {
	    return function (dictLazy1) {
	        return new Control_Lazy.Lazy(function (f) {
	            return new Tuple(Data_Function.apply(Control_Lazy.defer(dictLazy))(function (v) {
	                return fst(f(Data_Unit.unit));
	            }), Data_Function.apply(Control_Lazy.defer(dictLazy1))(function (v) {
	                return snd(f(Data_Unit.unit));
	            }));
	        });
	    };
	};
	var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v.value1)(z);
	        };
	    };
	});
	var traversableTuple = new Data_Traversable.Traversable(function () {
	    return foldableTuple;
	}, function () {
	    return functorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
	        };
	    };
	});
	var extendTuple = new Control_Extend.Extend(function () {
	    return functorTuple;
	}, function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v));
	    };
	});
	var eqTuple = function eqTuple(dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (v) {
	            return function (v1) {
	                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq1)(v.value1)(v1.value1);
	            };
	        });
	    };
	};
	var ordTuple = function ordTuple(dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqTuple(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (v) {
	            return function (v1) {
	                var $193 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                if ($193 instanceof Data_Ordering.EQ) {
	                    return Data_Ord.compare(dictOrd1)(v.value1)(v1.value1);
	                };
	                return $193;
	            };
	        });
	    };
	};
	var curry = function curry(f) {
	    return function (a) {
	        return function (b) {
	            return f(new Tuple(a, b));
	        };
	    };
	};
	var comonadTuple = new Control_Comonad.Comonad(function () {
	    return extendTuple;
	}, snd);
	var commutativeRingTuple = function commutativeRingTuple(dictCommutativeRing) {
	    return function (dictCommutativeRing1) {
	        return new Data_CommutativeRing.CommutativeRing(function () {
	            return ringTuple(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]())(dictCommutativeRing1["__superclass_Data.Ring.Ring_0"]());
	        });
	    };
	};
	var boundedTuple = function boundedTuple(dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordTuple(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
	        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
	    };
	};
	var booleanAlgebraTuple = function booleanAlgebraTuple(dictBooleanAlgebra) {
	    return function (dictBooleanAlgebra1) {
	        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	            return heytingAlgebraTuple(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]())(dictBooleanAlgebra1["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	        });
	    };
	};
	var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Tuple(f(v.value0), g(v.value1));
	        };
	    };
	});
	var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(g(v.value1));
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return g(f(z)(v.value0))(v.value1);
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return f(v.value0)(g(v.value1)(z));
	            };
	        };
	    };
	});
	var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableTuple;
	}, function () {
	    return bifunctorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
	            };
	        };
	    };
	});
	var biapplyTuple = new Control_Biapply.Biapply(function () {
	    return bifunctorTuple;
	}, function (v) {
	    return function (v1) {
	        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
	    };
	});
	var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
	    return biapplyTuple;
	}, Tuple.create);
	var applyTuple = function applyTuple(dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorTuple;
	    }, function (v) {
	        return function (v1) {
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
	        };
	    });
	};
	var bindTuple = function bindTuple(dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyTuple(dictSemigroup);
	    }, function (v) {
	        return function (f) {
	            var $242 = f(v.value1);
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)($242.value0), $242.value1);
	        };
	    });
	};
	var applicativeTuple = function applicativeTuple(dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
	};
	var monadTuple = function monadTuple(dictMonoid) {
	    return new Control_Monad.Monad(function () {
	        return applicativeTuple(dictMonoid);
	    }, function () {
	        return bindTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    });
	};
	module.exports = {
	    Tuple: Tuple,
	    curry: curry,
	    fst: fst,
	    lookup: lookup,
	    snd: snd,
	    swap: swap,
	    uncurry: uncurry,
	    showTuple: showTuple,
	    eqTuple: eqTuple,
	    ordTuple: ordTuple,
	    boundedTuple: boundedTuple,
	    semigroupoidTuple: semigroupoidTuple,
	    semigroupTuple: semigroupTuple,
	    monoidTuple: monoidTuple,
	    semiringTuple: semiringTuple,
	    ringTuple: ringTuple,
	    commutativeRingTuple: commutativeRingTuple,
	    heytingAlgebraTuple: heytingAlgebraTuple,
	    booleanAlgebraTuple: booleanAlgebraTuple,
	    functorTuple: functorTuple,
	    invariantTuple: invariantTuple,
	    bifunctorTuple: bifunctorTuple,
	    applyTuple: applyTuple,
	    biapplyTuple: biapplyTuple,
	    applicativeTuple: applicativeTuple,
	    biapplicativeTuple: biapplicativeTuple,
	    bindTuple: bindTuple,
	    monadTuple: monadTuple,
	    extendTuple: extendTuple,
	    comonadTuple: comonadTuple,
	    lazyTuple: lazyTuple,
	    foldableTuple: foldableTuple,
	    bifoldableTuple: bifoldableTuple,
	    traversableTuple: traversableTuple,
	    bitraversableTuple: bitraversableTuple
	};

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Biapply = __webpack_require__(102);
	var Biapplicative = function Biapplicative(__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
	    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
	    this.bipure = bipure;
	};
	var bipure = function bipure(dict) {
	    return dict.bipure;
	};
	module.exports = {
	    Biapplicative: Biapplicative,
	    bipure: bipure
	};

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Function = __webpack_require__(10);
	var Data_Bifunctor = __webpack_require__(68);
	var Control_Category = __webpack_require__(11);
	var Biapply = function Biapply(__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
	    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
	    this.biapply = biapply;
	};
	var biapply = function biapply(dict) {
	    return dict.biapply;
	};
	var biapplyFirst = function biapplyFirst(dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
	        };
	    };
	};
	var biapplySecond = function biapplySecond(dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"])(Data_Function["const"]))(a))(b);
	        };
	    };
	};
	var bilift2 = function bilift2(dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
	                };
	            };
	        };
	    };
	};
	var bilift3 = function bilift3(dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return function (c) {
	                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Biapply: Biapply,
	    biapply: biapply,
	    biapplyFirst: biapplyFirst,
	    biapplySecond: biapplySecond,
	    bilift2: bilift2,
	    bilift3: bilift3
	};

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Unit = __webpack_require__(13);
	var Lazy = function Lazy(defer) {
	    this.defer = defer;
	};
	var defer = function defer(dict) {
	    return dict.defer;
	};
	var fix = function fix(dictLazy) {
	    return function (f) {
	        return defer(dictLazy)(function (v) {
	            return f(fix(dictLazy)(f));
	        });
	    };
	};
	module.exports = {
	    Lazy: Lazy,
	    defer: defer,
	    fix: fix
	};

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var MonadTrans = function MonadTrans(lift) {
	    this.lift = lift;
	};
	var lift = function lift(dict) {
	    return dict.lift;
	};
	module.exports = {
	    MonadTrans: MonadTrans,
	    lift: lift
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_RWS_Class = __webpack_require__(106);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Either = __webpack_require__(58);
	var Data_Monoid = __webpack_require__(61);
	var Data_Tuple = __webpack_require__(100);
	var Data_Functor = __webpack_require__(8);
	var Control_Apply = __webpack_require__(6);
	var Control_Applicative = __webpack_require__(5);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Function = __webpack_require__(10);
	var Control_Category = __webpack_require__(11);
	var ExceptT = function ExceptT(x) {
	    return x;
	};
	var withExceptT = function withExceptT(dictFunctor) {
	    return function (f) {
	        return function (v) {
	            var mapLeft = function mapLeft(v1) {
	                return function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return new Data_Either.Right(v2.value0);
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return new Data_Either.Left(v1(v2.value0));
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [v1.constructor.name, v2.constructor.name]);
	                };
	            };
	            return Data_Function.apply(ExceptT)(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
	        };
	    };
	};
	var runExceptT = function runExceptT(v) {
	    return v;
	};
	var monadTransExceptT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Either.Right(v));
	        });
	    };
	});
	var mapExceptT = function mapExceptT(f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorExceptT = function functorExceptT(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
	    });
	};
	var except = function except(dictApplicative) {
	    return function ($87) {
	        return ExceptT(Control_Applicative.pure(dictApplicative)($87));
	    };
	};
	var applyExceptT = function applyExceptT(dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorExceptT(dictApply["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            var f$prime = Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Control_Apply.apply(Data_Either.applyEither))(v);
	            var x$prime = Control_Apply.apply(dictApply)(f$prime)(v1);
	            return x$prime;
	        };
	    });
	};
	var bindExceptT = function bindExceptT(dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyExceptT(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]());
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
	            })(function (a) {
	                var $56 = k(a);
	                return $56;
	            }));
	        };
	    });
	};
	var applicativeExceptT = function applicativeExceptT(dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyExceptT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	    }, function ($89) {
	        return ExceptT(Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($89)));
	    });
	};
	var monadExceptT = function monadExceptT(dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeExceptT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return bindExceptT(dictMonad);
	    });
	};
	var monadContExceptT = function monadContExceptT(dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadExceptT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Data_Function.apply(ExceptT)(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var $57 = f(function (a) {
	                return Data_Function.apply(ExceptT)(c(new Data_Either.Right(a)));
	            });
	            return $57;
	        }));
	    });
	};
	var monadEffExceptT = function monadEffExceptT(dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadExceptT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($90) {
	        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($90));
	    });
	};
	var monadErrorExceptT = function monadErrorExceptT(dictMonad) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadExceptT(dictMonad);
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
	                var $60 = k(a);
	                return $60;
	            })(function ($91) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
	            }));
	        };
	    }, function ($92) {
	        return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
	    });
	};
	var monadReaderExceptT = function monadReaderExceptT(dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadExceptT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransExceptT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadRecExceptT = function monadRecExceptT(dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function ($93) {
	            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(function () {
	                    var $61 = f(a);
	                    return $61;
	                }())(function (m$prime) {
	                    return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                        if (m$prime instanceof Data_Either.Left) {
	                            return new Data_Either.Right(new Data_Either.Left(m$prime.value0));
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Data_Either.Left) {
	                            return new Data_Either.Left(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Data_Either.Right) {
	                            return new Data_Either.Right(new Data_Either.Right(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 77, column 9 - line 80, column 45: " + [m$prime.constructor.name]);
	                    }());
	                });
	            })($93));
	        };
	    });
	};
	var monadStateExceptT = function monadStateExceptT(dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadExceptT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadWriterExceptT = function monadWriterExceptT(dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadExceptT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, mapExceptT(function (m) {
	        return Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Data_Function.apply(Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]()))(Data_Functor.map(Data_Either.functorEither)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapExceptT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                if (v instanceof Data_Either.Left) {
	                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 133, column 5 - line 135, column 45: " + [v.constructor.name]);
	            }());
	        }));
	    }), function (wd) {
	        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
	    });
	};
	var monadRWSExceptT = function monadRWSExceptT(dictMonadRWS) {
	    return new Control_Monad_RWS_Class.MonadRWS(function () {
	        return monadReaderExceptT(dictMonadRWS["__superclass_Control.Monad.Reader.Class.MonadReader_0"]());
	    }, function () {
	        return monadStateExceptT(dictMonadRWS["__superclass_Control.Monad.State.Class.MonadState_2"]());
	    }, function () {
	        return monadWriterExceptT(dictMonadRWS["__superclass_Control.Monad.Writer.Class.MonadWriter_1"]());
	    });
	};
	var altExceptT = function altExceptT(dictSemigroup) {
	    return function (dictMonad) {
	        return new Control_Alt.Alt(function () {
	            return functorExceptT(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v2.value0));
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v1)(function (v3) {
	                            if (v3 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v3.value0));
	                            };
	                            if (v3 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 89, column 9 - line 91, column 49: " + [v3.constructor.name]);
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 85, column 5 - line 91, column 49: " + [v2.constructor.name]);
	                });
	            };
	        });
	    };
	};
	var plusExceptT = function plusExceptT(dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Plus.Plus(function () {
	            return altExceptT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad);
	        }, Control_Monad_Error_Class.throwError(monadErrorExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
	    };
	};
	var alternativeExceptT = function alternativeExceptT(dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeExceptT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	        }, function () {
	            return plusExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	var monadZeroExceptT = function monadZeroExceptT(dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeExceptT(dictMonoid)(dictMonad);
	        }, function () {
	            return monadExceptT(dictMonad);
	        });
	    };
	};
	var monadPlusExceptT = function monadPlusExceptT(dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	module.exports = {
	    ExceptT: ExceptT,
	    except: except,
	    mapExceptT: mapExceptT,
	    runExceptT: runExceptT,
	    withExceptT: withExceptT,
	    functorExceptT: functorExceptT,
	    applyExceptT: applyExceptT,
	    applicativeExceptT: applicativeExceptT,
	    bindExceptT: bindExceptT,
	    monadExceptT: monadExceptT,
	    monadRecExceptT: monadRecExceptT,
	    altExceptT: altExceptT,
	    plusExceptT: plusExceptT,
	    alternativeExceptT: alternativeExceptT,
	    monadPlusExceptT: monadPlusExceptT,
	    monadZeroExceptT: monadZeroExceptT,
	    monadTransExceptT: monadTransExceptT,
	    monadEffExceptT: monadEffExceptT,
	    monadContExceptT: monadContExceptT,
	    monadErrorExceptT: monadErrorExceptT,
	    monadReaderExceptT: monadReaderExceptT,
	    monadStateExceptT: monadStateExceptT,
	    monadWriterExceptT: monadWriterExceptT,
	    monadRWSExceptT: monadRWSExceptT
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var MonadRWS = function MonadRWS(__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_0, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_2, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_1) {
	    this["__superclass_Control.Monad.Reader.Class.MonadReader_0"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_0;
	    this["__superclass_Control.Monad.State.Class.MonadState_2"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_2;
	    this["__superclass_Control.Monad.Writer.Class.MonadWriter_1"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_1;
	};
	module.exports = {
	    MonadRWS: MonadRWS
	};

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Tuple = __webpack_require__(100);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Unit = __webpack_require__(13);
	var Control_Bind = __webpack_require__(17);
	var Data_Function = __webpack_require__(10);
	var Control_Applicative = __webpack_require__(5);
	var MonadWriter = function MonadWriter(__superclass_Control$dotMonad$dotMonad_0, listen, pass, writer) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.listen = listen;
	    this.pass = pass;
	    this.writer = writer;
	};
	var writer = function writer(dict) {
	    return dict.writer;
	};
	var tell = function tell(dictMonadWriter) {
	    return function ($9) {
	        return writer(dictMonadWriter)(Data_Tuple.Tuple.create(Data_Unit.unit)($9));
	    };
	};
	var pass = function pass(dict) {
	    return dict.pass;
	};
	var listen = function listen(dict) {
	    return dict.listen;
	};
	var listens = function listens(dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(listen(dictMonadWriter)(m))(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v.value0, f(v.value1)));
	            });
	        };
	    };
	};
	var censor = function censor(dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v, f));
	            }));
	        };
	    };
	};
	module.exports = {
	    MonadWriter: MonadWriter,
	    censor: censor,
	    listen: listen,
	    listens: listens,
	    pass: pass,
	    tell: tell,
	    writer: writer
	};

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Distributive = __webpack_require__(109);
	var Data_Either = __webpack_require__(58);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Apply = __webpack_require__(6);
	var Control_Applicative = __webpack_require__(5);
	var Data_Function = __webpack_require__(10);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var ReaderT = function ReaderT(x) {
	    return x;
	};
	var withReaderT = function withReaderT(f) {
	    return function (v) {
	        return function ($48) {
	            return v(f($48));
	        };
	    };
	};
	var runReaderT = function runReaderT(v) {
	    return v;
	};
	var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function ($49) {
	        return ReaderT(Data_Function["const"]($49));
	    };
	});
	var mapReaderT = function mapReaderT(f) {
	    return function (v) {
	        return function ($50) {
	            return f(v($50));
	        };
	    };
	};
	var functorReaderT = function functorReaderT(dictFunctor) {
	    return new Data_Functor.Functor(function ($51) {
	        return mapReaderT(Data_Functor.map(dictFunctor)($51));
	    });
	};
	var distributiveReaderT = function distributiveReaderT(dictDistributive) {
	    return new Data_Distributive.Distributive(function () {
	        return functorReaderT(dictDistributive["__superclass_Data.Functor.Functor_0"]());
	    }, function (dictFunctor) {
	        return function (f) {
	            return function ($52) {
	                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($52));
	            };
	        };
	    }, function (dictFunctor) {
	        return function (a) {
	            return function (e) {
	                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
	                    return r(e);
	                })(a);
	            };
	        };
	    });
	};
	var applyReaderT = function applyReaderT(dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorReaderT(dictApply["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return Control_Apply.apply(dictApply)(v(r))(v1(r));
	            };
	        };
	    });
	};
	var bindReaderT = function bindReaderT(dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyReaderT(dictBind["__superclass_Control.Apply.Apply_0"]());
	    }, function (v) {
	        return function (k) {
	            return function (r) {
	                return Control_Bind.bind(dictBind)(v(r))(function (a) {
	                    var $40 = k(a);
	                    return $40(r);
	                });
	            };
	        };
	    });
	};
	var applicativeReaderT = function applicativeReaderT(dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyReaderT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	    }, function ($53) {
	        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($53)));
	    });
	};
	var monadReaderT = function monadReaderT(dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeReaderT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return bindReaderT(dictMonad["__superclass_Control.Bind.Bind_1"]());
	    });
	};
	var monadContReaderT = function monadContReaderT(dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadReaderT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (r) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $41 = f(function ($54) {
	                    return ReaderT(Data_Function["const"](c($54)));
	                });
	                return $41(r);
	            });
	        };
	    });
	};
	var monadEffReader = function monadEffReader(dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadReaderT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($55) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($55));
	    });
	};
	var monadErrorReaderT = function monadErrorReaderT(dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadReaderT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return function (r) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
	                    var $44 = h(e);
	                    return $44(r);
	                });
	            };
	        };
	    }, function ($56) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)($56));
	    });
	};
	var monadReaderReaderT = function monadReaderReaderT(dictMonad) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadReaderT(dictMonad);
	    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()), withReaderT);
	};
	var monadRecReaderT = function monadRecReaderT(dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadReaderT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (k) {
	        return function (a) {
	            var k$prime = function k$prime(r) {
	                return function (a1) {
	                    var $45 = k(a1);
	                    return Control_Bind.bindFlipped(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(function ($57) {
	                        return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.either(Data_Either.Left.create)(Data_Either.Right.create)($57));
	                    })($45(r));
	                };
	            };
	            return function (r) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
	            };
	        };
	    });
	};
	var monadStateReaderT = function monadStateReaderT(dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadReaderT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function ($58) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)($58));
	    });
	};
	var monadWriterReaderT = function monadWriterReaderT(dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadReaderT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)), function ($59) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)($59));
	    });
	};
	var altReaderT = function altReaderT(dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorReaderT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
	            };
	        };
	    });
	};
	var plusReaderT = function plusReaderT(dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altReaderT(dictPlus["__superclass_Control.Alt.Alt_0"]());
	    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
	};
	var alternativeReaderT = function alternativeReaderT(dictAlternative) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeReaderT(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return plusReaderT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	    });
	};
	var monadZeroReaderT = function monadZeroReaderT(dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeReaderT(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	    }, function () {
	        return monadReaderT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	    });
	};
	var monadPlusReaderT = function monadPlusReaderT(dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroReaderT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	    });
	};
	module.exports = {
	    ReaderT: ReaderT,
	    mapReaderT: mapReaderT,
	    runReaderT: runReaderT,
	    withReaderT: withReaderT,
	    functorReaderT: functorReaderT,
	    applyReaderT: applyReaderT,
	    applicativeReaderT: applicativeReaderT,
	    altReaderT: altReaderT,
	    plusReaderT: plusReaderT,
	    alternativeReaderT: alternativeReaderT,
	    bindReaderT: bindReaderT,
	    monadReaderT: monadReaderT,
	    monadZeroReaderT: monadZeroReaderT,
	    monadPlusReaderT: monadPlusReaderT,
	    monadTransReaderT: monadTransReaderT,
	    monadEffReader: monadEffReader,
	    monadContReaderT: monadContReaderT,
	    monadErrorReaderT: monadErrorReaderT,
	    monadReaderReaderT: monadReaderReaderT,
	    monadStateReaderT: monadStateReaderT,
	    monadWriterReaderT: monadWriterReaderT,
	    distributiveReaderT: distributiveReaderT,
	    monadRecReaderT: monadRecReaderT
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Identity = __webpack_require__(90);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Distributive = function Distributive(__superclass_Data$dotFunctor$dotFunctor_0, collect, distribute) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.collect = collect;
	    this.distribute = distribute;
	};
	var distributiveIdentity = new Distributive(function () {
	    return Data_Identity.functorIdentity;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($11) {
	            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
	                return Data_Identity.runIdentity(f($12));
	            })($11));
	        };
	    };
	}, function (dictFunctor) {
	    return function ($13) {
	        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Identity.runIdentity)($13));
	    };
	});
	var distribute = function distribute(dict) {
	    return dict.distribute;
	};
	var distributiveFunction = new Distributive(function () {
	    return Data_Functor.functorFn;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($14) {
	            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
	        };
	    };
	}, function (dictFunctor) {
	    return function (a) {
	        return function (e) {
	            return Data_Functor.map(dictFunctor)(function (v) {
	                return Data_Function.apply(v)(e);
	            })(a);
	        };
	    };
	});
	var cotraverse = function cotraverse(dictDistributive) {
	    return function (dictFunctor) {
	        return function (f) {
	            return function ($15) {
	                return Data_Functor.map(dictDistributive["__superclass_Data.Functor.Functor_0"]())(f)(distribute(dictDistributive)(dictFunctor)($15));
	            };
	        };
	    };
	};
	var collectDefault = function collectDefault(dictDistributive) {
	    return function (dictFunctor) {
	        return function (f) {
	            return function ($16) {
	                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
	            };
	        };
	    };
	};
	var collect = function collect(dict) {
	    return dict.collect;
	};
	var distributeDefault = function distributeDefault(dictDistributive) {
	    return function (dictFunctor) {
	        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Distributive: Distributive,
	    collect: collect,
	    collectDefault: collectDefault,
	    cotraverse: cotraverse,
	    distribute: distribute,
	    distributeDefault: distributeDefault,
	    distributiveIdentity: distributiveIdentity,
	    distributiveFunction: distributiveFunction
	};

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(111);
	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Data_Unit = __webpack_require__(13);
	var modifyRef = function modifyRef(ref) {
	    return function (f) {
	        return $foreign["modifyRef'"](ref)(function (s) {
	            return {
	                state: f(s),
	                value: Data_Unit.unit
	            };
	        });
	    };
	};
	module.exports = {
	    modifyRef: modifyRef,
	    "modifyRef'": $foreign["modifyRef'"],
	    newRef: $foreign.newRef,
	    readRef: $foreign.readRef,
	    writeRef: $foreign.writeRef
	};

/***/ },
/* 111 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Control.Monad.Eff.Ref

	exports.newRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};

	exports.readRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};

	exports["modifyRef'"] = function (ref) {
	  return function (f) {
	    return function () {
	      var t = f(ref.value);
	      ref.value = t.state;
	      return t.value;
	    };
	  };
	};

	exports.writeRef = function (ref) {
	  return function (val) {
	    return function () {
	      ref.value = val;
	      return {};
	    };
	  };
	};

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(113);
	module.exports = {
	    unsafeCoerce: $foreign.unsafeCoerce
	};

/***/ },
/* 113 */
/***/ function(module, exports) {

	"use strict";

	// module Unsafe.Coerce

	exports.unsafeCoerce = function (x) {
	  return x;
	};

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Halogen_Component = __webpack_require__(115);
	var Halogen_Driver = __webpack_require__(197);
	var Halogen_Effects = __webpack_require__(204);
	var Halogen_Query = __webpack_require__(196);
	var Halogen_HTML_Core = __webpack_require__(163);
	module.exports = {};

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Free = __webpack_require__(116);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Monad_ST = __webpack_require__(88);
	var Data_Array = __webpack_require__(122);
	var Data_Array_ST = __webpack_require__(135);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Foldable = __webpack_require__(70);
	var Data_Functor_Coproduct = __webpack_require__(132);
	var Data_Lazy = __webpack_require__(137);
	var Data_List = __webpack_require__(119);
	var Data_Map = __webpack_require__(139);
	var Data_Maybe = __webpack_require__(72);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Halogen_Component_ChildPath = __webpack_require__(140);
	var Halogen_Component_Hook = __webpack_require__(146);
	var Halogen_Component_Tree = __webpack_require__(162);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Halogen_Query = __webpack_require__(196);
	var Halogen_Query_EventSource = __webpack_require__(154);
	var Halogen_Query_HalogenF = __webpack_require__(147);
	var Halogen_Query_StateF = __webpack_require__(160);
	var Partial_Unsafe = __webpack_require__(91);
	var Unsafe_Coerce = __webpack_require__(112);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Function = __webpack_require__(10);
	var Control_Category = __webpack_require__(11);
	var Control_Coroutine_Stalling = __webpack_require__(159);
	var Data_Unit = __webpack_require__(13);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Monoid = __webpack_require__(61);
	var Control_Bind = __webpack_require__(17);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Component = function Component(x) {
	    return x;
	};
	var SlotConstructor = function () {
	    function SlotConstructor(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SlotConstructor.create = function (value0) {
	        return function (value1) {
	            return new SlotConstructor(value0, value1);
	        };
	    };
	    return SlotConstructor;
	}();
	var ChildF = function () {
	    function ChildF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ChildF.create = function (value0) {
	        return function (value1) {
	            return new ChildF(value0, value1);
	        };
	    };
	    return ChildF;
	}();
	var ParentState = function ParentState(x) {
	    return x;
	};
	var runChildF = function runChildF(v) {
	    return v.value1;
	};
	var renderComponent = function renderComponent(v) {
	    return v.render;
	};
	var queryComponent = function queryComponent(v) {
	    return v["eval"];
	};
	var parentState = function parentState(st) {
	    return {
	        parent: st,
	        children: Data_Map.empty
	    };
	};
	var mapStateFParent = Halogen_Query_StateF.mapState(function (v) {
	    return v.parent;
	})(function (f) {
	    return function (v) {
	        return {
	            parent: f(v.parent),
	            children: v.children
	        };
	    };
	});
	var mergeParentStateF = function mergeParentStateF($188) {
	    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.StateHF.create(mapStateFParent($188)));
	};
	var mapStateFChild = function mapStateFChild(dictOrd) {
	    return function (p) {
	        return Halogen_Query_StateF.mapState(function (v) {
	            return Data_Function.apply(Partial_Unsafe.unsafePartial(function (dictPartial) {
	                return Data_Maybe.fromJust(dictPartial);
	            }))(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
	                return v1.state;
	            })(Data_Map.lookup(dictOrd)(p)(v.children)));
	        })(function (f) {
	            return function (v) {
	                return {
	                    parent: v.parent,
	                    children: Data_Map.update(dictOrd)(function (child) {
	                        return new Data_Maybe.Just({
	                            component: child.component,
	                            state: f(child.state),
	                            memo: Data_Maybe.Nothing.value
	                        });
	                    })(p)(v.children)
	                };
	            };
	        });
	    };
	};
	var liftQuery = Halogen_Query.liftH;
	var liftChildF = function liftChildF(dictFunctor) {
	    return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(Control_Category.id(Control_Category.categoryFn))(Data_Functor_Coproduct.right)(Control_Category.id(Control_Category.categoryFn)));
	};
	var queryParent = function queryParent(dictFunctor) {
	    return function (f) {
	        return function ($189) {
	            return Control_Monad_Free.foldFree(Control_Monad_Free.freeMonadRec)(function (h) {
	                if (h instanceof Halogen_Query_HalogenF.StateHF) {
	                    return mergeParentStateF(h.value0);
	                };
	                if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.SubscribeHF(Control_Monad_Free_Trans.interpret(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine_Stalling.bifunctorStallF)(Data_Functor_Coproduct.left))(Halogen_Query_EventSource.runEventSource(Halogen_Query_EventSource.fromParentEventSource(h.value0))), h.value1));
	                };
	                if (h instanceof Halogen_Query_HalogenF.QueryHF) {
	                    return liftChildF(dictFunctor)(h.value0);
	                };
	                if (h instanceof Halogen_Query_HalogenF.RenderHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderHF(h.value0, h.value1));
	                };
	                if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderPendingHF(h.value0));
	                };
	                if (h instanceof Halogen_Query_HalogenF.HaltHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.HaltHF(h.value0));
	                };
	                throw new Error("Failed pattern match at Halogen.Component line 487, column 5 - line 494, column 39: " + [h.constructor.name]);
	            })(f($189));
	        };
	    };
	};
	var lifecycleComponent = function lifecycleComponent(spec) {
	    var renderTree = function renderTree(html) {
	        return Halogen_Component_Tree["mkTree'"]({
	            slot: Data_Unit.unit,
	            html: Data_Lazy.defer(function (v) {
	                return Unsafe_Coerce.unsafeCoerce(html);
	            }),
	            eq: function eq(v) {
	                return function (v1) {
	                    return false;
	                };
	            },
	            thunk: false
	        });
	    };
	    return {
	        render: function render(s) {
	            return {
	                state: s,
	                hooks: [],
	                tree: renderTree(spec.render(s))
	            };
	        },
	        "eval": spec["eval"],
	        initializer: spec.initializer,
	        finalizers: function finalizers(s) {
	            return Data_Maybe.maybe([])(function (i) {
	                return [Halogen_Component_Hook.finalized(spec["eval"])(s)(i)];
	            })(spec.finalizer);
	        }
	    };
	};
	var interpret = function interpret(dictFunctor) {
	    return function (nat) {
	        return function (v) {
	            var render$prime = function render$prime(st) {
	                var $102 = v.render(st);
	                return {
	                    state: $102.state,
	                    hooks: Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.rmapHook(dictFunctor)(nat))($102.hooks),
	                    tree: $102.tree
	                };
	            };
	            return {
	                render: render$prime,
	                "eval": function _eval($190) {
	                    return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.hoistHalogenF(dictFunctor)(nat))(v["eval"]($190));
	                },
	                initializer: v.initializer,
	                finalizers: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.mapFinalized(dictFunctor)(nat)))(v.finalizers)
	            };
	        };
	    };
	};
	var initializeComponent = function initializeComponent(v) {
	    return v.initializer;
	};
	var functorChildF = function functorChildF(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return new ChildF(v.value0, Data_Functor.map(dictFunctor)(f)(v.value1));
	        };
	    });
	};
	var finalizeComponent = function finalizeComponent(v) {
	    return v.finalizers;
	};
	var parentFinalizers = function parentFinalizers($$eval) {
	    return function (fin) {
	        return function (v) {
	            var parentFin = function parentFin(i) {
	                return [Halogen_Component_Hook.finalized($$eval)(parentState(v.parent))(Data_Functor_Coproduct.left(i))];
	            };
	            var childFin = function childFin(child) {
	                return finalizeComponent(child.component)(child.state);
	            };
	            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Foldable.foldMap(Data_Map.foldableMap)(Data_Monoid.monoidArray)(childFin)(v.children))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(parentFin)(fin));
	        };
	    };
	};
	var renderParent = function renderParent(dictOrd) {
	    return function (render) {
	        return function (v) {
	            var installChild = function installChild(v1) {
	                return function (v2) {
	                    var update = function update(hs) {
	                        return function (c) {
	                            return {
	                                children: Data_Map.insert(dictOrd)(v1.value0)(c)(v2.children),
	                                removed: Data_Map["delete"](dictOrd)(v1.value0)(v2.removed),
	                                hooks: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2.hooks)(hs)
	                            };
	                        };
	                    };
	                    var renderChild = function renderChild(v3) {
	                        return function (v4) {
	                            if (v4.memo instanceof Data_Maybe.Just) {
	                                return new Data_Tuple.Tuple(Data_Function.apply(Halogen_HTML_Core.Slot.create)(Halogen_Component_Tree.thunkTree(v4.memo.value0)), update([])(v4));
	                            };
	                            var r = renderComponent(v4.component)(v4.state);
	                            var adapt = function adapt(a) {
	                                return Data_Functor_Coproduct.right(new ChildF(v1.value0, a));
	                            };
	                            var hooks$prime = Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.lmapHook(adapt))(Data_Maybe.maybe(r.hooks)(Data_Function.flip(Data_Array.cons)(r.hooks))(v3));
	                            var tree = Halogen_Component_Tree.graftTree(adapt)(Data_Function["const"](v1.value0))(r.tree);
	                            return Data_Function.apply(Data_Tuple.Tuple.create(new Halogen_HTML_Core.Slot(tree)))(update(hooks$prime)({
	                                component: v4.component,
	                                state: r.state,
	                                memo: new Data_Maybe.Just(tree)
	                            }));
	                        };
	                    };
	                    var $123 = Data_Map.lookup(dictOrd)(v1.value0)(v.children);
	                    if ($123 instanceof Data_Maybe.Just) {
	                        return renderChild(Data_Maybe.Nothing.value)($123.value0);
	                    };
	                    if ($123 instanceof Data_Maybe.Nothing) {
	                        var def$prime = v1.value1(Data_Unit.unit);
	                        var hook = Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_Hook.PostRender.create)(initializeComponent(def$prime.component));
	                        return renderChild(hook)({
	                            component: def$prime.component,
	                            state: def$prime.initialState,
	                            memo: Data_Maybe.Nothing.value
	                        });
	                    };
	                    throw new Error("Failed pattern match at Halogen.Component line 442, column 5 - line 454, column 16: " + [$123.constructor.name]);
	                };
	            };
	            var install = function install(v1) {
	                return function (st) {
	                    if (v1 instanceof Halogen_HTML_Core.Text) {
	                        return new Data_Tuple.Tuple(new Halogen_HTML_Core.Text(v1.value0), st);
	                    };
	                    if (v1 instanceof Halogen_HTML_Core.Slot) {
	                        return installChild(v1.value0)(st);
	                    };
	                    if (v1 instanceof Halogen_HTML_Core.Element) {
	                        return Data_Function.apply(Control_Monad_Eff.runPure)(function __do() {
	                            var v2 = Data_Array_ST.emptySTArray();
	                            var v3 = {
	                                value: st
	                            };
	                            Control_Monad_Eff.foreachE(v1.value3)(function (el) {
	                                return function __do() {
	                                    var $137 = install(el)(v3.value);
	                                    Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(Data_Array_ST.pushSTArray(v2)($137.value0))();
	                                    return Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(Control_Monad_ST.writeSTRef(v3)($137.value1))();
	                                };
	                            })();
	                            return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(new Data_Tuple.Tuple(Data_Function.apply(Halogen_HTML_Core.Element.create(v1.value0)(v1.value1)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_HTML_Core.functorProp)(Data_Functor_Coproduct.left))(v1.value2)))(Unsafe_Coerce.unsafeCoerce(v2)), v3.value))();
	                        });
	                    };
	                    throw new Error("Failed pattern match at Halogen.Component line 404, column 1 - line 477, column 14: " + [v1.constructor.name, st.constructor.name]);
	                };
	            };
	            var init = {
	                children: Data_Map.empty,
	                removed: v.children,
	                hooks: []
	            };
	            var finalizeChild = function finalizeChild(child) {
	                return Data_Function.apply(Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.Finalized.create))(finalizeComponent(child.component)(child.state));
	            };
	            var $145 = install(render(v.parent))(init);
	            return {
	                state: {
	                    parent: v.parent,
	                    children: $145.value1.children
	                },
	                hooks: Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Foldable.foldMap(Data_Map.foldableMap)(Data_Monoid.monoidArray)(finalizeChild)($145.value1.removed))($145.value1.hooks),
	                tree: Data_Function.apply(Halogen_Component_Tree.mkTree(dictOrd["__superclass_Data.Eq.Eq_0"]()))(Data_Lazy.defer(function (v1) {
	                    return $145.value0;
	                }))
	            };
	        };
	    };
	};
	var emptyResult = function emptyResult(state) {
	    return {
	        state: state,
	        hooks: [],
	        tree: Halogen_Component_Tree.emptyTree
	    };
	};
	var transform = function transform(dictFunctor) {
	    return function (reviewS) {
	        return function (previewS) {
	            return function (reviewQ) {
	                return function (previewQ) {
	                    return function (v) {
	                        var render$prime = function render$prime(st) {
	                            var $154 = v.render(st);
	                            return {
	                                state: reviewS($154.state),
	                                hooks: Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.lmapHook(reviewQ))($154.hooks),
	                                tree: Halogen_Component_Tree.graftTree(reviewQ)(Control_Category.id(Control_Category.categoryFn))($154.tree)
	                            };
	                        };
	                        var modifyState = function modifyState(f) {
	                            return function (s$prime) {
	                                return Data_Maybe.maybe(s$prime)(function ($191) {
	                                    return reviewS(f($191));
	                                })(previewS(s$prime));
	                            };
	                        };
	                        var go = function go(v1) {
	                            if (v1 instanceof Halogen_Query_HalogenF.StateHF && v1.value0 instanceof Halogen_Query_StateF.Get) {
	                                return Control_Bind.bindFlipped(Control_Monad_Free.freeBind)(function ($192) {
	                                    return Control_Monad_Free.liftF(Data_Maybe.maybe(new Halogen_Query_HalogenF.HaltHF("state prism failed in `transform`"))(function (st$prime) {
	                                        return new Halogen_Query_HalogenF.StateHF(new Halogen_Query_StateF.Get(function ($193) {
	                                            return v1.value0.value0(Data_Function["const"](st$prime)($193));
	                                        }));
	                                    })(previewS($192)));
	                                })(Halogen_Query.get);
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.StateHF && v1.value0 instanceof Halogen_Query_StateF.Modify) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.StateHF(new Halogen_Query_StateF.Modify(modifyState(v1.value0.value0), v1.value0.value1)));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.SubscribeHF(Control_Monad_Free_Trans.interpret(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine_Stalling.bifunctorStallF)(reviewQ))(Halogen_Query_EventSource.runEventSource(v1.value0)), v1.value1));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.QueryHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.QueryHF(v1.value0));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.RenderHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderHF(v1.value0, v1.value1));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderPendingHF(v1.value0));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.HaltHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.HaltHF(v1.value0));
	                            };
	                            throw new Error("Failed pattern match at Halogen.Component line 558, column 3 - line 564, column 12: " + [v1.constructor.name]);
	                        };
	                        return {
	                            render: function render(st) {
	                                return Data_Maybe.maybe(emptyResult(st))(render$prime)(previewS(st));
	                            },
	                            "eval": function _eval($194) {
	                                return Data_Maybe.maybe(Control_Monad_Free.liftF(new Halogen_Query_HalogenF.HaltHF("query prism failed in `transform`")))(function ($195) {
	                                    return Control_Monad_Free.foldFree(Control_Monad_Free.freeMonadRec)(go)(v["eval"]($195));
	                                })(previewQ($194));
	                            },
	                            initializer: Data_Functor.map(Data_Maybe.functorMaybe)(reviewQ)(v.initializer),
	                            finalizers: function finalizers($196) {
	                                return Data_Maybe.maybe([])(v.finalizers)(previewS($196));
	                            }
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var transformChild = function transformChild(dictFunctor) {
	    return function (i) {
	        return transform(dictFunctor)(Halogen_Component_ChildPath.injState(i))(Halogen_Component_ChildPath.prjState(i))(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component_ChildPath.prjQuery(i));
	    };
	};
	var component = function component(spec) {
	    return lifecycleComponent({
	        render: spec.render,
	        "eval": spec["eval"],
	        initializer: Data_Maybe.Nothing.value,
	        finalizer: Data_Maybe.Nothing.value
	    });
	};
	var childSlots = function childSlots(dictFunctor) {
	    return function (dictOrd) {
	        return Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.get)(function (v) {
	            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(Data_Map.keys(v.children));
	        });
	    };
	};
	var bracketQuery = function bracketQuery(f) {
	    return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderPendingHF(Control_Category.id(Control_Category.categoryFn))))(function (v) {
	        return Control_Bind.bind(Control_Monad_Free.freeBind)(function () {
	            if (v instanceof Data_Maybe.Just && v.value0 instanceof Halogen_Query_HalogenF.Pending) {
	                return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderHF(Data_Maybe.Nothing.value, Data_Unit.unit));
	            };
	            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(Data_Unit.unit);
	        }())(function () {
	            return Control_Bind.bind(Control_Monad_Free.freeBind)(f)(function (v1) {
	                return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderPendingHF(Control_Category.id(Control_Category.categoryFn))))(function (v2) {
	                    return Control_Bind.bind(Control_Monad_Free.freeBind)(Data_Foldable.for_(Control_Monad_Free.freeApplicative)(Data_Foldable.foldableMaybe)(v)(function (v3) {
	                        return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderHF(new Data_Maybe.Just(Halogen_Query_HalogenF.Deferred.value), Data_Unit.unit));
	                    }))(function () {
	                        return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v1);
	                    });
	                });
	            });
	        });
	    });
	};
	var mkQueries$prime = function mkQueries$prime(dictFunctor) {
	    return function (dictOrd) {
	        return function (dictOrd1) {
	            return function (i) {
	                return function (q) {
	                    var mkChildQuery = function mkChildQuery(v) {
	                        return Data_Traversable["for"](Control_Monad_Free.freeApplicative)(Data_Traversable.traversableMaybe)(Halogen_Component_ChildPath.prjSlot(i)(v.value0))(function (p) {
	                            return Data_Functor.map(Control_Monad_Free.freeFunctor)(Data_Tuple.Tuple.create(p))(Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(mapStateFChild(dictOrd)(v.value0))(ChildF.create(v.value0))(Control_Category.id(Control_Category.categoryFn)))(queryComponent(v.value1.component)(Halogen_Component_ChildPath.injQuery(i)(q))));
	                        });
	                    };
	                    return bracketQuery(Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.get)(function (v) {
	                        return Data_Functor.map(Control_Monad_Free.freeFunctor)(function ($197) {
	                            return Data_Map.fromList(dictOrd1)(Data_List.catMaybes($197));
	                        })(Data_Traversable.traverse(Data_List.traversableList)(Control_Monad_Free.freeApplicative)(mkChildQuery)(Data_Map.toList(v.children)));
	                    }));
	                };
	            };
	        };
	    };
	};
	var mkQueries = function mkQueries(dictFunctor) {
	    return function (dictOrd) {
	        return mkQueries$prime(dictFunctor)(dictOrd)(dictOrd)(new Halogen_Component_ChildPath.ChildPath(function (dictChoice) {
	            return function (dictApplicative) {
	                return Control_Category.id(Control_Category.categoryFn);
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return Control_Category.id(Control_Category.categoryFn);
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return Control_Category.id(Control_Category.categoryFn);
	            };
	        }));
	    };
	};
	var queryAll = function queryAll(dictFunctor) {
	    return function (dictOrd) {
	        return function (q) {
	            return liftQuery(mkQueries(dictFunctor)(dictOrd)(q));
	        };
	    };
	};
	var queryAll$prime = function queryAll$prime(dictFunctor) {
	    return function (dictOrd) {
	        return function (dictOrd1) {
	            return function (i) {
	                return function (q) {
	                    return liftQuery(mkQueries$prime(dictFunctor)(dictOrd1)(dictOrd)(i)(q));
	                };
	            };
	        };
	    };
	};
	var mkQuery = function mkQuery(dictFunctor) {
	    return function (dictOrd) {
	        return function (p) {
	            return function (q) {
	                return bracketQuery(Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.get)(function (v) {
	                    return Data_Traversable["for"](Control_Monad_Free.freeApplicative)(Data_Traversable.traversableMaybe)(Data_Map.lookup(dictOrd)(p)(v.children))(function (child) {
	                        return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(mapStateFChild(dictOrd)(p))(ChildF.create(p))(Control_Category.id(Control_Category.categoryFn)))(queryComponent(child.component)(q));
	                    });
	                }));
	            };
	        };
	    };
	};
	var mkQuery$prime = function mkQuery$prime(dictFunctor) {
	    return function (dictOrd) {
	        return function (i) {
	            return function (p) {
	                return function (q) {
	                    return mkQuery(dictFunctor)(dictOrd)(Halogen_Component_ChildPath.injSlot(i)(p))(Halogen_Component_ChildPath.injQuery(i)(q));
	                };
	            };
	        };
	    };
	};
	var query$prime = function query$prime(dictFunctor) {
	    return function (dictOrd) {
	        return function (i) {
	            return function (p) {
	                return function (q) {
	                    return liftQuery(mkQuery$prime(dictFunctor)(dictOrd)(i)(p)(q));
	                };
	            };
	        };
	    };
	};
	var query = function query(dictFunctor) {
	    return function (dictOrd) {
	        return function (p) {
	            return function (q) {
	                return liftQuery(mkQuery(dictFunctor)(dictOrd)(p)(q));
	            };
	        };
	    };
	};
	var queryChild = function queryChild(dictFunctor) {
	    return function (dictOrd) {
	        return function (v) {
	            return Control_Bind.bindFlipped(Control_Monad_Free.freeBind)(Data_Maybe.maybe(Control_Monad_Free.liftF(new Halogen_Query_HalogenF.HaltHF("`queryChild` failed")))(Control_Applicative.pure(Control_Monad_Free.freeApplicative)))(Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(Control_Category.id(Control_Category.categoryFn))(Data_Functor_Coproduct.right)(Control_Category.id(Control_Category.categoryFn)))(mkQuery(dictFunctor)(dictOrd)(v.value0)(v.value1)));
	        };
	    };
	};
	var lifecycleParentComponent = function lifecycleParentComponent(dictFunctor) {
	    return function (dictOrd) {
	        return function (spec) {
	            var $$eval = Data_Functor_Coproduct.coproduct(queryParent(dictFunctor)(spec["eval"]))(function () {
	                if (spec.peek instanceof Data_Maybe.Nothing) {
	                    return queryChild(dictFunctor)(dictOrd);
	                };
	                if (spec.peek instanceof Data_Maybe.Just) {
	                    return function (q) {
	                        return Control_Apply.applyFirst(Control_Monad_Free.freeApply)(queryChild(dictFunctor)(dictOrd)(q))(queryParent(dictFunctor)(spec.peek.value0)(q));
	                    };
	                };
	                throw new Error("Failed pattern match at Halogen.Component line 205, column 10 - line 207, column 58: " + [spec.peek.constructor.name]);
	            }());
	            return {
	                render: renderParent(dictOrd)(spec.render),
	                "eval": $$eval,
	                initializer: Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor_Coproduct.left)(spec.initializer),
	                finalizers: parentFinalizers($$eval)(spec.finalizer)
	            };
	        };
	    };
	};
	var parentComponent = function parentComponent(dictFunctor) {
	    return function (dictOrd) {
	        return function (spec) {
	            return lifecycleParentComponent(dictFunctor)(dictOrd)({
	                render: spec.render,
	                "eval": spec["eval"],
	                peek: spec.peek,
	                initializer: Data_Maybe.Nothing.value,
	                finalizer: Data_Maybe.Nothing.value
	            });
	        };
	    };
	};
	module.exports = {
	    ChildF: ChildF,
	    SlotConstructor: SlotConstructor,
	    childSlots: childSlots,
	    component: component,
	    finalizeComponent: finalizeComponent,
	    initializeComponent: initializeComponent,
	    interpret: interpret,
	    lifecycleComponent: lifecycleComponent,
	    lifecycleParentComponent: lifecycleParentComponent,
	    liftQuery: liftQuery,
	    mkQueries: mkQueries,
	    "mkQueries'": mkQueries$prime,
	    mkQuery: mkQuery,
	    "mkQuery'": mkQuery$prime,
	    parentComponent: parentComponent,
	    parentState: parentState,
	    query: query,
	    "query'": query$prime,
	    queryAll: queryAll,
	    "queryAll'": queryAll$prime,
	    queryComponent: queryComponent,
	    renderComponent: renderComponent,
	    runChildF: runChildF,
	    transform: transform,
	    transformChild: transformChild,
	    functorChildF: functorChildF
	};

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_Trans = __webpack_require__(104);
	var Data_CatList = __webpack_require__(117);
	var Data_Either = __webpack_require__(58);
	var Data_Inject = __webpack_require__(131);
	var Data_Maybe = __webpack_require__(72);
	var Data_Tuple = __webpack_require__(100);
	var Unsafe_Coerce = __webpack_require__(112);
	var Data_Functor = __webpack_require__(8);
	var Control_Bind = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad = __webpack_require__(19);
	var Data_Semigroup = __webpack_require__(34);
	var ExpF = function ExpF(x) {
	    return x;
	};
	var Free = function () {
	    function Free(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Free.create = function (value0) {
	        return function (value1) {
	            return new Free(value0, value1);
	        };
	    };
	    return Free;
	}();
	var Return = function () {
	    function Return(value0) {
	        this.value0 = value0;
	    };
	    Return.create = function (value0) {
	        return new Return(value0);
	    };
	    return Return;
	}();
	var Bind = function () {
	    function Bind(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Bind.create = function (value0) {
	        return function (value1) {
	            return new Bind(value0, value1);
	        };
	    };
	    return Bind;
	}();
	var toView = function toView(__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        var runExpF = function runExpF(v2) {
	            return v2;
	        };
	        var concatF = function concatF(v2) {
	            return function (r) {
	                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
	            };
	        };
	        if (v.value0 instanceof Return) {
	            var $20 = Data_CatList.uncons(v.value1);
	            if ($20 instanceof Data_Maybe.Nothing) {
	                return new Return(Unsafe_Coerce.unsafeCoerce(v.value0.value0));
	            };
	            if ($20 instanceof Data_Maybe.Just) {
	                var __tco_v = Unsafe_Coerce.unsafeCoerce(concatF(runExpF($20.value0.value0)(v.value0.value0))($20.value0.value1));
	                v = __tco_v;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free line 171, column 7 - line 175, column 64: " + [$20.constructor.name]);
	        };
	        if (v.value0 instanceof Bind) {
	            return new Bind(v.value0.value0, function (a) {
	                return Unsafe_Coerce.unsafeCoerce(concatF(v.value0.value1(a))(v.value1));
	            });
	        };
	        throw new Error("Failed pattern match at Control.Monad.Free line 169, column 3 - line 177, column 56: " + [v.value0.constructor.name]);
	    };
	};
	var runFreeM = function runFreeM(dictFunctor) {
	    return function (dictMonadRec) {
	        return function (k) {
	            var go = function go(f) {
	                var $29 = toView(f);
	                if ($29 instanceof Return) {
	                    return Data_Functor.map(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())($29.value0));
	                };
	                if ($29 instanceof Bind) {
	                    return Data_Functor.map(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(k(Data_Functor.map(dictFunctor)($29.value1)($29.value0)));
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free line 147, column 10 - line 149, column 37: " + [$29.constructor.name]);
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	        };
	    };
	};
	var runFree = function runFree(dictFunctor) {
	    return function (k) {
	        var go = function go(__copy_f) {
	            var f = __copy_f;
	            tco: while (true) {
	                var $33 = toView(f);
	                if ($33 instanceof Return) {
	                    return $33.value0;
	                };
	                if ($33 instanceof Bind) {
	                    var __tco_f = k(Data_Functor.map(dictFunctor)($33.value1)($33.value0));
	                    f = __tco_f;
	                    continue tco;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free line 132, column 10 - line 134, column 33: " + [$33.constructor.name]);
	            };
	        };
	        return go;
	    };
	};
	var resume = function resume(dictFunctor) {
	    return function (f) {
	        var $37 = toView(f);
	        if ($37 instanceof Return) {
	            return new Data_Either.Right($37.value0);
	        };
	        if ($37 instanceof Bind) {
	            return new Data_Either.Left(Data_Functor.map(dictFunctor)($37.value1)($37.value0));
	        };
	        throw new Error("Failed pattern match at Control.Monad.Free line 157, column 12 - line 159, column 29: " + [$37.constructor.name]);
	    };
	};
	var fromView = function fromView(f) {
	    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
	};
	var suspendF = function suspendF(dictApplicative) {
	    return function (f) {
	        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Control_Applicative.pure(dictApplicative)(f)), Unsafe_Coerce.unsafeCoerce));
	    };
	};
	var freeMonad = new Control_Monad.Monad(function () {
	    return freeApplicative;
	}, function () {
	    return freeBind;
	});
	var freeFunctor = new Data_Functor.Functor(function (k) {
	    return function (f) {
	        return Control_Bind.bindFlipped(freeBind)(function ($53) {
	            return Control_Applicative.pure(freeApplicative)(k($53));
	        })(f);
	    };
	});
	var freeBind = new Control_Bind.Bind(function () {
	    return freeApply;
	}, function (v) {
	    return function (k) {
	        return new Free(v.value0, Data_CatList.snoc(v.value1)(Unsafe_Coerce.unsafeCoerce(k)));
	    };
	});
	var freeApply = new Control_Apply.Apply(function () {
	    return freeFunctor;
	}, Control_Monad.ap(freeMonad));
	var freeApplicative = new Control_Applicative.Applicative(function () {
	    return freeApply;
	}, function ($54) {
	    return fromView(Return.create($54));
	});
	var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
	    return freeMonad;
	}, function (k) {
	    return function (a) {
	        return Control_Bind.bind(freeBind)(k(a))(Data_Either.either(Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k))(Control_Applicative.pure(freeApplicative)));
	    };
	});
	var liftF = function liftF(f) {
	    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function ($55) {
	        return Control_Applicative.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce($55));
	    }));
	};
	var freeMonadTrans = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return liftF;
	});
	var liftFI = function liftFI(dictInject) {
	    return function (fa) {
	        return liftF(Data_Inject.inj(dictInject)(fa));
	    };
	};
	var substFree = function substFree(k) {
	    var go = function go(f) {
	        var $45 = toView(f);
	        if ($45 instanceof Return) {
	            return Control_Applicative.pure(freeApplicative)($45.value0);
	        };
	        if ($45 instanceof Bind) {
	            return Control_Bind.bind(freeBind)(k($45.value0))(Data_Functor.map(Data_Functor.functorFn)(go)($45.value1));
	        };
	        throw new Error("Failed pattern match at Control.Monad.Free line 122, column 10 - line 124, column 33: " + [$45.constructor.name]);
	    };
	    return go;
	};
	var hoistFree = function hoistFree(k) {
	    return substFree(function ($56) {
	        return liftF(k($56));
	    });
	};
	var injF = function injF(dictInject) {
	    return hoistFree(Data_Inject.inj(dictInject));
	};
	var foldFree = function foldFree(dictMonadRec) {
	    return function (k) {
	        var go = function go(f) {
	            var $49 = toView(f);
	            if ($49 instanceof Return) {
	                return Data_Functor.map(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())($49.value0));
	            };
	            if ($49 instanceof Bind) {
	                return Data_Functor.map(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(function ($57) {
	                    return Data_Either.Left.create($49.value1($57));
	                })(k($49.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free line 112, column 10 - line 114, column 37: " + [$49.constructor.name]);
	        };
	        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	    };
	};
	module.exports = {
	    foldFree: foldFree,
	    hoistFree: hoistFree,
	    injF: injF,
	    liftF: liftF,
	    liftFI: liftFI,
	    resume: resume,
	    runFree: runFree,
	    runFreeM: runFreeM,
	    substFree: substFree,
	    suspendF: suspendF,
	    freeFunctor: freeFunctor,
	    freeBind: freeBind,
	    freeApplicative: freeApplicative,
	    freeApply: freeApply,
	    freeMonad: freeMonad,
	    freeMonadTrans: freeMonadTrans,
	    freeMonadRec: freeMonadRec
	};

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_CatQueue = __webpack_require__(118);
	var Data_Foldable_1 = __webpack_require__(70);
	var Data_List = __webpack_require__(119);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Foldable_1 = __webpack_require__(70);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_NaturalTransformation = __webpack_require__(44);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Data_Unfoldable = __webpack_require__(124);
	var CatNil = function () {
	    function CatNil() {};
	    CatNil.value = new CatNil();
	    return CatNil;
	}();
	var CatCons = function () {
	    function CatCons(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CatCons.create = function (value0) {
	        return function (value1) {
	            return new CatCons(value0, value1);
	        };
	    };
	    return CatCons;
	}();
	var showCatList = function showCatList(dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof CatNil) {
	            return "CatNil";
	        };
	        if (v instanceof CatCons) {
	            return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
	        };
	        throw new Error("Failed pattern match at Data.CatList line 154, column 3 - line 155, column 3: " + [v.constructor.name]);
	    });
	};
	var $$null = function $$null(v) {
	    if (v instanceof CatNil) {
	        return true;
	    };
	    return false;
	};
	var link = function link(v) {
	    return function (cat) {
	        if (v instanceof CatNil) {
	            return cat;
	        };
	        if (v instanceof CatCons) {
	            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
	        };
	        throw new Error("Failed pattern match at Data.CatList line 111, column 1 - line 111, column 22: " + [v.constructor.name, cat.constructor.name]);
	    };
	};
	var foldr = function foldr(k) {
	    return function (b) {
	        return function (q) {
	            var foldl = function foldl(__copy_v) {
	                return function (__copy_c) {
	                    return function (__copy_v1) {
	                        var v = __copy_v;
	                        var c = __copy_c;
	                        var v1 = __copy_v1;
	                        tco: while (true) {
	                            if (v1 instanceof Data_List.Nil) {
	                                return c;
	                            };
	                            if (v1 instanceof Data_List.Cons) {
	                                var __tco_v = v;
	                                var __tco_c = v(c)(v1.value0);
	                                var __tco_v1 = v1.value1;
	                                v = __tco_v;
	                                c = __tco_c;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            throw new Error("Failed pattern match at Data.CatList line 126, column 3 - line 126, column 22: " + [v.constructor.name, c.constructor.name, v1.constructor.name]);
	                        };
	                    };
	                };
	            };
	            var go = function go(__copy_xs) {
	                return function (__copy_ys) {
	                    var xs = __copy_xs;
	                    var ys = __copy_ys;
	                    tco: while (true) {
	                        var $33 = Data_CatQueue.uncons(xs);
	                        if ($33 instanceof Data_Maybe.Nothing) {
	                            return foldl(function (x) {
	                                return function (i) {
	                                    return i(x);
	                                };
	                            })(b)(ys);
	                        };
	                        if ($33 instanceof Data_Maybe.Just) {
	                            var __tco_ys = new Data_List.Cons(k($33.value0.value0), ys);
	                            xs = $33.value0.value1;
	                            ys = __tco_ys;
	                            continue tco;
	                        };
	                        throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: " + [$33.constructor.name]);
	                    };
	                };
	            };
	            return go(q)(Data_List.Nil.value);
	        };
	    };
	};
	var uncons = function uncons(v) {
	    if (v instanceof CatNil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof CatCons) {
	        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function () {
	            var $38 = Data_CatQueue["null"](v.value1);
	            if ($38) {
	                return CatNil.value;
	            };
	            if (!$38) {
	                return foldr(link)(CatNil.value)(v.value1);
	            };
	            throw new Error("Failed pattern match at Data.CatList line 103, column 39 - line 103, column 89: " + [$38.constructor.name]);
	        }()));
	    };
	    throw new Error("Failed pattern match at Data.CatList line 102, column 1 - line 102, column 24: " + [v.constructor.name]);
	};
	var foldMap = function foldMap(dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof CatNil) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof CatCons) {
	                var d = function () {
	                    var $43 = Data_CatQueue["null"](v.value1);
	                    if ($43) {
	                        return CatNil.value;
	                    };
	                    if (!$43) {
	                        return foldr(link)(CatNil.value)(v.value1);
	                    };
	                    throw new Error("Failed pattern match at Data.CatList line 144, column 11 - line 144, column 61: " + [$43.constructor.name]);
	                }();
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(foldMap(dictMonoid)(f)(d));
	            };
	            throw new Error("Failed pattern match at Data.CatList line 142, column 1 - line 142, column 26: " + [f.constructor.name, v.constructor.name]);
	        };
	    };
	};
	var foldableCatList = new Data_Foldable_1.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (l) {
	            return foldMap(dictMonoid)(f)(l);
	        };
	    };
	}, function (f) {
	    return function (s) {
	        return function (l) {
	            return Data_Foldable_1.foldlDefault(foldableCatList)(f)(s)(l);
	        };
	    };
	}, function (f) {
	    return function (s) {
	        return function (l) {
	            return Data_Foldable_1.foldrDefault(foldableCatList)(f)(s)(l);
	        };
	    };
	});
	var empty = CatNil.value;
	var append = function append(v) {
	    return function (v1) {
	        if (v1 instanceof CatNil) {
	            return v;
	        };
	        if (v instanceof CatNil) {
	            return v1;
	        };
	        return link(v)(v1);
	    };
	};
	var cons = function cons(a) {
	    return function (cat) {
	        return append(new CatCons(a, Data_CatQueue.empty))(cat);
	    };
	};
	var map = function map(v) {
	    return function (v1) {
	        if (v1 instanceof CatNil) {
	            return CatNil.value;
	        };
	        if (v1 instanceof CatCons) {
	            var d = function () {
	                var $50 = Data_CatQueue["null"](v1.value1);
	                if ($50) {
	                    return CatNil.value;
	                };
	                if (!$50) {
	                    return foldr(link)(CatNil.value)(v1.value1);
	                };
	                throw new Error("Failed pattern match at Data.CatList line 138, column 11 - line 138, column 61: " + [$50.constructor.name]);
	            }();
	            return cons(v(v1.value0))(map(v)(d));
	        };
	        throw new Error("Failed pattern match at Data.CatList line 136, column 1 - line 136, column 22: " + [v.constructor.name, v1.constructor.name]);
	    };
	};
	var functorCatList = new Data_Functor.Functor(map);
	var singleton = function singleton(a) {
	    return cons(a)(CatNil.value);
	};
	var traversableCatList = new Data_Traversable.Traversable(function () {
	    return foldableCatList;
	}, function () {
	    return functorCatList;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof CatNil) {
	            return Control_Applicative.pure(dictApplicative)(CatNil.value);
	        };
	        if (v instanceof CatCons) {
	            var d = function () {
	                var $54 = Data_CatQueue["null"](v.value1);
	                if ($54) {
	                    return CatNil.value;
	                };
	                if (!$54) {
	                    return foldr(link)(CatNil.value)(v.value1);
	                };
	                throw new Error("Failed pattern match at Data.CatList line 176, column 13 - line 176, column 63: " + [$54.constructor.name]);
	            }();
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
	        };
	        throw new Error("Failed pattern match at Data.CatList line 174, column 3 - line 174, column 32: " + [v.constructor.name]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof CatNil) {
	                return Control_Applicative.pure(dictApplicative)(CatNil.value);
	            };
	            if (v1 instanceof CatCons) {
	                var d = function () {
	                    var $59 = Data_CatQueue["null"](v1.value1);
	                    if ($59) {
	                        return CatNil.value;
	                    };
	                    if (!$59) {
	                        return foldr(link)(CatNil.value)(v1.value1);
	                    };
	                    throw new Error("Failed pattern match at Data.CatList line 172, column 13 - line 172, column 63: " + [$59.constructor.name]);
	                }();
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
	            };
	            throw new Error("Failed pattern match at Data.CatList line 170, column 3 - line 170, column 34: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var semigroupCatList = new Data_Semigroup.Semigroup(append);
	var monoidCatList = new Data_Monoid.Monoid(function () {
	    return semigroupCatList;
	}, CatNil.value);
	var monadCatList = new Control_Monad.Monad(function () {
	    return applicativeCatList;
	}, function () {
	    return bindCatList;
	});
	var bindCatList = new Control_Bind.Bind(function () {
	    return applyCatList;
	}, Data_Function.flip(foldMap(monoidCatList)));
	var applyCatList = new Control_Apply.Apply(function () {
	    return functorCatList;
	}, Control_Monad.ap(monadCatList));
	var applicativeCatList = new Control_Applicative.Applicative(function () {
	    return applyCatList;
	}, singleton);
	var fromFoldable = function fromFoldable(dictFoldable) {
	    return function (f) {
	        return Data_Foldable_1.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
	    };
	};
	var snoc = function snoc(cat) {
	    return function (a) {
	        return append(cat)(new CatCons(a, Data_CatQueue.empty));
	    };
	};
	var unfoldableCatList = new Data_Unfoldable.Unfoldable(function (f) {
	    return function (b) {
	        var go = function go(__copy_source) {
	            return function (__copy_memo) {
	                var source = __copy_source;
	                var memo = __copy_memo;
	                tco: while (true) {
	                    var $62 = f(source);
	                    if ($62 instanceof Data_Maybe.Nothing) {
	                        return memo;
	                    };
	                    if ($62 instanceof Data_Maybe.Just) {
	                        var __tco_memo = snoc(memo)($62.value0.value0);
	                        source = $62.value0.value1;
	                        memo = __tco_memo;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.CatList line 165, column 24 - line 167, column 57: " + [$62.constructor.name]);
	                };
	            };
	        };
	        return go(b)(CatNil.value);
	    };
	});
	var altCatList = new Control_Alt.Alt(function () {
	    return functorCatList;
	}, append);
	var plusCatList = new Control_Plus.Plus(function () {
	    return altCatList;
	}, empty);
	var alternativeCatList = new Control_Alternative.Alternative(function () {
	    return applicativeCatList;
	}, function () {
	    return plusCatList;
	});
	var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
	    return alternativeCatList;
	}, function () {
	    return monadCatList;
	});
	var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
	    return monadZeroCatList;
	});
	module.exports = {
	    CatNil: CatNil,
	    CatCons: CatCons,
	    append: append,
	    cons: cons,
	    empty: empty,
	    fromFoldable: fromFoldable,
	    "null": $$null,
	    snoc: snoc,
	    uncons: uncons,
	    semigroupCatList: semigroupCatList,
	    monoidCatList: monoidCatList,
	    showCatList: showCatList,
	    foldableCatList: foldableCatList,
	    unfoldableCatList: unfoldableCatList,
	    traversableCatList: traversableCatList,
	    functorCatList: functorCatList,
	    applyCatList: applyCatList,
	    applicativeCatList: applicativeCatList,
	    bindCatList: bindCatList,
	    monadCatList: monadCatList,
	    altCatList: altCatList,
	    plusCatList: plusCatList,
	    alternativeCatList: alternativeCatList,
	    monadZeroCatList: monadZeroCatList,
	    monadPlusCatList: monadPlusCatList
	};

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_List = __webpack_require__(119);
	var Data_Maybe = __webpack_require__(72);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Show = __webpack_require__(15);
	var Data_Tuple = __webpack_require__(100);
	var CatQueue = function () {
	    function CatQueue(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CatQueue.create = function (value0) {
	        return function (value1) {
	            return new CatQueue(value0, value1);
	        };
	    };
	    return CatQueue;
	}();
	var uncons = function uncons(__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        if (v.value0 instanceof Data_List.Nil && v.value1 instanceof Data_List.Nil) {
	            return Data_Maybe.Nothing.value;
	        };
	        if (v.value0 instanceof Data_List.Nil) {
	            var __tco_v = new CatQueue(Data_List.reverse(v.value1), Data_List.Nil.value);
	            v = __tco_v;
	            continue tco;
	        };
	        if (v.value0 instanceof Data_List.Cons) {
	            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
	        };
	        throw new Error("Failed pattern match at Data.CatQueue line 51, column 1 - line 51, column 36: " + [v.constructor.name]);
	    };
	};
	var snoc = function snoc(v) {
	    return function (a) {
	        return new CatQueue(v.value0, new Data_List.Cons(a, v.value1));
	    };
	};
	var showCatQueue = function showCatQueue(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(CatQueue " + (Data_Show.show(Data_List.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List.showList(dictShow))(v.value1) + ")")));
	    });
	};
	var $$null = function $$null(v) {
	    if (v.value0 instanceof Data_List.Nil && v.value1 instanceof Data_List.Nil) {
	        return true;
	    };
	    return false;
	};
	var empty = new CatQueue(Data_List.Nil.value, Data_List.Nil.value);
	module.exports = {
	    CatQueue: CatQueue,
	    empty: empty,
	    "null": $$null,
	    snoc: snoc,
	    uncons: uncons,
	    showCatQueue: showCatQueue
	};

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Lazy = __webpack_require__(103);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Foldable = __webpack_require__(70);
	var Data_Generic = __webpack_require__(120);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Data_Unfoldable = __webpack_require__(124);
	var Control_Apply = __webpack_require__(6);
	var Data_Unit = __webpack_require__(13);
	var Data_Show = __webpack_require__(15);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Applicative = __webpack_require__(5);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Data_Ring = __webpack_require__(36);
	var Data_Boolean = __webpack_require__(20);
	var Data_Semiring = __webpack_require__(38);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Control_Category = __webpack_require__(11);
	var Nil = function () {
	    function Nil() {};
	    Nil.value = new Nil();
	    return Nil;
	}();
	var Cons = function () {
	    function Cons(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Cons.create = function (value0) {
	        return function (value1) {
	            return new Cons(value0, value1);
	        };
	    };
	    return Cons;
	}();
	var updateAt = function updateAt(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Cons) {
	                return new Data_Maybe.Just(new Cons(v1, v2.value1));
	            };
	            if (v2 instanceof Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(updateAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var uncons = function uncons(v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Cons) {
	        return new Data_Maybe.Just({
	            head: v.value0,
	            tail: v.value1
	        });
	    };
	    throw new Error("Failed pattern match at Data.List line 251, column 1 - line 251, column 21: " + [v.constructor.name]);
	};
	var toUnfoldable = function toUnfoldable(dictUnfoldable) {
	    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
	            return new Data_Tuple.Tuple(rec.head, rec.tail);
	        })(uncons(xs));
	    });
	};
	var tail = function tail(v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Cons) {
	        return new Data_Maybe.Just(v.value1);
	    };
	    throw new Error("Failed pattern match at Data.List line 232, column 1 - line 232, column 19: " + [v.constructor.name]);
	};
	var span = function span(v) {
	    return function (v1) {
	        if (v1 instanceof Cons && v(v1.value0)) {
	            var $138 = span(v)(v1.value1);
	            return {
	                init: new Cons(v1.value0, $138.init),
	                rest: $138.rest
	            };
	        };
	        return {
	            init: Nil.value,
	            rest: v1
	        };
	    };
	};
	var singleton = function singleton(a) {
	    return new Cons(a, Nil.value);
	};
	var sortBy = function sortBy(cmp) {
	    var merge = function merge(v) {
	        return function (v1) {
	            if (v instanceof Cons && v1 instanceof Cons) {
	                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
	                    return new Cons(v1.value0, merge(v)(v1.value1));
	                };
	                if (Data_Boolean.otherwise) {
	                    return new Cons(v.value0, merge(v.value1)(v1));
	                };
	            };
	            if (v instanceof Nil) {
	                return v1;
	            };
	            if (v1 instanceof Nil) {
	                return v;
	            };
	            throw new Error("Failed pattern match at Data.List line 456, column 3 - line 458, column 40: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	    var mergePairs = function mergePairs(v) {
	        if (v instanceof Cons && v.value1 instanceof Cons) {
	            return new Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
	        };
	        return v;
	    };
	    var mergeAll = function mergeAll(__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Cons && v.value1 instanceof Nil) {
	                return v.value0;
	            };
	            var __tco_v = mergePairs(v);
	            v = __tco_v;
	            continue tco;
	        };
	    };
	    var sequences = function sequences(v) {
	        if (v instanceof Cons && v.value1 instanceof Cons) {
	            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
	                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
	            };
	            if (Data_Boolean.otherwise) {
	                return ascending(v.value1.value0)(Cons.create(v.value0))(v.value1.value1);
	            };
	        };
	        return singleton(v);
	    };
	    var descending = function descending(__copy_a) {
	        return function (__copy_as) {
	            return function (__copy_v) {
	                var a = __copy_a;
	                var as = __copy_as;
	                var v = __copy_v;
	                tco: while (true) {
	                    if (v instanceof Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                        var __tco_a = v.value0;
	                        var __tco_as = new Cons(a, as);
	                        var __tco_v = v.value1;
	                        a = __tco_a;
	                        as = __tco_as;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    return new Cons(new Cons(a, as), sequences(v));
	                };
	            };
	        };
	    };
	    var ascending = function ascending(a) {
	        return function (as) {
	            return function (v) {
	                if (v instanceof Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                    return ascending(v.value0)(function (ys) {
	                        return as(new Cons(a, ys));
	                    })(v.value1);
	                };
	                return new Cons(Data_Function.apply(as)(singleton(a)), sequences(v));
	            };
	        };
	    };
	    return function ($385) {
	        return mergeAll(sequences($385));
	    };
	};
	var sort = function sort(dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var showList = function showList(dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Nil) {
	            return "Nil";
	        };
	        if (v instanceof Cons) {
	            return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(showList(dictShow))(v.value1) + ")")));
	        };
	        throw new Error("Failed pattern match at Data.List line 696, column 3 - line 697, column 3: " + [v.constructor.name]);
	    });
	};
	var semigroupList = new Data_Semigroup.Semigroup(function (v) {
	    return function (ys) {
	        if (v instanceof Nil) {
	            return ys;
	        };
	        if (v instanceof Cons) {
	            return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
	        };
	        throw new Error("Failed pattern match at Data.List line 719, column 3 - line 719, column 21: " + [v.constructor.name, ys.constructor.name]);
	    };
	});
	var reverse = function () {
	    var go = function go(__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return acc;
	                };
	                if (v instanceof Cons) {
	                    var __tco_acc = new Cons(v.value0, acc);
	                    var __tco_v = v.value1;
	                    acc = __tco_acc;
	                    v = __tco_v;
	                    continue tco;
	                };
	                throw new Error("Failed pattern match at Data.List line 346, column 1 - line 349, column 42: " + [acc.constructor.name, v.constructor.name]);
	            };
	        };
	    };
	    return go(Nil.value);
	}();
	var snoc = function snoc(xs) {
	    return function (x) {
	        return reverse(new Cons(x, reverse(xs)));
	    };
	};
	var take = function () {
	    var go = function go(__copy_acc) {
	        return function (__copy_v) {
	            return function (__copy_v1) {
	                var acc = __copy_acc;
	                var v = __copy_v;
	                var v1 = __copy_v1;
	                tco: while (true) {
	                    if (v === 0) {
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Nil) {
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Cons) {
	                        var __tco_acc = new Cons(v1.value0, acc);
	                        var __tco_v = v - 1;
	                        var __tco_v1 = v1.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 474, column 1 - line 478, column 52: " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
	                };
	            };
	        };
	    };
	    return go(Nil.value);
	}();
	var takeWhile = function takeWhile(p) {
	    var go = function go(__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Cons && p(v.value0)) {
	                    var __tco_acc = new Cons(v.value0, acc);
	                    var __tco_v = v.value1;
	                    acc = __tco_acc;
	                    v = __tco_v;
	                    continue tco;
	                };
	                return reverse(acc);
	            };
	        };
	    };
	    return go(Nil.value);
	};
	var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
	    return function (b) {
	        var go = function go(__copy_source) {
	            return function (__copy_memo) {
	                var source = __copy_source;
	                var memo = __copy_memo;
	                tco: while (true) {
	                    var $192 = f(source);
	                    if ($192 instanceof Data_Maybe.Nothing) {
	                        return reverse(memo);
	                    };
	                    if ($192 instanceof Data_Maybe.Just) {
	                        var __tco_memo = new Cons($192.value0.value0, memo);
	                        source = $192.value0.value1;
	                        memo = __tco_memo;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 743, column 24 - line 745, column 57: " + [$192.constructor.name]);
	                };
	            };
	        };
	        return go(b)(Nil.value);
	    };
	});
	var zipWith = function zipWith(f) {
	    return function (xs) {
	        return function (ys) {
	            var go = function go(v) {
	                return function (v1) {
	                    return function (acc) {
	                        if (v instanceof Nil) {
	                            return acc;
	                        };
	                        if (v1 instanceof Nil) {
	                            return acc;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            return Data_Function.apply(go(v.value1)(v1.value1))(new Cons(f(v.value0)(v1.value0), acc));
	                        };
	                        throw new Error("Failed pattern match at Data.List line 638, column 1 - line 642, column 63: " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
	                    };
	                };
	            };
	            return Data_Function.apply(reverse)(go(xs)(ys)(Nil.value));
	        };
	    };
	};
	var zip = zipWith(Data_Tuple.Tuple.create);
	var range = function range(start) {
	    return function (end) {
	        if (start === end) {
	            return singleton(start);
	        };
	        if (Data_Boolean.otherwise) {
	            var go = function go(__copy_s) {
	                return function (__copy_e) {
	                    return function (__copy_step) {
	                        return function (__copy_rest) {
	                            var s = __copy_s;
	                            var e = __copy_e;
	                            var step = __copy_step;
	                            var rest = __copy_rest;
	                            tco: while (true) {
	                                if (s === e) {
	                                    return new Cons(s, rest);
	                                };
	                                if (Data_Boolean.otherwise) {
	                                    var __tco_s = s + step | 0;
	                                    var __tco_e = e;
	                                    var __tco_step = step;
	                                    var __tco_rest = new Cons(s, rest);
	                                    s = __tco_s;
	                                    e = __tco_e;
	                                    step = __tco_step;
	                                    rest = __tco_rest;
	                                    continue tco;
	                                };
	                                throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 68: " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
	                            };
	                        };
	                    };
	                };
	            };
	            return go(end)(start)(function () {
	                var $209 = start > end;
	                if ($209) {
	                    return 1;
	                };
	                if (!$209) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.List line 139, column 45 - line 139, column 74: " + [$209.constructor.name]);
	            }())(Nil.value);
	        };
	        throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 68: " + [start.constructor.name, end.constructor.name]);
	    };
	};
	var $$null = function $$null(v) {
	    if (v instanceof Nil) {
	        return true;
	    };
	    return false;
	};
	var monoidList = new Data_Monoid.Monoid(function () {
	    return semigroupList;
	}, Nil.value);
	var mapWithIndex = function mapWithIndex(f) {
	    return function (lst) {
	        var go = function go(v) {
	            return function (v1) {
	                return function (acc) {
	                    if (v1 instanceof Nil) {
	                        return acc;
	                    };
	                    if (v1 instanceof Cons) {
	                        return Data_Function.apply(go(v + 1 | 0)(v1.value1))(new Cons(f(v1.value0)(v), acc));
	                    };
	                    throw new Error("Failed pattern match at Data.List line 412, column 1 - line 415, column 56: " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
	                };
	            };
	        };
	        return Data_Function.apply(reverse)(go(0)(lst)(Nil.value));
	    };
	};
	var mapMaybe = function mapMaybe(f) {
	    var go = function go(__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return reverse(acc);
	                };
	                if (v instanceof Cons) {
	                    var $218 = f(v.value0);
	                    if ($218 instanceof Data_Maybe.Nothing) {
	                        var __tco_acc = acc;
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    if ($218 instanceof Data_Maybe.Just) {
	                        var __tco_acc = new Cons($218.value0, acc);
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 400, column 5 - line 402, column 35: " + [$218.constructor.name]);
	                };
	                throw new Error("Failed pattern match at Data.List line 396, column 1 - line 402, column 35: " + [acc.constructor.name, v.constructor.name]);
	            };
	        };
	    };
	    return go(Nil.value);
	};
	var some = function some(dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply(dictAlternative["__superclass_Control.Applicative.Applicative_0"]()["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]()["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function many(dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt(dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Nil.value));
	        };
	    };
	};
	var last = function last(__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        if (v instanceof Cons && v.value1 instanceof Nil) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        if (v instanceof Cons) {
	            var __tco_v = v.value1;
	            v = __tco_v;
	            continue tco;
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var insertBy = function insertBy(v) {
	    return function (x) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return new Cons(x, Nil.value);
	            };
	            if (v1 instanceof Cons) {
	                var $231 = v(x)(v1.value0);
	                if ($231 instanceof Data_Ordering.GT) {
	                    return new Cons(v1.value0, insertBy(v)(x)(v1.value1));
	                };
	                return new Cons(x, v1);
	            };
	            throw new Error("Failed pattern match at Data.List line 203, column 1 - line 203, column 30: " + [v.constructor.name, x.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var insertAt = function insertAt(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0) {
	                return new Data_Maybe.Just(new Cons(v1, v2));
	            };
	            if (v2 instanceof Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(insertAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var insert = function insert(dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var init = function init(v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    var go = function go(v1) {
	        return function (acc) {
	            if (v1 instanceof Cons && v1.value1 instanceof Nil) {
	                return acc;
	            };
	            if (v1 instanceof Cons) {
	                return Data_Function.apply(go(v1.value1))(new Cons(v1.value0, acc));
	            };
	            return acc;
	        };
	    };
	    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(reverse)(go(v)(Nil.value)));
	};
	var index = function index(__copy_v) {
	    return function (__copy_v1) {
	        var v = __copy_v;
	        var v1 = __copy_v1;
	        tco: while (true) {
	            if (v instanceof Nil) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v instanceof Cons && v1 === 0) {
	                return new Data_Maybe.Just(v.value0);
	            };
	            if (v instanceof Cons) {
	                var __tco_v = v.value1;
	                var __tco_v1 = v1 - 1;
	                v = __tco_v;
	                v1 = __tco_v1;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Data.List line 262, column 1 - line 262, column 22: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var head = function head(v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Cons) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    throw new Error("Failed pattern match at Data.List line 217, column 1 - line 217, column 19: " + [v.constructor.name]);
	};
	var transpose = function transpose(v) {
	    if (v instanceof Nil) {
	        return Nil.value;
	    };
	    if (v instanceof Cons && v.value0 instanceof Nil) {
	        return transpose(v.value1);
	    };
	    if (v instanceof Cons && v.value0 instanceof Cons) {
	        return new Cons(new Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
	    };
	    throw new Error("Failed pattern match at Data.List line 675, column 1 - line 675, column 20: " + [v.constructor.name]);
	};
	var groupBy = function groupBy(v) {
	    return function (v1) {
	        if (v1 instanceof Nil) {
	            return Nil.value;
	        };
	        if (v1 instanceof Cons) {
	            var $264 = span(v(v1.value0))(v1.value1);
	            return new Cons(new Cons(v1.value0, $264.init), groupBy(v)($264.rest));
	        };
	        throw new Error("Failed pattern match at Data.List line 548, column 1 - line 548, column 20: " + [v.constructor.name, v1.constructor.name]);
	    };
	};
	var group = function group(dictEq) {
	    return groupBy(Data_Eq.eq(dictEq));
	};
	var group$prime = function group$prime(dictOrd) {
	    return function ($386) {
	        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($386));
	    };
	};
	var genericList = function genericList(dictGeneric) {
	    return new Data_Generic.Generic(function (v) {
	        if (v instanceof Data_Generic.SProd && v.value0 === "Data.List.Nil" && v.value1.length === 0) {
	            return new Data_Maybe.Just(Nil.value);
	        };
	        if (v instanceof Data_Generic.SProd && v.value0 === "Data.List.Cons" && v.value1.length === 2) {
	            return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Cons.create))(Data_Generic.fromSpine(dictGeneric)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(genericList(dictGeneric))(v.value1[1](Data_Unit.unit)));
	        };
	        return Data_Maybe.Nothing.value;
	    }, function ($dollarq) {
	        return new Data_Generic.SigProd("Data.List.List", [{
	            sigConstructor: "Data.List.Nil",
	            sigValues: []
	        }, {
	            sigConstructor: "Data.List.Cons",
	            sigValues: [function ($dollarq1) {
	                return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy);
	            }, function ($dollarq1) {
	                return Data_Generic.toSignature(genericList(dictGeneric))(Data_Generic.anyProxy);
	            }]
	        }]);
	    }, function (v) {
	        if (v instanceof Nil) {
	            return new Data_Generic.SProd("Data.List.Nil", []);
	        };
	        if (v instanceof Cons) {
	            return new Data_Generic.SProd("Data.List.Cons", [function ($dollarq) {
	                return Data_Generic.toSpine(dictGeneric)(v.value0);
	            }, function ($dollarq) {
	                return Data_Generic.toSpine(genericList(dictGeneric))(v.value1);
	            }]);
	        };
	        throw new Error("Failed pattern match: " + [v.constructor.name]);
	    });
	};
	var functorList = new Data_Functor.Functor(function (f) {
	    return function (lst) {
	        var go = function go(v) {
	            return function (acc) {
	                if (v instanceof Nil) {
	                    return acc;
	                };
	                if (v instanceof Cons) {
	                    return Data_Function.apply(go(v.value1))(new Cons(f(v.value0), acc));
	                };
	                throw new Error("Failed pattern match at Data.List line 726, column 3 - line 729, column 48: " + [v.constructor.name, acc.constructor.name]);
	            };
	        };
	        return Data_Function.apply(reverse)(go(lst)(Nil.value));
	    };
	});
	var fromFoldable = function fromFoldable(dictFoldable) {
	    return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
	};
	var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldl(foldableList)(function (acc) {
	            return function ($387) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($387));
	            };
	        })(Data_Monoid.mempty(dictMonoid));
	    };
	}, function () {
	    var go = function go(__copy_v) {
	        return function (__copy_b) {
	            return function (__copy_v1) {
	                var v = __copy_v;
	                var b = __copy_b;
	                var v1 = __copy_v1;
	                tco: while (true) {
	                    if (v1 instanceof Nil) {
	                        return b;
	                    };
	                    if (v1 instanceof Cons) {
	                        var __tco_v = v;
	                        var __tco_b = v(b)(v1.value0);
	                        var __tco_v1 = v1.value1;
	                        v = __tco_v;
	                        b = __tco_b;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 734, column 3 - line 737, column 49: " + [v.constructor.name, b.constructor.name, v1.constructor.name]);
	                };
	            };
	        };
	    };
	    return go;
	}(), function (v) {
	    return function (b) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return b;
	            };
	            if (v1 instanceof Cons) {
	                return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 732, column 3 - line 732, column 20: " + [v.constructor.name, b.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var length = Data_Foldable.foldl(foldableList)(function (acc) {
	    return function (v) {
	        return acc + 1 | 0;
	    };
	})(0);
	var traversableList = new Data_Traversable.Traversable(function () {
	    return foldableList;
	}, function () {
	    return functorList;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Nil) {
	            return Control_Applicative.pure(dictApplicative)(Nil.value);
	        };
	        if (v instanceof Cons) {
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
	        };
	        throw new Error("Failed pattern match at Data.List line 750, column 3 - line 750, column 26: " + [v.constructor.name]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return Control_Applicative.pure(dictApplicative)(Nil.value);
	            };
	            if (v1 instanceof Cons) {
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 748, column 3 - line 748, column 28: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	});
	var zipWithA = function zipWithA(dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var unzip = Data_Foldable.foldr(foldableList)(function (v) {
	    return function (v1) {
	        return new Data_Tuple.Tuple(new Cons(v.value0, v1.value0), new Cons(v.value1, v1.value1));
	    };
	})(new Data_Tuple.Tuple(Nil.value, Nil.value));
	var foldM = function foldM(dictMonad) {
	    return function (v) {
	        return function (a) {
	            return function (v1) {
	                if (v1 instanceof Nil) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
	                };
	                if (v1 instanceof Cons) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
	                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
	                    });
	                };
	                throw new Error("Failed pattern match at Data.List line 686, column 1 - line 686, column 23: " + [v.constructor.name, a.constructor.name, v1.constructor.name]);
	            };
	        };
	    };
	};
	var findIndex = function findIndex(fn) {
	    var go = function go(__copy_v) {
	        return function (__copy_v1) {
	            var v = __copy_v;
	            var v1 = __copy_v1;
	            tco: while (true) {
	                if (v1 instanceof Cons) {
	                    if (fn(v1.value0)) {
	                        return new Data_Maybe.Just(v);
	                    };
	                    if (Data_Boolean.otherwise) {
	                        var __tco_v = v + 1 | 0;
	                        var __tco_v1 = v1.value1;
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                };
	                if (v1 instanceof Nil) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.List line 282, column 3 - line 283, column 47: " + [v.constructor.name, v1.constructor.name]);
	            };
	        };
	    };
	    return go(0);
	};
	var findLastIndex = function findLastIndex(fn) {
	    return function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	            return length(xs) - 1 - v;
	        })(findIndex(fn)(reverse(xs)));
	    };
	};
	var filterM = function filterM(dictMonad) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Nil.value);
	            };
	            if (v1 instanceof Cons) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(v1.value0))(function (v2) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                            if (v2) {
	                                return new Cons(v1.value0, v3);
	                            };
	                            if (!v2) {
	                                return v3;
	                            };
	                            throw new Error("Failed pattern match at Data.List line 389, column 3 - line 389, column 37: " + [v2.constructor.name]);
	                        }());
	                    });
	                });
	            };
	            throw new Error("Failed pattern match at Data.List line 385, column 1 - line 385, column 25: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var filter = function filter(p) {
	    var go = function go(__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return reverse(acc);
	                };
	                if (v instanceof Cons) {
	                    if (p(v.value0)) {
	                        var __tco_acc = new Cons(v.value0, acc);
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    if (Data_Boolean.otherwise) {
	                        var __tco_acc = acc;
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                };
	                throw new Error("Failed pattern match at Data.List line 369, column 1 - line 374, column 28: " + [acc.constructor.name, v.constructor.name]);
	            };
	        };
	    };
	    return go(Nil.value);
	};
	var intersectBy = function intersectBy(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v1 instanceof Nil) {
	                return Nil.value;
	            };
	            if (v2 instanceof Nil) {
	                return Nil.value;
	            };
	            return filter(function (x) {
	                return Data_Foldable.any(foldableList)(Data_BooleanAlgebra.booleanAlgebraBoolean)(v(x))(v2);
	            })(v1);
	        };
	    };
	};
	var intersect = function intersect(dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var nubBy = function nubBy(v) {
	    return function (v1) {
	        if (v1 instanceof Nil) {
	            return Nil.value;
	        };
	        if (v1 instanceof Cons) {
	            return new Cons(v1.value0, nubBy(v)(filter(function (y) {
	                return !v(v1.value0)(y);
	            })(v1.value1)));
	        };
	        throw new Error("Failed pattern match at Data.List line 567, column 1 - line 567, column 22: " + [v.constructor.name, v1.constructor.name]);
	    };
	};
	var nub = function nub(dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var eqList = function eqList(dictEq) {
	    return new Data_Eq.Eq(function (xs) {
	        return function (ys) {
	            var go = function go(v) {
	                return function (v1) {
	                    return function (v2) {
	                        if (!v2) {
	                            return false;
	                        };
	                        if (v instanceof Nil && v1 instanceof Nil) {
	                            return v2;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            return Data_Function.apply(go(v.value1)(v1.value1))(v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0));
	                        };
	                        return false;
	                    };
	                };
	            };
	            return go(xs)(ys)(true);
	        };
	    });
	};
	var ordList = function ordList(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqList(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (xs) {
	        return function (ys) {
	            var go = function go(__copy_v) {
	                return function (__copy_v1) {
	                    var v = __copy_v;
	                    var v1 = __copy_v1;
	                    tco: while (true) {
	                        if (v instanceof Nil && v1 instanceof Nil) {
	                            return Data_Ordering.EQ.value;
	                        };
	                        if (v instanceof Nil) {
	                            return Data_Ordering.LT.value;
	                        };
	                        if (v1 instanceof Nil) {
	                            return Data_Ordering.GT.value;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            var $343 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                            if ($343 instanceof Data_Ordering.EQ) {
	                                var __tco_v = v.value1;
	                                var __tco_v1 = v1.value1;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            return $343;
	                        };
	                        throw new Error("Failed pattern match at Data.List line 708, column 3 - line 716, column 23: " + [v.constructor.name, v1.constructor.name]);
	                    };
	                };
	            };
	            return go(xs)(ys);
	        };
	    });
	};
	var elemLastIndex = function elemLastIndex(dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function elemIndex(dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function dropWhile(p) {
	    var go = function go(__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Cons && p(v.value0)) {
	                var __tco_v = v.value1;
	                v = __tco_v;
	                continue tco;
	            };
	            return v;
	        };
	    };
	    return go;
	};
	var drop = function drop(__copy_v) {
	    return function (__copy_v1) {
	        var v = __copy_v;
	        var v1 = __copy_v1;
	        tco: while (true) {
	            if (v === 0) {
	                return v1;
	            };
	            if (v1 instanceof Nil) {
	                return Nil.value;
	            };
	            if (v1 instanceof Cons) {
	                var __tco_v = v - 1;
	                var __tco_v1 = v1.value1;
	                v = __tco_v;
	                v1 = __tco_v1;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Data.List line 493, column 1 - line 493, column 15: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var slice = function slice(start) {
	    return function (end) {
	        return function (xs) {
	            return take(end - start)(drop(start)(xs));
	        };
	    };
	};
	var deleteBy = function deleteBy(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nil) {
	                return Nil.value;
	            };
	            if (v2 instanceof Cons && v(v1)(v2.value0)) {
	                return v2.value1;
	            };
	            if (v2 instanceof Cons) {
	                return new Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 594, column 1 - line 594, column 23: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	};
	var unionBy = function unionBy(eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function union(dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var deleteAt = function deleteAt(v) {
	    return function (v1) {
	        if (v === 0 && v1 instanceof Cons) {
	            return new Data_Maybe.Just(v1.value1);
	        };
	        if (v1 instanceof Cons) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v1.value0))(deleteAt(v - 1)(v1.value1));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var $$delete = function $$delete(dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function difference(dictEq) {
	    return Data_Foldable.foldl(foldableList)(Data_Function.flip($$delete(dictEq)));
	};
	var concatMap = function concatMap(v) {
	    return function (v1) {
	        if (v1 instanceof Nil) {
	            return Nil.value;
	        };
	        if (v1 instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(v(v1.value0))(concatMap(v)(v1.value1));
	        };
	        throw new Error("Failed pattern match at Data.List line 362, column 1 - line 362, column 22: " + [v.constructor.name, v1.constructor.name]);
	    };
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var applyList = new Control_Apply.Apply(function () {
	    return functorList;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
	        };
	        throw new Error("Failed pattern match at Data.List line 754, column 3 - line 754, column 20: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var bindList = new Control_Bind.Bind(function () {
	    return applyList;
	}, Data_Function.flip(concatMap));
	var concat = function concat(v) {
	    return Control_Bind.bind(bindList)(v)(Control_Category.id(Control_Category.categoryFn));
	};
	var applicativeList = new Control_Applicative.Applicative(function () {
	    return applyList;
	}, function (a) {
	    return new Cons(a, Nil.value);
	});
	var monadList = new Control_Monad.Monad(function () {
	    return applicativeList;
	}, function () {
	    return bindList;
	});
	var alterAt = function alterAt(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Cons) {
	                return Data_Function.apply(Data_Maybe.Just.create)(function () {
	                    var $379 = v1(v2.value0);
	                    if ($379 instanceof Data_Maybe.Nothing) {
	                        return v2.value1;
	                    };
	                    if ($379 instanceof Data_Maybe.Just) {
	                        return new Cons($379.value0, v2.value1);
	                    };
	                    throw new Error("Failed pattern match at Data.List line 331, column 27 - line 334, column 26: " + [$379.constructor.name]);
	                }());
	            };
	            if (v2 instanceof Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(alterAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var modifyAt = function modifyAt(n) {
	    return function (f) {
	        return alterAt(n)(function ($388) {
	            return Data_Maybe.Just.create(f($388));
	        });
	    };
	};
	var altList = new Control_Alt.Alt(function () {
	    return functorList;
	}, Data_Semigroup.append(semigroupList));
	var plusList = new Control_Plus.Plus(function () {
	    return altList;
	}, Nil.value);
	var alternativeList = new Control_Alternative.Alternative(function () {
	    return applicativeList;
	}, function () {
	    return plusList;
	});
	var monadZeroList = new Control_MonadZero.MonadZero(function () {
	    return alternativeList;
	}, function () {
	    return monadList;
	});
	var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
	    return monadZeroList;
	});
	module.exports = {
	    Nil: Nil,
	    Cons: Cons,
	    alterAt: alterAt,
	    catMaybes: catMaybes,
	    concat: concat,
	    concatMap: concatMap,
	    "delete": $$delete,
	    deleteAt: deleteAt,
	    deleteBy: deleteBy,
	    difference: difference,
	    drop: drop,
	    dropWhile: dropWhile,
	    elemIndex: elemIndex,
	    elemLastIndex: elemLastIndex,
	    filter: filter,
	    filterM: filterM,
	    findIndex: findIndex,
	    findLastIndex: findLastIndex,
	    foldM: foldM,
	    fromFoldable: fromFoldable,
	    group: group,
	    "group'": group$prime,
	    groupBy: groupBy,
	    head: head,
	    index: index,
	    init: init,
	    insert: insert,
	    insertAt: insertAt,
	    insertBy: insertBy,
	    intersect: intersect,
	    intersectBy: intersectBy,
	    last: last,
	    length: length,
	    many: many,
	    mapMaybe: mapMaybe,
	    mapWithIndex: mapWithIndex,
	    modifyAt: modifyAt,
	    nub: nub,
	    nubBy: nubBy,
	    "null": $$null,
	    range: range,
	    reverse: reverse,
	    singleton: singleton,
	    slice: slice,
	    snoc: snoc,
	    some: some,
	    sort: sort,
	    sortBy: sortBy,
	    span: span,
	    tail: tail,
	    take: take,
	    takeWhile: takeWhile,
	    toUnfoldable: toUnfoldable,
	    transpose: transpose,
	    uncons: uncons,
	    union: union,
	    unionBy: unionBy,
	    unzip: unzip,
	    updateAt: updateAt,
	    zip: zip,
	    zipWith: zipWith,
	    zipWithA: zipWithA,
	    genericList: genericList,
	    showList: showList,
	    eqList: eqList,
	    ordList: ordList,
	    semigroupList: semigroupList,
	    monoidList: monoidList,
	    functorList: functorList,
	    foldableList: foldableList,
	    unfoldableList: unfoldableList,
	    traversableList: traversableList,
	    applyList: applyList,
	    applicativeList: applicativeList,
	    bindList: bindList,
	    monadList: monadList,
	    altList: altList,
	    plusList: plusList,
	    alternativeList: alternativeList,
	    monadZeroList: monadZeroList,
	    monadPlusList: monadPlusList
	};

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(121);
	var Prelude = __webpack_require__(4);
	var Data_Array = __webpack_require__(122);
	var Data_Either = __webpack_require__(58);
	var Data_Foldable = __webpack_require__(70);
	var Data_Maybe = __webpack_require__(72);
	var Data_String = __webpack_require__(126);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Type_Proxy = __webpack_require__(130);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var Data_Unit = __webpack_require__(13);
	var Control_Apply = __webpack_require__(6);
	var Control_Applicative = __webpack_require__(5);
	var Data_Ordering = __webpack_require__(33);
	var Data_Eq = __webpack_require__(28);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Ord = __webpack_require__(26);
	var Data_Function = __webpack_require__(10);
	var Data_Show = __webpack_require__(15);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ring = __webpack_require__(36);
	var Data_Boolean = __webpack_require__(20);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var SProd = function () {
	    function SProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SProd.create = function (value0) {
	        return function (value1) {
	            return new SProd(value0, value1);
	        };
	    };
	    return SProd;
	}();
	var SRecord = function () {
	    function SRecord(value0) {
	        this.value0 = value0;
	    };
	    SRecord.create = function (value0) {
	        return new SRecord(value0);
	    };
	    return SRecord;
	}();
	var SNumber = function () {
	    function SNumber(value0) {
	        this.value0 = value0;
	    };
	    SNumber.create = function (value0) {
	        return new SNumber(value0);
	    };
	    return SNumber;
	}();
	var SBoolean = function () {
	    function SBoolean(value0) {
	        this.value0 = value0;
	    };
	    SBoolean.create = function (value0) {
	        return new SBoolean(value0);
	    };
	    return SBoolean;
	}();
	var SInt = function () {
	    function SInt(value0) {
	        this.value0 = value0;
	    };
	    SInt.create = function (value0) {
	        return new SInt(value0);
	    };
	    return SInt;
	}();
	var SString = function () {
	    function SString(value0) {
	        this.value0 = value0;
	    };
	    SString.create = function (value0) {
	        return new SString(value0);
	    };
	    return SString;
	}();
	var SChar = function () {
	    function SChar(value0) {
	        this.value0 = value0;
	    };
	    SChar.create = function (value0) {
	        return new SChar(value0);
	    };
	    return SChar;
	}();
	var SArray = function () {
	    function SArray(value0) {
	        this.value0 = value0;
	    };
	    SArray.create = function (value0) {
	        return new SArray(value0);
	    };
	    return SArray;
	}();
	var SUnit = function () {
	    function SUnit() {};
	    SUnit.value = new SUnit();
	    return SUnit;
	}();
	var SigProd = function () {
	    function SigProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SigProd.create = function (value0) {
	        return function (value1) {
	            return new SigProd(value0, value1);
	        };
	    };
	    return SigProd;
	}();
	var SigRecord = function () {
	    function SigRecord(value0) {
	        this.value0 = value0;
	    };
	    SigRecord.create = function (value0) {
	        return new SigRecord(value0);
	    };
	    return SigRecord;
	}();
	var SigNumber = function () {
	    function SigNumber() {};
	    SigNumber.value = new SigNumber();
	    return SigNumber;
	}();
	var SigBoolean = function () {
	    function SigBoolean() {};
	    SigBoolean.value = new SigBoolean();
	    return SigBoolean;
	}();
	var SigInt = function () {
	    function SigInt() {};
	    SigInt.value = new SigInt();
	    return SigInt;
	}();
	var SigString = function () {
	    function SigString() {};
	    SigString.value = new SigString();
	    return SigString;
	}();
	var SigChar = function () {
	    function SigChar() {};
	    SigChar.value = new SigChar();
	    return SigChar;
	}();
	var SigArray = function () {
	    function SigArray(value0) {
	        this.value0 = value0;
	    };
	    SigArray.create = function (value0) {
	        return new SigArray(value0);
	    };
	    return SigArray;
	}();
	var SigUnit = function () {
	    function SigUnit() {};
	    SigUnit.value = new SigUnit();
	    return SigUnit;
	}();
	var Generic = function Generic(fromSpine, toSignature, toSpine) {
	    this.fromSpine = fromSpine;
	    this.toSignature = toSignature;
	    this.toSpine = toSpine;
	};
	var toSpine = function toSpine(dict) {
	    return dict.toSpine;
	};
	var toSignature = function toSignature(dict) {
	    return dict.toSignature;
	};
	var showArray = function showArray(f) {
	    return function (xs) {
	        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(f)(xs)) + " ]");
	    };
	};
	var orderingToInt = function orderingToInt(v) {
	    if (v instanceof Data_Ordering.EQ) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.LT) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return -1;
	    };
	    throw new Error("Failed pattern match at Data.Generic line 427, column 17 - line 430, column 10: " + [v.constructor.name]);
	};
	var genericUnit = new Generic(function (v) {
	    if (v instanceof SUnit) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigUnit.value;
	}, function (v) {
	    return SUnit.value;
	});
	var genericString = new Generic(function (v) {
	    if (v instanceof SString) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigString.value;
	}, SString.create);
	var genericOrdering = new Generic(function (v) {
	    if (v instanceof SProd && v.value0 === "Data.Ordering.LT" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof SProd && v.value0 === "Data.Ordering.EQ" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof SProd && v.value0 === "Data.Ordering.GT" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return new SigProd("Data.Ordering.Ordering", [{
	        sigConstructor: "Data.Ordering.LT",
	        sigValues: []
	    }, {
	        sigConstructor: "Data.Ordering.EQ",
	        sigValues: []
	    }, {
	        sigConstructor: "Data.Ordering.GT",
	        sigValues: []
	    }]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new SProd("Data.Ordering.LT", []);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new SProd("Data.Ordering.EQ", []);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new SProd("Data.Ordering.GT", []);
	    };
	    throw new Error("Failed pattern match at Data.Generic line 150, column 13 - line 153, column 38: " + [v.constructor.name]);
	});
	var genericNumber = new Generic(function (v) {
	    if (v instanceof SNumber) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigNumber.value;
	}, SNumber.create);
	var genericInt = new Generic(function (v) {
	    if (v instanceof SInt) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigInt.value;
	}, SInt.create);
	var genericChar = new Generic(function (v) {
	    if (v instanceof SChar) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigChar.value;
	}, SChar.create);
	var genericBool = new Generic(function (v) {
	    if (v instanceof SBoolean) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigBoolean.value;
	}, SBoolean.create);
	var fromSpine = function fromSpine(dict) {
	    return dict.fromSpine;
	};
	var force = function force(f) {
	    return f(Data_Unit.unit);
	};
	var genericArray = function genericArray(dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SArray) {
	            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($237) {
	                return fromSpine(dictGeneric)(force($237));
	            })(v.value0);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var lowerProxy = function lowerProxy(v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigArray(function (v) {
	            return toSignature(dictGeneric)(lowerProxy(x));
	        });
	    }, function ($238) {
	        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	            return function (v) {
	                return toSpine(dictGeneric)(x);
	            };
	        })($238));
	    });
	};
	var genericEither = function genericEither(dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && v.value0 === "Data.Either.Left" && v.value1.length === 1) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v.value1[0])));
	            };
	            if (v instanceof SProd && v.value0 === "Data.Either.Right" && v.value1.length === 1) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v.value1[0])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var rproxy = function rproxy(v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            var lproxy = function lproxy(v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            return new SigProd("Data.Either.Either", [{
	                sigConstructor: "Data.Either.Left",
	                sigValues: [function (v) {
	                    return toSignature(dictGeneric)(lproxy(x));
	                }]
	            }, {
	                sigConstructor: "Data.Either.Right",
	                sigValues: [function (v) {
	                    return toSignature(dictGeneric1)(rproxy(x));
	                }]
	            }]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new SProd("Data.Either.Left", [function (v1) {
	                    return toSpine(dictGeneric)(v.value0);
	                }]);
	            };
	            if (v instanceof Data_Either.Right) {
	                return new SProd("Data.Either.Right", [function (v1) {
	                    return toSpine(dictGeneric1)(v.value0);
	                }]);
	            };
	            throw new Error("Failed pattern match at Data.Generic line 128, column 3 - line 128, column 64: " + [v.constructor.name]);
	        });
	    };
	};
	var genericMaybe = function genericMaybe(dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && v.value0 === "Data.Maybe.Just" && v.value1.length === 1) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v.value1[0])));
	        };
	        if (v instanceof SProd && v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0) {
	            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var mbProxy = function mbProxy(v) {
	            return Type_Proxy["Proxy"].value;
	        };
	        return new SigProd("Data.Maybe.Maybe", [{
	            sigConstructor: "Data.Maybe.Just",
	            sigValues: [function (v) {
	                return toSignature(dictGeneric)(mbProxy(x));
	            }]
	        }, {
	            sigConstructor: "Data.Maybe.Nothing",
	            sigValues: []
	        }]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Just) {
	            return new SProd("Data.Maybe.Just", [function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            }]);
	        };
	        if (v instanceof Data_Maybe.Nothing) {
	            return new SProd("Data.Maybe.Nothing", []);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 108, column 3 - line 108, column 63: " + [v.constructor.name]);
	    });
	};
	var genericShowPrec = function genericShowPrec(v) {
	    return function (v1) {
	        if (v1 instanceof SProd) {
	            if (Data_Array["null"](v1.value1)) {
	                return v1.value0;
	            };
	            if (Data_Boolean.otherwise) {
	                var showParen = function showParen(v2) {
	                    return function (x) {
	                        if (!v2) {
	                            return x;
	                        };
	                        if (v2) {
	                            return "(" + (x + ")");
	                        };
	                        throw new Error("Failed pattern match at Data.Generic line 356, column 7 - line 356, column 28: " + [v2.constructor.name, x.constructor.name]);
	                    };
	                };
	                return Data_Function.apply(showParen(v > 10))(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                    return genericShowPrec(11)(force(x));
	                })(v1.value1))));
	            };
	        };
	        if (v1 instanceof SRecord) {
	            var showLabelPart = function showLabelPart(x) {
	                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
	            };
	            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
	        };
	        if (v1 instanceof SInt) {
	            return Data_Show.show(Data_Show.showInt)(v1.value0);
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Show.show(Data_Show.showNumber)(v1.value0);
	        };
	        if (v1 instanceof SString) {
	            return Data_Show.show(Data_Show.showString)(v1.value0);
	        };
	        if (v1 instanceof SChar) {
	            return Data_Show.show(Data_Show.showChar)(v1.value0);
	        };
	        if (v1 instanceof SArray) {
	            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                return genericShowPrec(0)(force(x));
	            })(v1.value0)) + "]");
	        };
	        if (v1 instanceof SUnit) {
	            return "unit";
	        };
	        throw new Error("Failed pattern match at Data.Generic line 350, column 1 - line 358, column 1: " + [v.constructor.name, v1.constructor.name]);
	    };
	};
	var gShow = function gShow(dictGeneric) {
	    return function ($239) {
	        return genericShowPrec(0)(toSpine(dictGeneric)($239));
	    };
	};
	var genericTuple = function genericTuple(dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v.value1[0]))))(fromSpine(dictGeneric1)(force(v.value1[1])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var sndProxy = function sndProxy(v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            var fstProxy = function fstProxy(v) {
	                return Type_Proxy["Proxy"].value;
	            };
	            return new SigProd("Data.Tuple.Tuple", [{
	                sigConstructor: "Data.Tuple.Tuple",
	                sigValues: [function (v) {
	                    return toSignature(dictGeneric)(fstProxy(x));
	                }, function (v) {
	                    return toSignature(dictGeneric1)(sndProxy(x));
	                }]
	            }]);
	        }, function (v) {
	            return new SProd("Data.Tuple.Tuple", [function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            }, function (v1) {
	                return toSpine(dictGeneric1)(v.value1);
	            }]);
	        });
	    };
	};
	var isValidSpine = function isValidSpine(v) {
	    return function (v1) {
	        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
	            return true;
	        };
	        if (v instanceof SigNumber && v1 instanceof SNumber) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SArray) {
	            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean)(function ($240) {
	                return isValidSpine(force(v.value0))(force($240));
	            })(v1.value0);
	        };
	        if (v instanceof SigProd && v1 instanceof SProd) {
	            var $147 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
	                return alt.sigConstructor === v1.value0;
	            })(v.value1);
	            if ($147 instanceof Data_Maybe.Nothing) {
	                return false;
	            };
	            if ($147 instanceof Data_Maybe.Just) {
	                return Data_Function.apply(Data_Foldable.and(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean))(Data_Array.zipWith(function (sig) {
	                    return function (spine) {
	                        return isValidSpine(force(sig))(force(spine));
	                    };
	                })($147.value0.sigValues)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.Generic line 327, column 3 - line 333, column 15: " + [$147.constructor.name]);
	        };
	        if (v instanceof SigRecord && v1 instanceof SRecord) {
	            return Data_Function.apply(Data_Foldable.and(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean))(Data_Array.zipWith(function (sig) {
	                return function (val) {
	                    return isValidSpine(force(sig.recValue))(force(val.recValue));
	                };
	            })(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v.value0))(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v1.value0)));
	        };
	        if (v instanceof SigUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	};
	var showSignature = function showSignature(sig) {
	    var needsParen = function needsParen(s) {
	        if (s instanceof SigProd) {
	            return true;
	        };
	        if (s instanceof SigRecord) {
	            return true;
	        };
	        if (s instanceof SigNumber) {
	            return false;
	        };
	        if (s instanceof SigBoolean) {
	            return false;
	        };
	        if (s instanceof SigInt) {
	            return false;
	        };
	        if (s instanceof SigString) {
	            return false;
	        };
	        if (s instanceof SigChar) {
	            return false;
	        };
	        if (s instanceof SigArray) {
	            return true;
	        };
	        if (s instanceof SigUnit) {
	            return false;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 293, column 18 - line 302, column 21: " + [s.constructor.name]);
	    };
	    var paren = function paren(s) {
	        if (needsParen(s)) {
	            return "(" + (showSignature(s) + ")");
	        };
	        if (Data_Boolean.otherwise) {
	            return showSignature(s);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 275, column 1 - line 302, column 21: " + [s.constructor.name]);
	    };
	    return Data_Function.apply(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString))(function () {
	        if (sig instanceof SigProd) {
	            return ["SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1)];
	        };
	        if (sig instanceof SigRecord) {
	            return ["SigRecord ", showArray(showLabel)(sig.value0)];
	        };
	        if (sig instanceof SigNumber) {
	            return ["SigNumber"];
	        };
	        if (sig instanceof SigBoolean) {
	            return ["SigBoolean"];
	        };
	        if (sig instanceof SigInt) {
	            return ["SigInt"];
	        };
	        if (sig instanceof SigString) {
	            return ["SigString"];
	        };
	        if (sig instanceof SigChar) {
	            return ["SigChar"];
	        };
	        if (sig instanceof SigArray) {
	            return ["SigArray ", paren(force(sig.value0))];
	        };
	        if (sig instanceof SigUnit) {
	            return ["SigUnit"];
	        };
	        throw new Error("Failed pattern match at Data.Generic line 276, column 3 - line 286, column 27: " + [sig.constructor.name]);
	    }());
	};
	var showLabel = function showLabel(l) {
	    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
	};
	var showDataConstructor = function showDataConstructor(dc) {
	    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($241) {
	        return showSignature(force($241));
	    })(dc.sigValues) + "}")));
	};
	var showGenericSignature = new Data_Show.Show(showSignature);
	var eqThunk = function eqThunk(dictEq) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)(force(x))(force(y));
	        };
	    };
	};
	var eqRecordSigs = function eqRecordSigs(dictEq) {
	    return function (arr1) {
	        return function (arr2) {
	            var labelCompare = function labelCompare(r1) {
	                return function (r2) {
	                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
	                };
	            };
	            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
	            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
	            var doCmp = function doCmp(x) {
	                return function (y) {
	                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
	                };
	            };
	            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
	        };
	    };
	};
	var eqGenericSpine = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            return v.value0 === v1.value0 && Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1);
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var gEq = function gEq(dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	var eqGenericSignature = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SigProd && v1 instanceof SigProd) {
	            return v.value0 === v1.value0 && Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1);
	        };
	        if (v instanceof SigRecord && v1 instanceof SigRecord) {
	            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigNumber && v1 instanceof SigNumber) {
	            return true;
	        };
	        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SigInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SigString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SigChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SigArray) {
	            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigUnit && v1 instanceof SigUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var eqDataConstructor = function eqDataConstructor(p1) {
	    return function (p2) {
	        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
	    };
	};
	var compareThunk = function compareThunk(dictOrd) {
	    return function (x) {
	        return function (y) {
	            return Data_Function.apply(orderingToInt)(Data_Ord.compare(dictOrd)(force(x))(force(y)));
	        };
	    };
	};
	var ordGenericSpine = new Data_Ord.Ord(function () {
	    return eqGenericSpine;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            var $199 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	            if ($199 instanceof Data_Ordering.EQ) {
	                return Data_Function.apply(Data_Ord.compare(Data_Ord.ordInt)(0))($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
	            };
	            return $199;
	        };
	        if (v instanceof SProd) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SProd) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            var go = function go(x) {
	                return function (y) {
	                    var $208 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
	                    if ($208 instanceof Data_Ordering.EQ) {
	                        return Data_Function.apply(orderingToInt)(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
	                    };
	                    return orderingToInt($208);
	                };
	            };
	            return Data_Function.apply(Data_Ord.compare(Data_Ord.ordInt)(0))($foreign.zipCompare(go)(v.value0)(v1.value0));
	        };
	        if (v instanceof SRecord) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SRecord) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
	        };
	        if (v instanceof SInt) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SInt) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
	        };
	        if (v instanceof SBoolean) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	        };
	        if (v instanceof SString) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SString) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
	        };
	        if (v instanceof SChar) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SChar) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Function.apply(Data_Ord.compare(Data_Ord.ordInt)(0))($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
	        };
	        if (v instanceof SArray) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SArray) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return Data_Ordering.EQ.value;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 194, column 3 - line 197, column 15: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var gCompare = function gCompare(dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	module.exports = {
	    SigProd: SigProd,
	    SigRecord: SigRecord,
	    SigNumber: SigNumber,
	    SigBoolean: SigBoolean,
	    SigInt: SigInt,
	    SigString: SigString,
	    SigChar: SigChar,
	    SigArray: SigArray,
	    SigUnit: SigUnit,
	    SProd: SProd,
	    SRecord: SRecord,
	    SNumber: SNumber,
	    SBoolean: SBoolean,
	    SInt: SInt,
	    SString: SString,
	    SChar: SChar,
	    SArray: SArray,
	    SUnit: SUnit,
	    Generic: Generic,
	    fromSpine: fromSpine,
	    gCompare: gCompare,
	    gEq: gEq,
	    gShow: gShow,
	    isValidSpine: isValidSpine,
	    showDataConstructor: showDataConstructor,
	    showSignature: showSignature,
	    toSignature: toSignature,
	    toSpine: toSpine,
	    genericNumber: genericNumber,
	    genericInt: genericInt,
	    genericString: genericString,
	    genericChar: genericChar,
	    genericBool: genericBool,
	    genericArray: genericArray,
	    genericUnit: genericUnit,
	    genericTuple: genericTuple,
	    genericMaybe: genericMaybe,
	    genericEither: genericEither,
	    genericOrdering: genericOrdering,
	    eqGenericSpine: eqGenericSpine,
	    ordGenericSpine: ordGenericSpine,
	    eqGenericSignature: eqGenericSignature,
	    showGenericSignature: showGenericSignature
	};

/***/ },
/* 121 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Generic

	exports.zipAll = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      for (var i = 0; i < l; i++) {
	        if (!f(xs[i])(ys[i])) {
	          return false;
	        }
	      }
	      return true;
	    };
	  };
	};

	exports.zipCompare = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var o = f(xs[i])(ys[i]);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(123);
	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Lazy = __webpack_require__(103);
	var Data_Foldable = __webpack_require__(70);
	var Data_Maybe = __webpack_require__(72);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Data_Unfoldable = __webpack_require__(124);
	var Partial_Unsafe = __webpack_require__(91);
	var Data_Function = __webpack_require__(10);
	var Data_Ordering = __webpack_require__(33);
	var Data_Ring = __webpack_require__(36);
	var Data_Ord = __webpack_require__(26);
	var Data_Eq = __webpack_require__(28);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Control_Apply = __webpack_require__(6);
	var Data_Functor = __webpack_require__(8);
	var Control_Applicative = __webpack_require__(5);
	var Data_Boolean = __webpack_require__(20);
	var Data_Semiring = __webpack_require__(38);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Bind = __webpack_require__(17);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Category = __webpack_require__(11);
	var zipWithA = function zipWithA(dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
	var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unzip = $foreign["uncons'"](function (v) {
	    return new Data_Tuple.Tuple([], []);
	})(function (v) {
	    return function (ts) {
	        var $39 = unzip(ts);
	        return new Data_Tuple.Tuple($foreign.cons(v.value0)($39.value0), $foreign.cons(v.value1)($39.value1));
	    };
	});
	var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
	    return function (xs) {
	        return new Data_Maybe.Just({
	            head: x,
	            tail: xs
	        });
	    };
	});
	var toUnfoldable = function toUnfoldable(dictUnfoldable) {
	    return Data_Function.apply(Data_Unfoldable.unfoldr(dictUnfoldable))($foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (h) {
	        return function (t) {
	            return new Data_Maybe.Just(new Data_Tuple.Tuple(h, t));
	        };
	    }));
	};
	var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
	    return function (xs) {
	        return new Data_Maybe.Just(xs);
	    };
	});
	var span = function span(p) {
	    var go = function go(__copy_acc) {
	        return function (__copy_xs) {
	            var acc = __copy_acc;
	            var xs = __copy_xs;
	            tco: while (true) {
	                var $45 = uncons(xs);
	                if ($45 instanceof Data_Maybe.Just && p($45.value0.head)) {
	                    var __tco_acc = $foreign.cons($45.value0.head)(acc);
	                    acc = __tco_acc;
	                    xs = $45.value0.tail;
	                    continue tco;
	                };
	                return {
	                    init: $foreign.reverse(acc),
	                    rest: xs
	                };
	            };
	        };
	    };
	    return go([]);
	};
	var takeWhile = function takeWhile(p) {
	    return function (xs) {
	        return span(p)(xs).init;
	    };
	};
	var sortBy = function sortBy(comp) {
	    return function (xs) {
	        var comp$prime = function comp$prime(x) {
	            return function (y) {
	                var $49 = comp(x)(y);
	                if ($49 instanceof Data_Ordering.GT) {
	                    return 1;
	                };
	                if ($49 instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if ($49 instanceof Data_Ordering.LT) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.Array line 436, column 15 - line 441, column 1: " + [$49.constructor.name]);
	            };
	        };
	        return $foreign.sortImpl(comp$prime)(xs);
	    };
	};
	var sort = function sort(dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var singleton = function singleton(a) {
	    return [a];
	};
	var $$null = function $$null(xs) {
	    return $foreign.length(xs) === 0;
	};
	var nubBy = function nubBy(eq) {
	    return function (xs) {
	        var $50 = uncons(xs);
	        if ($50 instanceof Data_Maybe.Just) {
	            return $foreign.cons($50.value0.head)(nubBy(eq)($foreign.filter(function (y) {
	                return !eq($50.value0.head)(y);
	            })($50.value0.tail)));
	        };
	        if ($50 instanceof Data_Maybe.Nothing) {
	            return [];
	        };
	        throw new Error("Failed pattern match at Data.Array line 525, column 3 - line 527, column 18: " + [$50.constructor.name]);
	    };
	};
	var nub = function nub(dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var mapWithIndex = function mapWithIndex(f) {
	    return function (xs) {
	        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1))(xs);
	    };
	};
	var some = function some(dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply(dictAlternative["__superclass_Control.Applicative.Applicative_0"]()["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]()["__superclass_Data.Functor.Functor_0"]())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function many(dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt(dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())([]));
	        };
	    };
	};
	var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var init = function init(xs) {
	    if ($$null(xs)) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (Data_Boolean.otherwise) {
	        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
	    };
	    throw new Error("Failed pattern match at Data.Array line 227, column 1 - line 229, column 55: " + [xs.constructor.name]);
	};
	var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var last = function last(xs) {
	    return index(xs)($foreign.length(xs) - 1);
	};
	var modifyAt = function modifyAt(i) {
	    return function (f) {
	        return function (xs) {
	            var go = function go(x) {
	                return updateAt(i)(f(x))(xs);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	var head = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
	    return function (v) {
	        return new Data_Maybe.Just(x);
	    };
	});
	var groupBy = function groupBy(op) {
	    var go = function go(__copy_acc) {
	        return function (__copy_xs) {
	            var acc = __copy_acc;
	            var xs = __copy_xs;
	            tco: while (true) {
	                var $55 = uncons(xs);
	                if ($55 instanceof Data_Maybe.Just) {
	                    var sp = span(op($55.value0.head))($55.value0.tail);
	                    var __tco_acc = $foreign.cons($foreign.cons($55.value0.head)(sp.init))(acc);
	                    acc = __tco_acc;
	                    xs = sp.rest;
	                    continue tco;
	                };
	                if ($55 instanceof Data_Maybe.Nothing) {
	                    return $foreign.reverse(acc);
	                };
	                throw new Error("Failed pattern match at Data.Array line 511, column 15 - line 515, column 27: " + [$55.constructor.name]);
	            };
	        };
	    };
	    return go([]);
	};
	var group = function group(dictEq) {
	    return function (xs) {
	        return groupBy(Data_Eq.eq(dictEq))(xs);
	    };
	};
	var group$prime = function group$prime(dictOrd) {
	    return function ($69) {
	        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($69));
	    };
	};
	var fromFoldable = function fromFoldable(dictFoldable) {
	    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
	};
	var foldM = function foldM(dictMonad) {
	    return function (f) {
	        return function (a) {
	            return $foreign["uncons'"](function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
	            })(function (b) {
	                return function (bs) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(a)(b))(function (a$prime) {
	                        return foldM(dictMonad)(f)(a$prime)(bs);
	                    });
	                };
	            });
	        };
	    };
	};
	var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var insertBy = function insertBy(cmp) {
	    return function (x) {
	        return function (ys) {
	            var i = Data_Maybe.maybe(0)(function (v) {
	                return v + 1 | 0;
	            })(findLastIndex(function (y) {
	                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
	            })(ys));
	            return Partial_Unsafe.unsafePartial(function (dictPartial) {
	                return Data_Maybe.fromJust(dictPartial)(insertAt(i)(x)(ys));
	            });
	        };
	    };
	};
	var insert = function insert(dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var intersectBy = function intersectBy(eq) {
	    return function (xs) {
	        return function (ys) {
	            return $foreign.filter(function (x) {
	                return Data_Maybe.isJust(findIndex(eq(x))(ys));
	            })(xs);
	        };
	    };
	};
	var intersect = function intersect(dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var filterM = function filterM(dictMonad) {
	    return function (p) {
	        return $foreign["uncons'"](function (v) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())([]);
	        })(function (x) {
	            return function (xs) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(p(x))(function (v) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                            if (v) {
	                                return $foreign.cons(x)(v1);
	                            };
	                            if (!v) {
	                                return v1;
	                            };
	                            throw new Error("Failed pattern match at Data.Array line 403, column 3 - line 403, column 34: " + [v.constructor.name]);
	                        }());
	                    });
	                });
	            };
	        });
	    };
	};
	var elemLastIndex = function elemLastIndex(dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function elemIndex(dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function dropWhile(p) {
	    return function (xs) {
	        return span(p)(xs).rest;
	    };
	};
	var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var deleteBy = function deleteBy(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2.length === 0) {
	                return [];
	            };
	            return Data_Maybe.maybe(v2)(function (i) {
	                return Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
	                    return Data_Maybe.fromJust(dictPartial)(deleteAt(i)(v2));
	                });
	            })(findIndex(v(v1))(v2));
	        };
	    };
	};
	var unionBy = function unionBy(eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function union(dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var $$delete = function $$delete(dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function difference(dictEq) {
	    return function (xs) {
	        return function (ys) {
	            if ($$null(xs)) {
	                return [];
	            };
	            if (Data_Boolean.otherwise) {
	                return $foreign["uncons'"](Data_Function["const"](xs))(function (z) {
	                    return function (zs) {
	                        return difference(dictEq)($$delete(dictEq)(z)(xs))(zs);
	                    };
	                })(ys);
	            };
	            throw new Error("Failed pattern match at Data.Array line 557, column 1 - line 559, column 67: " + [xs.constructor.name, ys.constructor.name]);
	        };
	    };
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
	var mapMaybe = function mapMaybe(f) {
	    return concatMap(function ($70) {
	        return Data_Maybe.maybe([])(singleton)(f($70));
	    });
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var alterAt = function alterAt(i) {
	    return function (f) {
	        return function (xs) {
	            var go = function go(x) {
	                var $67 = f(x);
	                if ($67 instanceof Data_Maybe.Nothing) {
	                    return deleteAt(i)(xs);
	                };
	                if ($67 instanceof Data_Maybe.Just) {
	                    return updateAt(i)($67.value0)(xs);
	                };
	                throw new Error("Failed pattern match at Data.Array line 361, column 10 - line 363, column 32: " + [$67.constructor.name]);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	module.exports = {
	    alterAt: alterAt,
	    catMaybes: catMaybes,
	    concatMap: concatMap,
	    "delete": $$delete,
	    deleteAt: deleteAt,
	    deleteBy: deleteBy,
	    difference: difference,
	    dropWhile: dropWhile,
	    elemIndex: elemIndex,
	    elemLastIndex: elemLastIndex,
	    filterM: filterM,
	    findIndex: findIndex,
	    findLastIndex: findLastIndex,
	    foldM: foldM,
	    fromFoldable: fromFoldable,
	    group: group,
	    "group'": group$prime,
	    groupBy: groupBy,
	    head: head,
	    index: index,
	    init: init,
	    insert: insert,
	    insertAt: insertAt,
	    insertBy: insertBy,
	    intersect: intersect,
	    intersectBy: intersectBy,
	    last: last,
	    many: many,
	    mapMaybe: mapMaybe,
	    mapWithIndex: mapWithIndex,
	    modifyAt: modifyAt,
	    nub: nub,
	    nubBy: nubBy,
	    "null": $$null,
	    singleton: singleton,
	    some: some,
	    sort: sort,
	    sortBy: sortBy,
	    span: span,
	    tail: tail,
	    takeWhile: takeWhile,
	    toUnfoldable: toUnfoldable,
	    uncons: uncons,
	    union: union,
	    unionBy: unionBy,
	    unzip: unzip,
	    updateAt: updateAt,
	    zip: zip,
	    zipWithA: zipWithA,
	    concat: $foreign.concat,
	    cons: $foreign.cons,
	    drop: $foreign.drop,
	    filter: $foreign.filter,
	    length: $foreign.length,
	    partition: $foreign.partition,
	    range: $foreign.range,
	    reverse: $foreign.reverse,
	    slice: $foreign.slice,
	    snoc: $foreign.snoc,
	    take: $foreign.take,
	    zipWith: $foreign.zipWith
	};

/***/ },
/* 123 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Data.Array

	//------------------------------------------------------------------------------
	// Array creation --------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.range = function (start) {
	  return function (end) {
	    var step = start > end ? -1 : 1;
	    var result = [];
	    for (var i = start, n = 0; i !== end; i += step) {
	      result[n++] = i;
	    }
	    result[n] = i;
	    return result;
	  };
	};

	exports.fromFoldableImpl = function () {
	  // jshint maxparams: 2
	  function Cons(head, tail) {
	    this.head = head;
	    this.tail = tail;
	  }
	  var emptyList = {};

	  function curryCons(head) {
	    return function (tail) {
	      return new Cons(head, tail);
	    };
	  }

	  function listToArray(list) {
	    var result = [];
	    var count = 0;
	    while (list !== emptyList) {
	      result[count++] = list.head;
	      list = list.tail;
	    }
	    return result;
	  }

	  return function (foldr) {
	    return function (xs) {
	      return listToArray(foldr(curryCons)(emptyList)(xs));
	    };
	  };
	}();

	//------------------------------------------------------------------------------
	// Array size ------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.length = function (xs) {
	  return xs.length;
	};

	//------------------------------------------------------------------------------
	// Extending arrays ------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.cons = function (e) {
	  return function (l) {
	    return [e].concat(l);
	  };
	};

	exports.snoc = function (l) {
	  return function (e) {
	    var l1 = l.slice();
	    l1.push(e);
	    return l1;
	  };
	};

	//------------------------------------------------------------------------------
	// Non-indexed reads -----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports["uncons'"] = function (empty) {
	  return function (next) {
	    return function (xs) {
	      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Indexed operations ----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.indexImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
	      };
	    };
	  };
	};

	exports.findIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = 0, l = xs.length; i < l; i++) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};

	exports.findLastIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = xs.length - 1; i >= 0; i--) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};

	exports._insertAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i > l.length) return nothing;
	          var l1 = l.slice();
	          l1.splice(i, 0, a);
	          return just(l1);
	        };
	      };
	    };
	  };
	};

	exports._deleteAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (l) {
	        if (i < 0 || i >= l.length) return nothing;
	        var l1 = l.slice();
	        l1.splice(i, 1);
	        return just(l1);
	      };
	    };
	  };
	};

	exports._updateAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i >= l.length) return nothing;
	          var l1 = l.slice();
	          l1[i] = a;
	          return just(l1);
	        };
	      };
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Transformations -------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.reverse = function (l) {
	  return l.slice().reverse();
	};

	exports.concat = function (xss) {
	  var result = [];
	  for (var i = 0, l = xss.length; i < l; i++) {
	    var xs = xss[i];
	    for (var j = 0, m = xs.length; j < m; j++) {
	      result.push(xs[j]);
	    }
	  }
	  return result;
	};

	exports.filter = function (f) {
	  return function (xs) {
	    return xs.filter(f);
	  };
	};

	exports.partition = function (f) {
	  return function (xs) {
	    var yes = [];
	    var no = [];
	    for (var i = 0; i < xs.length; i++) {
	      var x = xs[i];
	      if (f(x)) yes.push(x);else no.push(x);
	    }
	    return { yes: yes, no: no };
	  };
	};

	//------------------------------------------------------------------------------
	// Sorting ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.sortImpl = function (f) {
	  return function (l) {
	    // jshint maxparams: 2
	    return l.slice().sort(function (x, y) {
	      return f(x)(y);
	    });
	  };
	};

	//------------------------------------------------------------------------------
	// Subarrays -------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.slice = function (s) {
	  return function (e) {
	    return function (l) {
	      return l.slice(s, e);
	    };
	  };
	};

	exports.take = function (n) {
	  return function (l) {
	    return n < 1 ? [] : l.slice(0, n);
	  };
	};

	exports.drop = function (n) {
	  return function (l) {
	    return n < 1 ? l : l.slice(n);
	  };
	};

	//------------------------------------------------------------------------------
	// Zipping ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.zipWith = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      var result = new Array(l);
	      for (var i = 0; i < l; i++) {
	        result[i] = f(xs[i])(ys[i]);
	      }
	      return result;
	    };
	  };
	};

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(125);
	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Partial_Unsafe = __webpack_require__(91);
	var Data_Ord = __webpack_require__(26);
	var Data_Ring = __webpack_require__(36);
	var Data_Function = __webpack_require__(10);
	var Data_Unit = __webpack_require__(13);
	var Unfoldable = function Unfoldable(unfoldr) {
	    this.unfoldr = unfoldr;
	};
	var unfoldr = function unfoldr(dict) {
	    return dict.unfoldr;
	};
	var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Partial_Unsafe.unsafePartial(function (dictPartial) {
	    return Data_Maybe.fromJust(dictPartial);
	}))(Data_Tuple.fst)(Data_Tuple.snd));
	var replicate = function replicate(dictUnfoldable) {
	    return function (n) {
	        return function (v) {
	            var step = function step(i) {
	                var $7 = i <= 0;
	                if ($7) {
	                    return Data_Maybe.Nothing.value;
	                };
	                if (!$7) {
	                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
	                };
	                throw new Error("Failed pattern match at Data.Unfoldable line 58, column 7 - line 59, column 34: " + [$7.constructor.name]);
	            };
	            return unfoldr(dictUnfoldable)(step)(n);
	        };
	    };
	};
	var replicateA = function replicateA(dictApplicative) {
	    return function (dictUnfoldable) {
	        return function (dictTraversable) {
	            return function (n) {
	                return function (m) {
	                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
	                };
	            };
	        };
	    };
	};
	var singleton = function singleton(dictUnfoldable) {
	    return replicate(dictUnfoldable)(1);
	};
	var none = function none(dictUnfoldable) {
	    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
	};
	module.exports = {
	    Unfoldable: Unfoldable,
	    none: none,
	    replicate: replicate,
	    replicateA: replicateA,
	    singleton: singleton,
	    unfoldr: unfoldr,
	    unfoldableArray: unfoldableArray
	};

/***/ },
/* 125 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Unfoldable

	exports.unfoldrArrayImpl = function (isNothing) {
	  return function (fromJust) {
	    return function (fst) {
	      return function (snd) {
	        return function (f) {
	          return function (b) {
	            var result = [];
	            while (true) {
	              var maybe = f(b);
	              if (isNothing(maybe)) return result;
	              var tuple = fromJust(maybe);
	              result.push(fst(tuple));
	              b = snd(tuple);
	            }
	          };
	        };
	      };
	    };
	  };
	};

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(127);
	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_String_Unsafe = __webpack_require__(128);
	var Data_Semiring = __webpack_require__(38);
	var Data_Eq = __webpack_require__(28);
	var Data_Ordering = __webpack_require__(33);
	var Data_Ring = __webpack_require__(36);
	var Data_Function = __webpack_require__(10);
	var uncons = function uncons(v) {
	    if (v === "") {
	        return Data_Maybe.Nothing.value;
	    };
	    return new Data_Maybe.Just({
	        head: Data_String_Unsafe.charAt(0)(v),
	        tail: $foreign.drop(1)(v)
	    });
	};
	var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var takeWhile = function takeWhile(p) {
	    return function (s) {
	        return $foreign.take($foreign.count(p)(s))(s);
	    };
	};
	var $$null = function $$null(s) {
	    return $foreign.length(s) === 0;
	};
	var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripSuffix = function stripSuffix(suffix) {
	    return function (str) {
	        var $2 = lastIndexOf(suffix)(str);
	        if ($2 instanceof Data_Maybe.Just && $2.value0 === $foreign.length(str) - $foreign.length(suffix)) {
	            return Data_Function.apply(Data_Maybe.Just.create)($foreign.take($2.value0)(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripPrefix = function stripPrefix(prefix) {
	    return function (str) {
	        var $4 = indexOf(prefix)(str);
	        if ($4 instanceof Data_Maybe.Just && $4.value0 === 0) {
	            return Data_Function.apply(Data_Maybe.Just.create)($foreign.drop($foreign.length(prefix))(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var dropWhile = function dropWhile(p) {
	    return function (s) {
	        return $foreign.drop($foreign.count(p)(s))(s);
	    };
	};
	var contains = function contains(x) {
	    return function (s) {
	        return Data_Maybe.isJust(indexOf(x)(s));
	    };
	};
	var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	module.exports = {
	    charAt: charAt,
	    charCodeAt: charCodeAt,
	    contains: contains,
	    dropWhile: dropWhile,
	    indexOf: indexOf,
	    "indexOf'": indexOf$prime,
	    lastIndexOf: lastIndexOf,
	    "lastIndexOf'": lastIndexOf$prime,
	    localeCompare: localeCompare,
	    "null": $$null,
	    stripPrefix: stripPrefix,
	    stripSuffix: stripSuffix,
	    takeWhile: takeWhile,
	    toChar: toChar,
	    uncons: uncons,
	    count: $foreign.count,
	    drop: $foreign.drop,
	    fromCharArray: $foreign.fromCharArray,
	    joinWith: $foreign.joinWith,
	    length: $foreign.length,
	    replace: $foreign.replace,
	    singleton: $foreign.singleton,
	    split: $foreign.split,
	    take: $foreign.take,
	    toCharArray: $foreign.toCharArray,
	    toLower: $foreign.toLower,
	    toUpper: $foreign.toUpper,
	    trim: $foreign.trim
	};

/***/ },
/* 127 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Data.String

	exports._charAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
	      };
	    };
	  };
	};

	exports.singleton = function (c) {
	  return c;
	};

	exports._charCodeAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
	      };
	    };
	  };
	};

	exports._toChar = function (just) {
	  return function (nothing) {
	    return function (s) {
	      return s.length === 1 ? just(s) : nothing;
	    };
	  };
	};

	exports.fromCharArray = function (a) {
	  return a.join("");
	};

	exports._indexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.indexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};

	exports["_indexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.indexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};

	exports._lastIndexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.lastIndexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};

	exports["_lastIndexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.lastIndexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};

	exports.length = function (s) {
	  return s.length;
	};

	exports._localeCompare = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (s1) {
	        return function (s2) {
	          var result = s1.localeCompare(s2);
	          return result < 0 ? lt : result > 0 ? gt : eq;
	        };
	      };
	    };
	  };
	};

	exports.replace = function (s1) {
	  return function (s2) {
	    return function (s3) {
	      return s3.replace(s1, s2);
	    };
	  };
	};

	exports.take = function (n) {
	  return function (s) {
	    return s.substr(0, n);
	  };
	};

	exports.drop = function (n) {
	  return function (s) {
	    return s.substring(n);
	  };
	};

	exports.count = function (p) {
	  return function (s) {
	    for (var i = 0; i < s.length && p(s.charAt(i)); i++) {}{}
	    return i;
	  };
	};

	exports.split = function (sep) {
	  return function (s) {
	    return s.split(sep);
	  };
	};

	exports.toCharArray = function (s) {
	  return s.split("");
	};

	exports.toLower = function (s) {
	  return s.toLowerCase();
	};

	exports.toUpper = function (s) {
	  return s.toUpperCase();
	};

	exports.trim = function (s) {
	  return s.trim();
	};

	exports.joinWith = function (s) {
	  return function (xs) {
	    return xs.join(s);
	  };
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(129);
	module.exports = {
	    "char": $foreign["char"],
	    charAt: $foreign.charAt,
	    charCodeAt: $foreign.charCodeAt
	};

/***/ },
/* 129 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Data.String.Unsafe

	exports.charCodeAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charCodeAt(i);
	    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
	  };
	};

	exports.charAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charAt(i);
	    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
	  };
	};

	exports.char = function (s) {
	  if (s.length === 1) return s.charAt(0);
	  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
	};

/***/ },
/* 130 */
/***/ function(module, exports) {

	// Generated by psc version 0.9.1
	"use strict";

	var Proxy3 = function () {
	    function Proxy3() {};
	    Proxy3.value = new Proxy3();
	    return Proxy3;
	}();
	var Proxy2 = function () {
	    function Proxy2() {};
	    Proxy2.value = new Proxy2();
	    return Proxy2;
	}();
	var $$Proxy = function () {
	    function Proxy() {};
	    Proxy.value = new Proxy();
	    return Proxy;
	}();
	module.exports = {
	    "Proxy": $$Proxy,
	    Proxy2: Proxy2,
	    Proxy3: Proxy3
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Functor_Coproduct = __webpack_require__(132);
	var Data_Maybe = __webpack_require__(72);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Function = __webpack_require__(10);
	var Inject = function Inject(inj, prj) {
	    this.inj = inj;
	    this.prj = prj;
	};
	var prj = function prj(dict) {
	    return dict.prj;
	};
	var injectReflexive = new Inject(Control_Category.id(Control_Category.categoryFn), Data_Maybe.Just.create);
	var injectLeft = new Inject(function ($1) {
	    return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($1));
	}, Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)));
	var inj = function inj(dict) {
	    return dict.inj;
	};
	var injectRight = function injectRight(dictInject) {
	    return new Inject(function ($2) {
	        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create(inj(dictInject)($2)));
	    }, Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(prj(dictInject)));
	};
	module.exports = {
	    Inject: Inject,
	    inj: inj,
	    prj: prj,
	    injectReflexive: injectReflexive,
	    injectLeft: injectLeft,
	    injectRight: injectRight
	};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Either = __webpack_require__(58);
	var Data_Foldable = __webpack_require__(70);
	var Data_Traversable = __webpack_require__(78);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Coproduct = function Coproduct(x) {
	    return x;
	};
	var unCoproduct = function unCoproduct(v) {
	    return v;
	};
	var right = function right(ga) {
	    return new Data_Either.Right(ga);
	};
	var left = function left(fa) {
	    return new Data_Either.Left(fa);
	};
	var functorCoproduct = function functorCoproduct(dictFunctor) {
	    return function (dictFunctor1) {
	        return new Data_Functor.Functor(function (f) {
	            return function (v) {
	                return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
	            };
	        });
	    };
	};
	var coproduct = function coproduct(f) {
	    return function (g) {
	        return function (v) {
	            return Data_Either.either(f)(g)(v);
	        };
	    };
	};
	var foldableCoproduct = function foldableCoproduct(dictFoldable) {
	    return function (dictFoldable1) {
	        return new Data_Foldable.Foldable(function (dictMonoid) {
	            return function (f) {
	                return coproduct(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f))(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f));
	            };
	        }, function (f) {
	            return function (z) {
	                return coproduct(Data_Foldable.foldl(dictFoldable)(f)(z))(Data_Foldable.foldl(dictFoldable1)(f)(z));
	            };
	        }, function (f) {
	            return function (z) {
	                return coproduct(Data_Foldable.foldr(dictFoldable)(f)(z))(Data_Foldable.foldr(dictFoldable1)(f)(z));
	            };
	        });
	    };
	};
	var traversableCoproduct = function traversableCoproduct(dictTraversable) {
	    return function (dictTraversable1) {
	        return new Data_Traversable.Traversable(function () {
	            return foldableCoproduct(dictTraversable["__superclass_Data.Foldable.Foldable_1"]())(dictTraversable1["__superclass_Data.Foldable.Foldable_1"]());
	        }, function () {
	            return functorCoproduct(dictTraversable["__superclass_Data.Functor.Functor_0"]())(dictTraversable1["__superclass_Data.Functor.Functor_0"]());
	        }, function (dictApplicative) {
	            return coproduct(function ($22) {
	                return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(function ($23) {
	                    return Coproduct(Data_Either.Left.create($23));
	                })(Data_Traversable.sequence(dictTraversable)(dictApplicative)($22));
	            })(function ($24) {
	                return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(function ($25) {
	                    return Coproduct(Data_Either.Right.create($25));
	                })(Data_Traversable.sequence(dictTraversable1)(dictApplicative)($24));
	            });
	        }, function (dictApplicative) {
	            return function (f) {
	                return coproduct(function ($26) {
	                    return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(function ($27) {
	                        return Coproduct(Data_Either.Left.create($27));
	                    })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)($26));
	                })(function ($28) {
	                    return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(function ($29) {
	                        return Coproduct(Data_Either.Right.create($29));
	                    })(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f)($28));
	                });
	            };
	        });
	    };
	};
	var bihoistCoproduct = function bihoistCoproduct(natF) {
	    return function (natG) {
	        return function (v) {
	            return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(natF)(natG)(v);
	        };
	    };
	};
	module.exports = {
	    Coproduct: Coproduct,
	    bihoistCoproduct: bihoistCoproduct,
	    coproduct: coproduct,
	    left: left,
	    right: right,
	    unCoproduct: unCoproduct,
	    functorCoproduct: functorCoproduct,
	    foldableCoproduct: foldableCoproduct,
	    traversableCoproduct: traversableCoproduct
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Exists = __webpack_require__(134);
	var Data_Either = __webpack_require__(58);
	var Data_Bifunctor = __webpack_require__(68);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_Trans = __webpack_require__(104);
	var Data_Functor = __webpack_require__(8);
	var Data_Unit = __webpack_require__(13);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad = __webpack_require__(19);
	var Control_Applicative = __webpack_require__(5);
	var Control_Category = __webpack_require__(11);
	var Bound = function () {
	    function Bound(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Bound.create = function (value0) {
	        return function (value1) {
	            return new Bound(value0, value1);
	        };
	    };
	    return Bound;
	}();
	var FreeT = function () {
	    function FreeT(value0) {
	        this.value0 = value0;
	    };
	    FreeT.create = function (value0) {
	        return new FreeT(value0);
	    };
	    return FreeT;
	}();
	var Bind = function () {
	    function Bind(value0) {
	        this.value0 = value0;
	    };
	    Bind.create = function (value0) {
	        return new Bind(value0);
	    };
	    return Bind;
	}();
	var monadTransFreeT = function monadTransFreeT(dictFunctor) {
	    return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	        return function (ma) {
	            return new FreeT(function (v) {
	                return Data_Functor.map(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(ma);
	            });
	        };
	    });
	};
	var freeT = FreeT.create;
	var bound = function bound(m) {
	    return function (f) {
	        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
	    };
	};
	var functorFreeT = function functorFreeT(dictFunctor) {
	    return function (dictFunctor1) {
	        return new Data_Functor.Functor(function (f) {
	            return function (v) {
	                if (v instanceof FreeT) {
	                    return new FreeT(function (v1) {
	                        return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
	                    });
	                };
	                if (v instanceof Bind) {
	                    return Data_Exists.runExists(function (v1) {
	                        return bound(v1.value0)(function ($98) {
	                            return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($98));
	                        });
	                    })(v.value0);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 55, column 3 - line 55, column 69: " + [f.constructor.name, v.constructor.name]);
	            };
	        });
	    };
	};
	var bimapFreeT = function bimapFreeT(dictFunctor) {
	    return function (dictFunctor1) {
	        return function (nf) {
	            return function (nm) {
	                return function (v) {
	                    if (v instanceof Bind) {
	                        return Data_Exists.runExists(function (v1) {
	                            return bound(function ($99) {
	                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($99));
	                            })(function ($100) {
	                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($100));
	                            });
	                        })(v.value0);
	                    };
	                    if (v instanceof FreeT) {
	                        return new FreeT(function (v1) {
	                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($101) {
	                                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($101));
	                            }))(nm(v.value0(Data_Unit.unit)));
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 96, column 1 - line 96, column 114: " + [nf.constructor.name, nm.constructor.name, v.constructor.name]);
	                };
	            };
	        };
	    };
	};
	var hoistFreeT = function hoistFreeT(dictFunctor) {
	    return function (dictFunctor1) {
	        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var interpret = function interpret(dictFunctor) {
	    return function (dictFunctor1) {
	        return function (nf) {
	            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.id(Control_Category.categoryFn));
	        };
	    };
	};
	var monadFreeT = function monadFreeT(dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Monad.Monad(function () {
	            return applicativeFreeT(dictFunctor)(dictMonad);
	        }, function () {
	            return bindFreeT(dictFunctor)(dictMonad);
	        });
	    };
	};
	var bindFreeT = function bindFreeT(dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Bind.Bind(function () {
	            return applyFreeT(dictFunctor)(dictMonad);
	        }, function (v) {
	            return function (f) {
	                if (v instanceof Bind) {
	                    return Data_Exists.runExists(function (v1) {
	                        return bound(v1.value0)(function (x) {
	                            return bound(function (v2) {
	                                return v1.value1(x);
	                            })(f);
	                        });
	                    })(v.value0);
	                };
	                return bound(function (v1) {
	                    return v;
	                })(f);
	            };
	        });
	    };
	};
	var applyFreeT = function applyFreeT(dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Apply.Apply(function () {
	            return functorFreeT(dictFunctor)(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	        }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
	    };
	};
	var applicativeFreeT = function applicativeFreeT(dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Applicative.Applicative(function () {
	            return applyFreeT(dictFunctor)(dictMonad);
	        }, function (a) {
	            return new FreeT(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(a));
	            });
	        });
	    };
	};
	var liftFreeT = function liftFreeT(dictFunctor) {
	    return function (dictMonad) {
	        return function (fa) {
	            return new FreeT(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
	            });
	        };
	    };
	};
	var resume = function resume(dictFunctor) {
	    return function (dictMonadRec) {
	        var go = function go(v) {
	            if (v instanceof FreeT) {
	                return Data_Functor.map(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(v.value0(Data_Unit.unit));
	            };
	            if (v instanceof Bind) {
	                return Data_Exists.runExists(function (v1) {
	                    var $77 = v1.value0(Data_Unit.unit);
	                    if ($77 instanceof FreeT) {
	                        return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())($77.value0(Data_Unit.unit))(function (v2) {
	                            if (v2 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value1(v2.value0)));
	                            };
	                            if (v2 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
	                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(h)(v1.value1);
	                                })(v2.value0))));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 49, column 9 - line 51, column 68: " + [v2.constructor.name]);
	                        });
	                    };
	                    if ($77 instanceof Bind) {
	                        return Data_Exists.runExists(function (v2) {
	                            return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value0(Data_Unit.unit))(function (z) {
	                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value1(z))(v1.value1);
	                            })));
	                        })($77.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 46, column 5 - line 52, column 98: " + [$77.constructor.name]);
	                })(v.value0);
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 44, column 3 - line 44, column 36: " + [v.constructor.name]);
	        };
	        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	    };
	};
	var runFreeT = function runFreeT(dictFunctor) {
	    return function (dictMonadRec) {
	        return function (interp) {
	            var go = function go(v) {
	                if (v instanceof Data_Either.Left) {
	                    return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v.value0));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(interp(v.value0))(function (v1) {
	                        return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1));
	                    });
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 104, column 3 - line 104, column 31: " + [v.constructor.name]);
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(go)(resume(dictFunctor)(dictMonadRec)));
	        };
	    };
	};
	var monadRecFreeT = function monadRecFreeT(dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadFreeT(dictFunctor)(dictMonad);
	        }, function (f) {
	            var go = function go(s) {
	                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
	                    if (v instanceof Data_Either.Left) {
	                        return go(v.value0);
	                    };
	                    if (v instanceof Data_Either.Right) {
	                        return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 78, column 7 - line 80, column 26: " + [v.constructor.name]);
	                });
	            };
	            return go;
	        });
	    };
	};
	module.exports = {
	    bimapFreeT: bimapFreeT,
	    freeT: freeT,
	    hoistFreeT: hoistFreeT,
	    interpret: interpret,
	    liftFreeT: liftFreeT,
	    resume: resume,
	    runFreeT: runFreeT,
	    functorFreeT: functorFreeT,
	    applyFreeT: applyFreeT,
	    applicativeFreeT: applicativeFreeT,
	    bindFreeT: bindFreeT,
	    monadFreeT: monadFreeT,
	    monadTransFreeT: monadTransFreeT,
	    monadRecFreeT: monadRecFreeT
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Unsafe_Coerce = __webpack_require__(112);
	var runExists = Unsafe_Coerce.unsafeCoerce;
	var mkExists = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    mkExists: mkExists,
	    runExists: runExists
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(136);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_ST = __webpack_require__(88);
	var Data_Maybe = __webpack_require__(72);
	var thaw = $foreign.copyImpl;
	var pushSTArray = function pushSTArray(arr) {
	    return function (a) {
	        return $foreign.pushAllSTArray(arr)([a]);
	    };
	};
	var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var freeze = $foreign.copyImpl;
	module.exports = {
	    freeze: freeze,
	    peekSTArray: peekSTArray,
	    pushSTArray: pushSTArray,
	    thaw: thaw,
	    emptySTArray: $foreign.emptySTArray,
	    pokeSTArray: $foreign.pokeSTArray,
	    pushAllSTArray: $foreign.pushAllSTArray,
	    runSTArray: $foreign.runSTArray,
	    spliceSTArray: $foreign.spliceSTArray,
	    toAssocArray: $foreign.toAssocArray
	};

/***/ },
/* 136 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Data.Array.ST

	exports.runSTArray = function (f) {
	  return f;
	};

	exports.emptySTArray = function () {
	  return [];
	};

	exports.peekSTArrayImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return function () {
	          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
	        };
	      };
	    };
	  };
	};

	exports.pokeSTArray = function (xs) {
	  return function (i) {
	    return function (a) {
	      return function () {
	        var ret = i >= 0 && i < xs.length;
	        if (ret) xs[i] = a;
	        return ret;
	      };
	    };
	  };
	};

	exports.pushAllSTArray = function (xs) {
	  return function (as) {
	    return function () {
	      return xs.push.apply(xs, as);
	    };
	  };
	};

	exports.spliceSTArray = function (xs) {
	  return function (i) {
	    return function (howMany) {
	      return function (bs) {
	        return function () {
	          return xs.splice.apply(xs, [i, howMany].concat(bs));
	        };
	      };
	    };
	  };
	};

	exports.copyImpl = function (xs) {
	  return function () {
	    return xs.slice();
	  };
	};

	exports.toAssocArray = function (xs) {
	  return function () {
	    var n = xs.length;
	    var as = new Array(n);
	    for (var i = 0; i < n; i++) {
	      as[i] = { value: xs[i], index: i };
	    }return as;
	  };
	};

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(138);
	var Prelude = __webpack_require__(4);
	var Control_Comonad = __webpack_require__(63);
	var Control_Extend = __webpack_require__(59);
	var Control_Lazy = __webpack_require__(103);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Monoid = __webpack_require__(61);
	var Data_Semiring = __webpack_require__(38);
	var Data_Ring = __webpack_require__(36);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_EuclideanRing = __webpack_require__(41);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Field = __webpack_require__(43);
	var Data_Eq = __webpack_require__(28);
	var Data_Ord = __webpack_require__(26);
	var Data_Bounded = __webpack_require__(24);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Apply = __webpack_require__(6);
	var Data_Functor = __webpack_require__(8);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Control_Applicative = __webpack_require__(5);
	var Control_Bind = __webpack_require__(17);
	var Data_Function = __webpack_require__(10);
	var Control_Monad = __webpack_require__(19);
	var Data_Show = __webpack_require__(15);
	var Data_Unit = __webpack_require__(13);
	var showLazy = function showLazy(dictShow) {
	    return new Data_Show.Show(function (x) {
	        return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
	    });
	};
	var semiringLazy = function semiringLazy(dictSemiring) {
	    return new Data_Semiring.Semiring(function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    }, $foreign.defer(function (v) {
	        return Data_Semiring.one(dictSemiring);
	    }), $foreign.defer(function (v) {
	        return Data_Semiring.zero(dictSemiring);
	    }));
	};
	var semigroupLazy = function semigroupLazy(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    });
	};
	var ringLazy = function ringLazy(dictRing) {
	    return new Data_Ring.Ring(function () {
	        return semiringLazy(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    });
	};
	var monoidLazy = function monoidLazy(dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupLazy(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, $foreign.defer(function (v) {
	        return Data_Monoid.mempty(dictMonoid);
	    }));
	};
	var lazyLazy = new Control_Lazy.Lazy(function (f) {
	    return $foreign.defer(function (v) {
	        return $foreign.force(f(Data_Unit.unit));
	    });
	});
	var functorLazy = new Data_Functor.Functor(function (f) {
	    return function (l) {
	        return $foreign.defer(function (v) {
	            return f($foreign.force(l));
	        });
	    };
	});
	var extendLazy = new Control_Extend.Extend(function () {
	    return functorLazy;
	}, function (f) {
	    return function (x) {
	        return $foreign.defer(function (v) {
	            return f(x);
	        });
	    };
	});
	var eqLazy = function eqLazy(dictEq) {
	    return new Data_Eq.Eq(function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
	        };
	    });
	};
	var ordLazy = function ordLazy(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqLazy(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (x) {
	        return function (y) {
	            return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
	        };
	    });
	};
	var comonadLazy = new Control_Comonad.Comonad(function () {
	    return extendLazy;
	}, $foreign.force);
	var commutativeRingLazy = function commutativeRingLazy(dictCommutativeRing) {
	    return new Data_CommutativeRing.CommutativeRing(function () {
	        return ringLazy(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
	    });
	};
	var euclideanRingLazy = function euclideanRingLazy(dictEuclideanRing) {
	    return new Data_EuclideanRing.EuclideanRing(function () {
	        return commutativeRingLazy(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
	    }, function ($51) {
	        return Data_EuclideanRing.degree(dictEuclideanRing)($foreign.force($51));
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    });
	};
	var fieldLazy = function fieldLazy(dictField) {
	    return new Data_Field.Field(function () {
	        return euclideanRingLazy(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
	    });
	};
	var boundedLazy = function boundedLazy(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordLazy(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, $foreign.defer(function (v) {
	        return Data_Bounded.bottom(dictBounded);
	    }), $foreign.defer(function (v) {
	        return Data_Bounded.top(dictBounded);
	    }));
	};
	var applyLazy = new Control_Apply.Apply(function () {
	    return functorLazy;
	}, function (f) {
	    return function (x) {
	        return $foreign.defer(function (v) {
	            return $foreign.force(f)($foreign.force(x));
	        });
	    };
	});
	var bindLazy = new Control_Bind.Bind(function () {
	    return applyLazy;
	}, function (l) {
	    return function (f) {
	        return $foreign.defer(function (v) {
	            return Data_Function.apply($foreign.force)(f($foreign.force(l)));
	        });
	    };
	});
	var heytingAlgebraLazy = function heytingAlgebraLazy(dictHeytingAlgebra) {
	    return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
	        };
	    }, function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
	        };
	    }, $foreign.defer(function (v) {
	        return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
	    }), function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
	        };
	    }, function (a) {
	        return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
	    }, $foreign.defer(function (v) {
	        return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
	    }));
	};
	var booleanAlgebraLazy = function booleanAlgebraLazy(dictBooleanAlgebra) {
	    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	        return heytingAlgebraLazy(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	    });
	};
	var applicativeLazy = new Control_Applicative.Applicative(function () {
	    return applyLazy;
	}, function (a) {
	    return $foreign.defer(function (v) {
	        return a;
	    });
	});
	var monadLazy = new Control_Monad.Monad(function () {
	    return applicativeLazy;
	}, function () {
	    return bindLazy;
	});
	module.exports = {
	    semiringLazy: semiringLazy,
	    ringLazy: ringLazy,
	    commutativeRingLazy: commutativeRingLazy,
	    euclideanRingLazy: euclideanRingLazy,
	    fieldLazy: fieldLazy,
	    eqLazy: eqLazy,
	    ordLazy: ordLazy,
	    boundedLazy: boundedLazy,
	    semigroupLazy: semigroupLazy,
	    monoidLazy: monoidLazy,
	    heytingAlgebraLazy: heytingAlgebraLazy,
	    booleanAlgebraLazy: booleanAlgebraLazy,
	    functorLazy: functorLazy,
	    applyLazy: applyLazy,
	    applicativeLazy: applicativeLazy,
	    bindLazy: bindLazy,
	    monadLazy: monadLazy,
	    extendLazy: extendLazy,
	    comonadLazy: comonadLazy,
	    showLazy: showLazy,
	    lazyLazy: lazyLazy,
	    defer: $foreign.defer,
	    force: $foreign.force
	};

/***/ },
/* 138 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Data.Lazy

	exports.defer = function () {

	  function Defer(thunk) {
	    if (this instanceof Defer) {
	      this.thunk = thunk;
	      return this;
	    } else {
	      return new Defer(thunk);
	    }
	  }

	  Defer.prototype.force = function () {
	    var value = this.thunk();
	    delete this.thunk;
	    this.force = function () {
	      return value;
	    };
	    return value;
	  };

	  return Defer;
	}();

	exports.force = function (l) {
	  return l.force();
	};

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Foldable = __webpack_require__(70);
	var Data_List = __webpack_require__(119);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var Partial_Unsafe = __webpack_require__(91);
	var Data_Eq = __webpack_require__(28);
	var Data_Show = __webpack_require__(15);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Ord = __webpack_require__(26);
	var Data_Functor = __webpack_require__(8);
	var Control_Apply = __webpack_require__(6);
	var Control_Applicative = __webpack_require__(5);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Ordering = __webpack_require__(33);
	var Data_Function = __webpack_require__(10);
	var Data_Semiring = __webpack_require__(38);
	var Leaf = function () {
	    function Leaf() {};
	    Leaf.value = new Leaf();
	    return Leaf;
	}();
	var Two = function () {
	    function Two(value0, value1, value2, value3) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	    };
	    Two.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return new Two(value0, value1, value2, value3);
	                };
	            };
	        };
	    };
	    return Two;
	}();
	var Three = function () {
	    function Three(value0, value1, value2, value3, value4, value5, value6) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	        this.value6 = value6;
	    };
	    Three.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return function (value6) {
	                                return new Three(value0, value1, value2, value3, value4, value5, value6);
	                            };
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return Three;
	}();
	var TwoLeft = function () {
	    function TwoLeft(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    TwoLeft.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new TwoLeft(value0, value1, value2);
	            };
	        };
	    };
	    return TwoLeft;
	}();
	var TwoRight = function () {
	    function TwoRight(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    TwoRight.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new TwoRight(value0, value1, value2);
	            };
	        };
	    };
	    return TwoRight;
	}();
	var ThreeLeft = function () {
	    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	    };
	    ThreeLeft.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return ThreeLeft;
	}();
	var ThreeMiddle = function () {
	    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	    };
	    ThreeMiddle.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return ThreeMiddle;
	}();
	var ThreeRight = function () {
	    function ThreeRight(value0, value1, value2, value3, value4, value5) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	    };
	    ThreeRight.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return ThreeRight;
	}();
	var KickUp = function () {
	    function KickUp(value0, value1, value2, value3) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	    };
	    KickUp.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return new KickUp(value0, value1, value2, value3);
	                };
	            };
	        };
	    };
	    return KickUp;
	}();
	var values = function values(v) {
	    if (v instanceof Leaf) {
	        return Data_List.Nil.value;
	    };
	    if (v instanceof Two) {
	        return Data_Semigroup.append(Data_List.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value2))(values(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Semigroup.append(Data_List.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value2))(Data_Semigroup.append(Data_List.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value5))(values(v.value6)))));
	    };
	    throw new Error("Failed pattern match at Data.Map line 390, column 1 - line 390, column 18: " + [v.constructor.name]);
	};
	var toList = function toList(v) {
	    if (v instanceof Leaf) {
	        return Data_List.Nil.value;
	    };
	    if (v instanceof Two) {
	        return Data_Semigroup.append(Data_List.semigroupList)(toList(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(v.value1, v.value2)))(toList(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Semigroup.append(Data_List.semigroupList)(toList(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(v.value1, v.value2)))(Data_Semigroup.append(Data_List.semigroupList)(toList(v.value3))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(v.value4, v.value5)))(toList(v.value6)))));
	    };
	    throw new Error("Failed pattern match at Data.Map line 369, column 1 - line 369, column 18: " + [v.constructor.name]);
	};
	var size = function size($592) {
	    return Data_List.length(values($592));
	};
	var singleton = function singleton(k) {
	    return function (v) {
	        return new Two(Leaf.value, k, v, Leaf.value);
	    };
	};
	var showTree = function showTree(dictShow) {
	    return function (dictShow1) {
	        return function (v) {
	            if (v instanceof Leaf) {
	                return "Leaf";
	            };
	            if (v instanceof Two) {
	                return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
	            };
	            if (v instanceof Three) {
	                return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
	            };
	            throw new Error("Failed pattern match at Data.Map line 85, column 1 - line 86, column 1: " + [v.constructor.name]);
	        };
	    };
	};
	var showMap = function showMap(dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (m) {
	            return "(fromList " + (Data_Show.show(Data_List.showList(Data_Tuple.showTuple(dictShow)(dictShow1)))(toList(m)) + ")");
	        });
	    };
	};
	var lookupLE = function lookupLE(dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $117 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($117 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value1,
	                        value: v1.value2
	                    });
	                };
	                if ($117 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1,
	                        value: v1.value2
	                    }))(lookupLE(dictOrd)(v)(v1.value3)));
	                };
	                if ($117 instanceof Data_Ordering.LT) {
	                    return lookupLE(dictOrd)(v)(v1.value0);
	                };
	                throw new Error("Failed pattern match at Data.Map line 152, column 37 - line 155, column 24: " + [$117.constructor.name]);
	            };
	            if (v1 instanceof Three) {
	                var $122 = Data_Ord.compare(dictOrd)(v)(v1.value4);
	                if ($122 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value4,
	                        value: v1.value5
	                    });
	                };
	                if ($122 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value4,
	                        value: v1.value5
	                    }))(lookupLE(dictOrd)(v)(v1.value6)));
	                };
	                if ($122 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(lookupLE(dictOrd)(v))(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                };
	                throw new Error("Failed pattern match at Data.Map line 156, column 49 - line 159, column 40: " + [$122.constructor.name]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 151, column 1 - line 151, column 26: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var lookupGE = function lookupGE(dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $132 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($132 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value1,
	                        value: v1.value2
	                    });
	                };
	                if ($132 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1,
	                        value: v1.value2
	                    }))(lookupGE(dictOrd)(v)(v1.value0)));
	                };
	                if ($132 instanceof Data_Ordering.GT) {
	                    return lookupGE(dictOrd)(v)(v1.value3);
	                };
	                throw new Error("Failed pattern match at Data.Map line 176, column 37 - line 179, column 25: " + [$132.constructor.name]);
	            };
	            if (v1 instanceof Three) {
	                var $137 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($137 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value1,
	                        value: v1.value2
	                    });
	                };
	                if ($137 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1,
	                        value: v1.value2
	                    }))(lookupGE(dictOrd)(v)(v1.value0)));
	                };
	                if ($137 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(lookupGE(dictOrd)(v))(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
	                };
	                throw new Error("Failed pattern match at Data.Map line 180, column 49 - line 183, column 41: " + [$137.constructor.name]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 175, column 1 - line 175, column 26: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var lookup = function lookup(dictOrd) {
	    return Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (k) {
	            return function (tree) {
	                if (tree instanceof Leaf) {
	                    return Data_Maybe.Nothing.value;
	                };
	                var comp = Data_Ord.compare(dictOrd);
	                var __unused = function __unused(dictPartial1) {
	                    return function ($dollar35) {
	                        return $dollar35;
	                    };
	                };
	                return __unused(dictPartial)(function () {
	                    if (tree instanceof Two) {
	                        var $147 = comp(k)(tree.value1);
	                        if ($147 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(tree.value2);
	                        };
	                        if ($147 instanceof Data_Ordering.LT) {
	                            return lookup(dictOrd)(k)(tree.value0);
	                        };
	                        return lookup(dictOrd)(k)(tree.value3);
	                    };
	                    if (tree instanceof Three) {
	                        var $152 = comp(k)(tree.value1);
	                        if ($152 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(tree.value2);
	                        };
	                        var $154 = comp(k)(tree.value4);
	                        if ($154 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(tree.value5);
	                        };
	                        if ($152 instanceof Data_Ordering.LT) {
	                            return lookup(dictOrd)(k)(tree.value0);
	                        };
	                        if ($154 instanceof Data_Ordering.GT) {
	                            return lookup(dictOrd)(k)(tree.value6);
	                        };
	                        return lookup(dictOrd)(k)(tree.value3);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 132, column 10 - line 146, column 39: " + [tree.constructor.name]);
	                }());
	            };
	        };
	    });
	};
	var member = function member(dictOrd) {
	    return function (k) {
	        return function (m) {
	            return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
	        };
	    };
	};
	var keys = function keys(v) {
	    if (v instanceof Leaf) {
	        return Data_List.Nil.value;
	    };
	    if (v instanceof Two) {
	        return Data_Semigroup.append(Data_List.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value1))(keys(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Semigroup.append(Data_List.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value1))(Data_Semigroup.append(Data_List.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value4))(keys(v.value6)))));
	    };
	    throw new Error("Failed pattern match at Data.Map line 384, column 1 - line 384, column 16: " + [v.constructor.name]);
	};
	var isEmpty = function isEmpty(v) {
	    if (v instanceof Leaf) {
	        return true;
	    };
	    return false;
	};
	var functorMap = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Leaf) {
	            return Leaf.value;
	        };
	        if (v1 instanceof Two) {
	            return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
	        };
	        if (v1 instanceof Three) {
	            return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
	        };
	        throw new Error("Failed pattern match at Data.Map line 70, column 3 - line 70, column 20: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var fromZipper = function fromZipper(__copy_dictOrd) {
	    return function (__copy_v) {
	        return function (__copy_tree) {
	            var dictOrd = __copy_dictOrd;
	            var v = __copy_v;
	            var tree = __copy_tree;
	            tco: while (true) {
	                if (v instanceof Data_List.Nil) {
	                    return tree;
	                };
	                if (v instanceof Data_List.Cons) {
	                    if (v.value0 instanceof TwoLeft) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof TwoRight) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeLeft) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeMiddle) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeRight) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 223, column 3 - line 228, column 88: " + [v.value0.constructor.name]);
	                };
	                throw new Error("Failed pattern match at Data.Map line 221, column 1 - line 221, column 27: " + [v.constructor.name, tree.constructor.name]);
	            };
	        };
	    };
	};
	var insert = function insert(dictOrd) {
	    var up = function up(__copy_v) {
	        return function (__copy_v1) {
	            var v = __copy_v;
	            var v1 = __copy_v1;
	            tco: while (true) {
	                if (v instanceof Data_List.Nil) {
	                    return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
	                };
	                if (v instanceof Data_List.Cons) {
	                    if (v.value0 instanceof TwoLeft) {
	                        return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
	                    };
	                    if (v.value0 instanceof TwoRight) {
	                        return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
	                    };
	                    if (v.value0 instanceof ThreeLeft) {
	                        var __tco_v = v.value1;
	                        var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeMiddle) {
	                        var __tco_v = v.value1;
	                        var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeRight) {
	                        var __tco_v = v.value1;
	                        var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 259, column 5 - line 264, column 104: " + [v.value0.constructor.name, v1.constructor.name]);
	                };
	                throw new Error("Failed pattern match at Data.Map line 257, column 3 - line 257, column 54: " + [v.constructor.name, v1.constructor.name]);
	            };
	        };
	    };
	    var comp = Data_Ord.compare(dictOrd);
	    var down = function down(__copy_ctx) {
	        return function (__copy_k) {
	            return function (__copy_v) {
	                return function (__copy_v1) {
	                    var ctx = __copy_ctx;
	                    var k = __copy_k;
	                    var v = __copy_v;
	                    var v1 = __copy_v1;
	                    tco: while (true) {
	                        if (v1 instanceof Leaf) {
	                            return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
	                        };
	                        if (v1 instanceof Two) {
	                            var $275 = comp(k)(v1.value1);
	                            if ($275 instanceof Data_Ordering.EQ) {
	                                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
	                            };
	                            if ($275 instanceof Data_Ordering.LT) {
	                                var __tco_ctx = new Data_List.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
	                                var __tco_k = k;
	                                var __tco_v = v;
	                                var __tco_v1 = v1.value0;
	                                ctx = __tco_ctx;
	                                k = __tco_k;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            var __tco_ctx = new Data_List.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
	                            var __tco_k = k;
	                            var __tco_v = v;
	                            var __tco_v1 = v1.value3;
	                            ctx = __tco_ctx;
	                            k = __tco_k;
	                            v = __tco_v;
	                            v1 = __tco_v1;
	                            continue tco;
	                        };
	                        if (v1 instanceof Three) {
	                            var $280 = comp(k)(v1.value1);
	                            if ($280 instanceof Data_Ordering.EQ) {
	                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
	                            };
	                            var $282 = comp(k)(v1.value4);
	                            if ($282 instanceof Data_Ordering.EQ) {
	                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
	                            };
	                            if ($280 instanceof Data_Ordering.LT) {
	                                var __tco_ctx = new Data_List.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
	                                var __tco_k = k;
	                                var __tco_v = v;
	                                var __tco_v1 = v1.value0;
	                                ctx = __tco_ctx;
	                                k = __tco_k;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            if ($280 instanceof Data_Ordering.GT && $282 instanceof Data_Ordering.LT) {
	                                var __tco_ctx = new Data_List.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
	                                var __tco_k = k;
	                                var __tco_v = v;
	                                var __tco_v1 = v1.value3;
	                                ctx = __tco_ctx;
	                                k = __tco_k;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            var __tco_ctx = new Data_List.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
	                            var __tco_k = k;
	                            var __tco_v = v;
	                            var __tco_v1 = v1.value6;
	                            ctx = __tco_ctx;
	                            k = __tco_k;
	                            v = __tco_v;
	                            v1 = __tco_v1;
	                            continue tco;
	                        };
	                        throw new Error("Failed pattern match at Data.Map line 240, column 3 - line 240, column 52: " + [ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name]);
	                    };
	                };
	            };
	        };
	    };
	    return down(Data_List.Nil.value);
	};
	var pop = function pop(dictOrd) {
	    var up = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (ctxs) {
	            return function (tree) {
	                if (ctxs instanceof Data_List.Nil) {
	                    return tree;
	                };
	                if (ctxs instanceof Data_List.Cons) {
	                    var __unused = function __unused(dictPartial1) {
	                        return function ($dollar43) {
	                            return $dollar43;
	                        };
	                    };
	                    return __unused(dictPartial)(function () {
	                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
	                            return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
	                        };
	                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
	                            return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
	                        };
	                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
	                        };
	                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
	                        };
	                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
	                        };
	                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
	                        };
	                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
	                        };
	                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
	                        };
	                        throw new Error("Failed pattern match at Data.Map line 309, column 9 - line 326, column 136: " + [ctxs.value0.constructor.name, tree.constructor.name]);
	                    }());
	                };
	                throw new Error("Failed pattern match at Data.Map line 306, column 5 - line 326, column 136: " + [ctxs.constructor.name]);
	            };
	        };
	    });
	    var removeMaxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (ctx) {
	            return function (m) {
	                var __unused = function __unused(dictPartial1) {
	                    return function ($dollar45) {
	                        return $dollar45;
	                    };
	                };
	                return __unused(dictPartial)(function () {
	                    if (m instanceof Two && m.value0 instanceof Leaf && m.value3 instanceof Leaf) {
	                        return up(ctx)(Leaf.value);
	                    };
	                    if (m instanceof Two) {
	                        return removeMaxNode(new Data_List.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
	                    };
	                    if (m instanceof Three && m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
	                        return up(new Data_List.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
	                    };
	                    if (m instanceof Three) {
	                        return removeMaxNode(new Data_List.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 338, column 5 - line 342, column 107: " + [m.constructor.name]);
	                }());
	            };
	        };
	    });
	    var maxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (m) {
	            var __unused = function __unused(dictPartial1) {
	                return function ($dollar47) {
	                    return $dollar47;
	                };
	            };
	            return __unused(dictPartial)(function () {
	                if (m instanceof Two && m.value3 instanceof Leaf) {
	                    return {
	                        key: m.value1,
	                        value: m.value2
	                    };
	                };
	                if (m instanceof Two) {
	                    return maxNode(m.value3);
	                };
	                if (m instanceof Three && m.value6 instanceof Leaf) {
	                    return {
	                        key: m.value4,
	                        value: m.value5
	                    };
	                };
	                if (m instanceof Three) {
	                    return maxNode(m.value6);
	                };
	                throw new Error("Failed pattern match at Data.Map line 329, column 33 - line 333, column 45: " + [m.constructor.name]);
	            }());
	        };
	    });
	    var comp = Data_Ord.compare(dictOrd);
	    var down = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (ctx) {
	            return function (k) {
	                return function (m) {
	                    if (m instanceof Leaf) {
	                        return Data_Maybe.Nothing.value;
	                    };
	                    if (m instanceof Two) {
	                        var $493 = comp(k)(m.value1);
	                        if (m.value3 instanceof Leaf && $493 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
	                        };
	                        if ($493 instanceof Data_Ordering.EQ) {
	                            var max = maxNode(m.value0);
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
	                        };
	                        if ($493 instanceof Data_Ordering.LT) {
	                            return down(new Data_List.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx))(k)(m.value0);
	                        };
	                        return down(new Data_List.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(k)(m.value3);
	                    };
	                    if (m instanceof Three) {
	                        var leaves = function () {
	                            if (m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
	                                return true;
	                            };
	                            return false;
	                        }();
	                        var $502 = comp(k)(m.value1);
	                        var $503 = comp(k)(m.value4);
	                        if (leaves && $502 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
	                        };
	                        if (leaves && $503 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
	                        };
	                        if ($502 instanceof Data_Ordering.EQ) {
	                            var max = maxNode(m.value0);
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
	                        };
	                        if ($503 instanceof Data_Ordering.EQ) {
	                            var max = maxNode(m.value3);
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
	                        };
	                        if ($502 instanceof Data_Ordering.LT) {
	                            return down(new Data_List.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx))(k)(m.value0);
	                        };
	                        if ($502 instanceof Data_Ordering.GT && $503 instanceof Data_Ordering.LT) {
	                            return down(new Data_List.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx))(k)(m.value3);
	                        };
	                        return down(new Data_List.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(k)(m.value6);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 279, column 36 - line 302, column 82: " + [m.constructor.name]);
	                };
	            };
	        };
	    });
	    return down(Data_List.Nil.value);
	};
	var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (m) {
	            return Data_Foldable.foldMap(Data_List.foldableList)(dictMonoid)(f)(values(m));
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (m) {
	            return Data_Foldable.foldl(Data_List.foldableList)(f)(z)(values(m));
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (m) {
	            return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
	        };
	    };
	});
	var findMin = function findMin(v) {
	    if (v instanceof Leaf) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Two) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value1,
	            value: v.value2
	        }))(findMin(v.value0)));
	    };
	    if (v instanceof Three) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value1,
	            value: v.value2
	        }))(findMin(v.value0)));
	    };
	    throw new Error("Failed pattern match at Data.Map line 205, column 1 - line 205, column 23: " + [v.constructor.name]);
	};
	var lookupGT = function lookupGT(dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $525 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($525 instanceof Data_Ordering.EQ) {
	                    return findMin(v1.value3);
	                };
	                if ($525 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1,
	                        value: v1.value2
	                    }))(lookupGT(dictOrd)(v)(v1.value0)));
	                };
	                if ($525 instanceof Data_Ordering.GT) {
	                    return lookupGT(dictOrd)(v)(v1.value3);
	                };
	                throw new Error("Failed pattern match at Data.Map line 188, column 37 - line 191, column 25: " + [$525.constructor.name]);
	            };
	            if (v1 instanceof Three) {
	                var $530 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($530 instanceof Data_Ordering.EQ) {
	                    return Data_Function.apply(findMin)(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
	                };
	                if ($530 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1,
	                        value: v1.value2
	                    }))(lookupGT(dictOrd)(v)(v1.value0)));
	                };
	                if ($530 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(lookupGT(dictOrd)(v))(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
	                };
	                throw new Error("Failed pattern match at Data.Map line 192, column 49 - line 195, column 41: " + [$530.constructor.name]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 187, column 1 - line 187, column 26: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var findMax = function findMax(v) {
	    if (v instanceof Leaf) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Two) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value1,
	            value: v.value2
	        }))(findMax(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value4,
	            value: v.value5
	        }))(findMax(v.value6)));
	    };
	    throw new Error("Failed pattern match at Data.Map line 199, column 1 - line 199, column 23: " + [v.constructor.name]);
	};
	var lookupLT = function lookupLT(dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $552 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($552 instanceof Data_Ordering.EQ) {
	                    return findMax(v1.value0);
	                };
	                if ($552 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1,
	                        value: v1.value2
	                    }))(lookupLT(dictOrd)(v)(v1.value3)));
	                };
	                if ($552 instanceof Data_Ordering.LT) {
	                    return lookupLT(dictOrd)(v)(v1.value0);
	                };
	                throw new Error("Failed pattern match at Data.Map line 164, column 37 - line 167, column 24: " + [$552.constructor.name]);
	            };
	            if (v1 instanceof Three) {
	                var $557 = Data_Ord.compare(dictOrd)(v)(v1.value4);
	                if ($557 instanceof Data_Ordering.EQ) {
	                    return Data_Function.apply(findMax)(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                };
	                if ($557 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value4,
	                        value: v1.value5
	                    }))(lookupLT(dictOrd)(v)(v1.value6)));
	                };
	                if ($557 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(lookupLT(dictOrd)(v))(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                };
	                throw new Error("Failed pattern match at Data.Map line 168, column 49 - line 171, column 40: " + [$557.constructor.name]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 163, column 1 - line 163, column 26: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	var eqMap = function eqMap(dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (m1) {
	            return function (m2) {
	                return Data_Eq.eq(Data_List.eqList(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toList(m1))(toList(m2));
	            };
	        });
	    };
	};
	var ordMap = function ordMap(dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqMap(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (m1) {
	            return function (m2) {
	                return Data_Ord.compare(Data_List.ordList(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toList(m1))(toList(m2));
	            };
	        });
	    };
	};
	var empty = Leaf.value;
	var fromFoldable = function fromFoldable(dictOrd) {
	    return function (dictFoldable) {
	        return Data_Foldable.foldl(dictFoldable)(function (m) {
	            return function (v) {
	                return insert(dictOrd)(v.value0)(v.value1)(m);
	            };
	        })(empty);
	    };
	};
	var fromList = function fromList(dictOrd) {
	    return fromFoldable(dictOrd)(Data_List.foldableList);
	};
	var $$delete = function $$delete(dictOrd) {
	    return function (k) {
	        return function (m) {
	            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
	        };
	    };
	};
	var checkValid = function checkValid(tree) {
	    var allHeights = function allHeights(v) {
	        if (v instanceof Leaf) {
	            return Control_Applicative.pure(Data_List.applicativeList)(0);
	        };
	        if (v instanceof Two) {
	            return Data_Functor.map(Data_List.functorList)(function (n) {
	                return n + 1 | 0;
	            })(Data_Semigroup.append(Data_List.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
	        };
	        if (v instanceof Three) {
	            return Data_Functor.map(Data_List.functorList)(function (n) {
	                return n + 1 | 0;
	            })(Data_Semigroup.append(Data_List.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
	        };
	        throw new Error("Failed pattern match at Data.Map line 120, column 3 - line 120, column 30: " + [v.constructor.name]);
	    };
	    return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
	};
	var alter = function alter(dictOrd) {
	    return function (f) {
	        return function (k) {
	            return function (m) {
	                var $580 = f(lookup(dictOrd)(k)(m));
	                if ($580 instanceof Data_Maybe.Nothing) {
	                    return $$delete(dictOrd)(k)(m);
	                };
	                if ($580 instanceof Data_Maybe.Just) {
	                    return insert(dictOrd)(k)($580.value0)(m);
	                };
	                throw new Error("Failed pattern match at Data.Map line 347, column 15 - line 349, column 25: " + [$580.constructor.name]);
	            };
	        };
	    };
	};
	var fromFoldableWith = function fromFoldableWith(dictOrd) {
	    return function (dictFoldable) {
	        return function (f) {
	            var combine = function combine(v) {
	                return function (v1) {
	                    if (v1 instanceof Data_Maybe.Just) {
	                        return Data_Function.apply(Data_Maybe.Just.create)(f(v)(v1.value0));
	                    };
	                    if (v1 instanceof Data_Maybe.Nothing) {
	                        return new Data_Maybe.Just(v);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 364, column 3 - line 364, column 38: " + [v.constructor.name, v1.constructor.name]);
	                };
	            };
	            return Data_Foldable.foldl(dictFoldable)(function (m) {
	                return function (v) {
	                    return alter(dictOrd)(combine(v.value1))(v.value0)(m);
	                };
	            })(empty);
	        };
	    };
	};
	var fromListWith = function fromListWith(dictOrd) {
	    return fromFoldableWith(dictOrd)(Data_List.foldableList);
	};
	var unionWith = function unionWith(dictOrd) {
	    return function (f) {
	        return function (m1) {
	            return function (m2) {
	                var go = function go(m) {
	                    return function (v) {
	                        return alter(dictOrd)(function ($593) {
	                            return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($593));
	                        })(v.value0)(m);
	                    };
	                };
	                return Data_Foldable.foldl(Data_List.foldableList)(go)(m2)(toList(m1));
	            };
	        };
	    };
	};
	var union = function union(dictOrd) {
	    return unionWith(dictOrd)(Data_Function["const"]);
	};
	var semigroupMap = function semigroupMap(dictOrd) {
	    return new Data_Semigroup.Semigroup(union(dictOrd));
	};
	var monoidMap = function monoidMap(dictOrd) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMap(dictOrd);
	    }, empty);
	};
	var traversableMap = function traversableMap(dictOrd) {
	    return new Data_Traversable.Traversable(function () {
	        return foldableMap;
	    }, function () {
	        return functorMap;
	    }, function (dictApplicative) {
	        return Data_Traversable.traverse(traversableMap(dictOrd))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	    }, function (dictApplicative) {
	        return function (f) {
	            return function (ms) {
	                return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
	                    return function (acc) {
	                        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(union(dictOrd))(x))(acc);
	                    };
	                })(Control_Applicative.pure(dictApplicative)(empty))(Data_Functor.map(Data_List.functorList)(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Data_Functor.map(Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
	            };
	        };
	    });
	};
	var unions = function unions(dictOrd) {
	    return function (dictFoldable) {
	        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
	    };
	};
	var update = function update(dictOrd) {
	    return function (f) {
	        return function (k) {
	            return function (m) {
	                return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
	            };
	        };
	    };
	};
	module.exports = {
	    alter: alter,
	    checkValid: checkValid,
	    "delete": $$delete,
	    empty: empty,
	    findMax: findMax,
	    findMin: findMin,
	    fromFoldable: fromFoldable,
	    fromFoldableWith: fromFoldableWith,
	    fromList: fromList,
	    fromListWith: fromListWith,
	    insert: insert,
	    isEmpty: isEmpty,
	    keys: keys,
	    lookup: lookup,
	    lookupGE: lookupGE,
	    lookupGT: lookupGT,
	    lookupLE: lookupLE,
	    lookupLT: lookupLT,
	    member: member,
	    pop: pop,
	    showTree: showTree,
	    singleton: singleton,
	    size: size,
	    toList: toList,
	    union: union,
	    unionWith: unionWith,
	    unions: unions,
	    update: update,
	    values: values,
	    eqMap: eqMap,
	    showMap: showMap,
	    ordMap: ordMap,
	    semigroupMap: semigroupMap,
	    monoidMap: monoidMap,
	    functorMap: functorMap,
	    foldableMap: foldableMap,
	    traversableMap: traversableMap
	};

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Functor_Coproduct = __webpack_require__(132);
	var Data_Injector = __webpack_require__(141);
	var Data_Maybe = __webpack_require__(72);
	var Control_Semigroupoid = __webpack_require__(12);
	var ChildPath = function () {
	    function ChildPath(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    ChildPath.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new ChildPath(value0, value1, value2);
	            };
	        };
	    };
	    return ChildPath;
	}();
	var prjState = function prjState(v) {
	    return Data_Injector.prj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value0(dictChoice)(dictApplicative);
	        };
	    });
	};
	var prjSlot = function prjSlot(v) {
	    return Data_Injector.prj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value2(dictChoice)(dictApplicative);
	        };
	    });
	};
	var prjQuery = function prjQuery(v) {
	    return Data_Injector.prj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value1(dictChoice)(dictApplicative);
	        };
	    });
	};
	var injState = function injState(v) {
	    return Data_Injector.inj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value0(dictChoice)(dictApplicative);
	        };
	    });
	};
	var injSlot = function injSlot(v) {
	    return Data_Injector.inj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value2(dictChoice)(dictApplicative);
	        };
	    });
	};
	var injQuery = function injQuery(v) {
	    return Data_Injector.inj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value1(dictChoice)(dictApplicative);
	        };
	    });
	};
	var cpR = new ChildPath(function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injRE(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injRC(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injRE(dictChoice)(dictApplicative);
	    };
	});
	var cpL = new ChildPath(function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injLE(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injLC(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injLE(dictChoice)(dictApplicative);
	    };
	});
	var cpI = new ChildPath(function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injI(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injI(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injI(dictChoice)(dictApplicative);
	    };
	});
	var compose = function compose(v) {
	    return function (v1) {
	        return new ChildPath(function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($76) {
	                    return v.value0(dictChoice)(dictApplicative)(v1.value0(dictChoice)(dictApplicative)($76));
	                };
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($77) {
	                    return v.value1(dictChoice)(dictApplicative)(v1.value1(dictChoice)(dictApplicative)($77));
	                };
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($78) {
	                    return v.value2(dictChoice)(dictApplicative)(v1.value2(dictChoice)(dictApplicative)($78));
	                };
	            };
	        });
	    };
	};
	module.exports = {
	    ChildPath: ChildPath,
	    compose: compose,
	    cpI: cpI,
	    cpL: cpL,
	    cpR: cpR,
	    injQuery: injQuery,
	    injSlot: injSlot,
	    injState: injState,
	    prjQuery: prjQuery,
	    prjSlot: prjSlot,
	    prjState: prjState
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Const = __webpack_require__(142);
	var Data_Either = __webpack_require__(58);
	var Data_Functor_Coproduct = __webpack_require__(132);
	var Data_Identity = __webpack_require__(90);
	var Data_Maybe = __webpack_require__(72);
	var Data_Maybe_First = __webpack_require__(74);
	var Data_Profunctor = __webpack_require__(144);
	var Data_Profunctor_Choice_1 = __webpack_require__(145);
	var Data_Profunctor_Choice_1 = __webpack_require__(145);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Applicative = __webpack_require__(5);
	var Data_Functor = __webpack_require__(8);
	var Data_Function = __webpack_require__(10);
	var Control_Category = __webpack_require__(11);
	var Tagged = function Tagged(x) {
	    return x;
	};
	var unTagged = function unTagged(v) {
	    return v;
	};
	var profunctorTagged = new Data_Profunctor.Profunctor(function (v) {
	    return function (f) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var prj = function prj(p) {
	    return function ($25) {
	        return Data_Maybe_First.runFirst(Data_Const.getConst(p(Data_Profunctor_Choice_1.choiceFn)(Data_Const.applicativeConst(Data_Maybe_First.monoidFirst))(function ($26) {
	            return Data_Const.Const(Data_Maybe_First.First(Data_Maybe.Just.create($26)));
	        })($25)));
	    };
	};
	var prism = function prism(f) {
	    return function (g) {
	        return function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($27) {
	                    return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(g)(Data_Either.either(Control_Applicative.pure(dictApplicative))(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(f)))(Data_Profunctor_Choice_1.right(dictChoice)($27));
	                };
	            };
	        };
	    };
	};
	var prism$prime = function prism$prime(f) {
	    return function (g) {
	        return function (dictChoice) {
	            return function (dictApplicative) {
	                return prism(f)(function (s) {
	                    return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(g(s));
	                })(dictChoice)(dictApplicative);
	            };
	        };
	    };
	};
	var injRE = function injRE(dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Either.Right.create)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
	    };
	};
	var injRC = function injRC(dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Functor_Coproduct.right)(Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
	    };
	};
	var injLE = function injLE(dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Either.Left.create)(Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)))(dictChoice)(dictApplicative);
	    };
	};
	var injLC = function injLC(dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Functor_Coproduct.left)(Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)))(dictChoice)(dictApplicative);
	    };
	};
	var injI = function injI(dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Control_Category.id(Control_Category.categoryFn))(Data_Maybe.Just.create)(dictChoice)(dictApplicative);
	    };
	};
	var choiceTagged = new Data_Profunctor_Choice_1.Choice(function () {
	    return profunctorTagged;
	}, function (v) {
	    return new Data_Either.Left(v);
	}, function (v) {
	    return new Data_Either.Right(v);
	});
	var inj = function inj(p) {
	    return function ($28) {
	        return Data_Identity.runIdentity(unTagged(p(choiceTagged)(Data_Identity.applicativeIdentity)(Tagged(Data_Identity.Identity($28)))));
	    };
	};
	module.exports = {
	    inj: inj,
	    injI: injI,
	    injLC: injLC,
	    injLE: injLE,
	    injRC: injRC,
	    injRE: injRE,
	    prj: prj
	};

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Bounded = __webpack_require__(24);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Eq = __webpack_require__(28);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Field = __webpack_require__(43);
	var Data_Foldable = __webpack_require__(70);
	var Data_Functor = __webpack_require__(8);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Ring = __webpack_require__(36);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(15);
	var Data_Traversable = __webpack_require__(78);
	var Const = function Const(x) {
	    return x;
	};
	var showConst = function showConst(dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConst = function semiringConst(dictSemiring) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    }, Data_Semiring.one(dictSemiring), Data_Semiring.zero(dictSemiring));
	};
	var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var semigroupConst = function semigroupConst(dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var ringConst = function ringConst(dictRing) {
	    return new Data_Ring.Ring(function () {
	        return semiringConst(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ring.sub(dictRing)(v)(v1);
	        };
	    });
	};
	var monoidConst = function monoidConst(dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupConst(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var heytingAlgebraConst = function heytingAlgebraConst(dictHeytingAlgebra) {
	    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return Data_HeytingAlgebra.not(dictHeytingAlgebra)(v);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var getConst = function getConst(v) {
	    return v;
	};
	var functorConst = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
	var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return Data_Monoid.mempty(dictMonoid);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            return z;
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            return z;
	        };
	    };
	});
	var traversableConst = new Data_Traversable.Traversable(function () {
	    return foldableConst;
	}, function () {
	    return functorConst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Applicative.pure(dictApplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return Control_Applicative.pure(dictApplicative)(v1);
	        };
	    };
	});
	var eqConst = function eqConst(dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordConst = function ordConst(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqConst(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var commutativeRingConst = function commutativeRingConst(dictCommutativeRing) {
	    return new Data_CommutativeRing.CommutativeRing(function () {
	        return ringConst(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
	    });
	};
	var euclideanRingConst = function euclideanRingConst(dictEuclideanRing) {
	    return new Data_EuclideanRing.EuclideanRing(function () {
	        return commutativeRingConst(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
	    }, function (v) {
	        return Data_EuclideanRing.degree(dictEuclideanRing)(v);
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.div(dictEuclideanRing)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.mod(dictEuclideanRing)(v)(v1);
	        };
	    });
	};
	var fieldConst = function fieldConst(dictField) {
	    return new Data_Field.Field(function () {
	        return euclideanRingConst(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
	    });
	};
	var boundedConst = function boundedConst(dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordConst(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var booleanAlgebraConst = function booleanAlgebraConst(dictBooleanAlgebra) {
	    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	        return heytingAlgebraConst(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	    });
	};
	var applyConst = function applyConst(dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorConst;
	    }, function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var bindConst = function bindConst(dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyConst(dictSemigroup);
	    }, function (v) {
	        return function (v1) {
	            return v;
	        };
	    });
	};
	var applicativeConst = function applicativeConst(dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyConst(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, function (v) {
	        return Data_Monoid.mempty(dictMonoid);
	    });
	};
	module.exports = {
	    Const: Const,
	    getConst: getConst,
	    eqConst: eqConst,
	    ordConst: ordConst,
	    boundedConst: boundedConst,
	    showConst: showConst,
	    semigroupoidConst: semigroupoidConst,
	    semigroupConst: semigroupConst,
	    monoidConst: monoidConst,
	    semiringConst: semiringConst,
	    ringConst: ringConst,
	    euclideanRingConst: euclideanRingConst,
	    commutativeRingConst: commutativeRingConst,
	    fieldConst: fieldConst,
	    heytingAlgebraConst: heytingAlgebraConst,
	    booleanAlgebraConst: booleanAlgebraConst,
	    functorConst: functorConst,
	    invariantConst: invariantConst,
	    contravariantConst: contravariantConst,
	    applyConst: applyConst,
	    bindConst: bindConst,
	    applicativeConst: applicativeConst,
	    foldableConst: foldableConst,
	    traversableConst: traversableConst
	};

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Functor = __webpack_require__(8);
	var Data_Void = __webpack_require__(30);
	var Contravariant = function Contravariant(cmap) {
	    this.cmap = cmap;
	};
	var cmap = function cmap(dict) {
	    return dict.cmap;
	};
	var cmapFlipped = function cmapFlipped(dictContravariant) {
	    return function (x) {
	        return function (f) {
	            return cmap(dictContravariant)(f)(x);
	        };
	    };
	};
	var coerce = function coerce(dictContravariant) {
	    return function (dictFunctor) {
	        return function (a) {
	            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
	        };
	    };
	};
	module.exports = {
	    Contravariant: Contravariant,
	    cmap: cmap,
	    cmapFlipped: cmapFlipped,
	    coerce: coerce
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Profunctor = function Profunctor(dimap) {
	    this.dimap = dimap;
	};
	var profunctorFn = new Profunctor(function (a2b) {
	    return function (c2d) {
	        return function (b2c) {
	            return function ($4) {
	                return c2d(b2c(a2b($4)));
	            };
	        };
	    };
	});
	var dimap = function dimap(dict) {
	    return dict.dimap;
	};
	var lmap = function lmap(dictProfunctor) {
	    return function (a2b) {
	        return dimap(dictProfunctor)(a2b)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var rmap = function rmap(dictProfunctor) {
	    return function (b2c) {
	        return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
	    };
	};
	var arr = function arr(dictCategory) {
	    return function (dictProfunctor) {
	        return function (f) {
	            return rmap(dictProfunctor)(f)(Control_Category.id(dictCategory));
	        };
	    };
	};
	module.exports = {
	    Profunctor: Profunctor,
	    arr: arr,
	    dimap: dimap,
	    lmap: lmap,
	    rmap: rmap,
	    profunctorFn: profunctorFn
	};

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Profunctor = __webpack_require__(144);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Choice = function Choice(__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
	    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
	    this.left = left;
	    this.right = right;
	};
	var right = function right(dict) {
	    return dict.right;
	};
	var left = function left(dict) {
	    return dict.left;
	};
	var splitChoice = function splitChoice(dictCategory) {
	    return function (dictChoice) {
	        return function (l) {
	            return function (r) {
	                return Control_Semigroupoid.composeFlipped(dictCategory["__superclass_Control.Semigroupoid.Semigroupoid_0"]())(left(dictChoice)(l))(right(dictChoice)(r));
	            };
	        };
	    };
	};
	var fanin = function fanin(dictCategory) {
	    return function (dictChoice) {
	        return function (l) {
	            return function (r) {
	                var join = Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(dictCategory));
	                return Control_Semigroupoid.composeFlipped(dictCategory["__superclass_Control.Semigroupoid.Semigroupoid_0"]())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
	            };
	        };
	    };
	};
	var choiceFn = new Choice(function () {
	    return Data_Profunctor.profunctorFn;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Either.Left) {
	            return Data_Function.apply(Data_Either.Left.create)(v(v1.value0));
	        };
	        if (v1 instanceof Data_Either.Right) {
	            return new Data_Either.Right(v1.value0);
	        };
	        throw new Error("Failed pattern match at Data.Profunctor.Choice line 33, column 3 - line 33, column 36: " + [v.constructor.name, v1.constructor.name]);
	    };
	}, Data_Functor.map(Data_Either.functorEither));
	module.exports = {
	    Choice: Choice,
	    fanin: fanin,
	    left: left,
	    right: right,
	    splitChoice: splitChoice,
	    choiceFn: choiceFn
	};

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Free = __webpack_require__(116);
	var Halogen_Query_HalogenF = __webpack_require__(147);
	var Unsafe_Coerce = __webpack_require__(112);
	var Control_Semigroupoid = __webpack_require__(12);
	var PostRender = function () {
	    function PostRender(value0) {
	        this.value0 = value0;
	    };
	    PostRender.create = function (value0) {
	        return new PostRender(value0);
	    };
	    return PostRender;
	}();
	var Finalized = function () {
	    function Finalized(value0) {
	        this.value0 = value0;
	    };
	    Finalized.create = function (value0) {
	        return new Finalized(value0);
	    };
	    return Finalized;
	}();
	var FinalizedF = function () {
	    function FinalizedF(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    FinalizedF.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new FinalizedF(value0, value1, value2);
	            };
	        };
	    };
	    return FinalizedF;
	}();
	var runFinalized = function runFinalized(k) {
	    return function (f) {
	        var $6 = Unsafe_Coerce.unsafeCoerce(f);
	        return k($6.value0)($6.value1)($6.value2);
	    };
	};
	var lmapHook = function lmapHook(v) {
	    return function (v1) {
	        if (v1 instanceof PostRender) {
	            return new PostRender(v(v1.value0));
	        };
	        if (v1 instanceof Finalized) {
	            return new Finalized(v1.value0);
	        };
	        throw new Error("Failed pattern match at Halogen.Component.Hook line 55, column 1 - line 55, column 45: " + [v.constructor.name, v1.constructor.name]);
	    };
	};
	var finalized = function finalized(e) {
	    return function (s) {
	        return function (i) {
	            return Unsafe_Coerce.unsafeCoerce(new FinalizedF(e, s, i));
	        };
	    };
	};
	var mapFinalized = function mapFinalized(dictFunctor) {
	    return function (g) {
	        return runFinalized(function (e) {
	            return function (s) {
	                return function (i) {
	                    return finalized(function ($18) {
	                        return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.hoistHalogenF(dictFunctor)(g))(e($18));
	                    })(s)(i);
	                };
	            };
	        });
	    };
	};
	var rmapHook = function rmapHook(dictFunctor) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Finalized) {
	                return new Finalized(mapFinalized(dictFunctor)(v)(v1.value0));
	            };
	            if (v1 instanceof PostRender) {
	                return new PostRender(v1.value0);
	            };
	            throw new Error("Failed pattern match at Halogen.Component.Hook line 64, column 1 - line 64, column 56: " + [v.constructor.name, v1.constructor.name]);
	        };
	    };
	};
	module.exports = {
	    PostRender: PostRender,
	    Finalized: Finalized,
	    finalized: finalized,
	    lmapHook: lmapHook,
	    mapFinalized: mapFinalized,
	    rmapHook: rmapHook,
	    runFinalized: runFinalized
	};

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Monad_Aff_Free = __webpack_require__(148);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Plus = __webpack_require__(51);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Maybe = __webpack_require__(72);
	var Halogen_Query_EventSource = __webpack_require__(154);
	var Halogen_Query_StateF = __webpack_require__(160);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Coroutine_Stalling = __webpack_require__(159);
	var Pending = function () {
	    function Pending() {};
	    Pending.value = new Pending();
	    return Pending;
	}();
	var Deferred = function () {
	    function Deferred() {};
	    Deferred.value = new Deferred();
	    return Deferred;
	}();
	var StateHF = function () {
	    function StateHF(value0) {
	        this.value0 = value0;
	    };
	    StateHF.create = function (value0) {
	        return new StateHF(value0);
	    };
	    return StateHF;
	}();
	var SubscribeHF = function () {
	    function SubscribeHF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SubscribeHF.create = function (value0) {
	        return function (value1) {
	            return new SubscribeHF(value0, value1);
	        };
	    };
	    return SubscribeHF;
	}();
	var QueryHF = function () {
	    function QueryHF(value0) {
	        this.value0 = value0;
	    };
	    QueryHF.create = function (value0) {
	        return new QueryHF(value0);
	    };
	    return QueryHF;
	}();
	var RenderHF = function () {
	    function RenderHF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    RenderHF.create = function (value0) {
	        return function (value1) {
	            return new RenderHF(value0, value1);
	        };
	    };
	    return RenderHF;
	}();
	var RenderPendingHF = function () {
	    function RenderPendingHF(value0) {
	        this.value0 = value0;
	    };
	    RenderPendingHF.create = function (value0) {
	        return new RenderPendingHF(value0);
	    };
	    return RenderPendingHF;
	}();
	var HaltHF = function () {
	    function HaltHF(value0) {
	        this.value0 = value0;
	    };
	    HaltHF.create = function (value0) {
	        return new HaltHF(value0);
	    };
	    return HaltHF;
	}();
	var transformHF = function transformHF(dictFunctor) {
	    return function (sigma) {
	        return function (phi) {
	            return function (gamma) {
	                return function (h) {
	                    if (h instanceof StateHF) {
	                        return new StateHF(sigma(h.value0));
	                    };
	                    if (h instanceof SubscribeHF) {
	                        return new SubscribeHF(Control_Monad_Free_Trans.bimapFreeT(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine_Stalling.bifunctorStallF)(phi))(gamma)(Halogen_Query_EventSource.runEventSource(h.value0)), h.value1);
	                    };
	                    if (h instanceof QueryHF) {
	                        return new QueryHF(gamma(h.value0));
	                    };
	                    if (h instanceof RenderHF) {
	                        return new RenderHF(h.value0, h.value1);
	                    };
	                    if (h instanceof RenderPendingHF) {
	                        return new RenderPendingHF(h.value0);
	                    };
	                    if (h instanceof HaltHF) {
	                        return new HaltHF(h.value0);
	                    };
	                    throw new Error("Failed pattern match at Halogen.Query.HalogenF line 65, column 3 - line 71, column 29: " + [h.constructor.name]);
	                };
	            };
	        };
	    };
	};
	var hoistHalogenF = function hoistHalogenF(dictFunctor) {
	    return function (eta) {
	        return function (h) {
	            if (h instanceof StateHF) {
	                return new StateHF(h.value0);
	            };
	            if (h instanceof SubscribeHF) {
	                return new SubscribeHF(Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(eta)(Halogen_Query_EventSource.runEventSource(h.value0)), h.value1);
	            };
	            if (h instanceof QueryHF) {
	                return new QueryHF(eta(h.value0));
	            };
	            if (h instanceof RenderHF) {
	                return new RenderHF(h.value0, h.value1);
	            };
	            if (h instanceof RenderPendingHF) {
	                return new RenderPendingHF(h.value0);
	            };
	            if (h instanceof HaltHF) {
	                return new HaltHF(h.value0);
	            };
	            throw new Error("Failed pattern match at Halogen.Query.HalogenF line 81, column 3 - line 87, column 26: " + [h.constructor.name]);
	        };
	    };
	};
	var functorHalogenF = function functorHalogenF(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (h) {
	            if (h instanceof StateHF) {
	                return new StateHF(Data_Functor.map(Halogen_Query_StateF.functorStateF)(f)(h.value0));
	            };
	            if (h instanceof SubscribeHF) {
	                return new SubscribeHF(h.value0, f(h.value1));
	            };
	            if (h instanceof QueryHF) {
	                return new QueryHF(Data_Functor.map(dictFunctor)(f)(h.value0));
	            };
	            if (h instanceof RenderHF) {
	                return new RenderHF(h.value0, f(h.value1));
	            };
	            if (h instanceof RenderPendingHF) {
	                return new RenderPendingHF(Data_Functor.map(Data_Functor.functorFn)(f)(h.value0));
	            };
	            if (h instanceof HaltHF) {
	                return new HaltHF(h.value0);
	            };
	            throw new Error("Failed pattern match at Halogen.Query.HalogenF line 37, column 5 - line 43, column 31: " + [h.constructor.name]);
	        };
	    });
	};
	var altHalogenF = function altHalogenF(dictFunctor) {
	    return new Control_Alt.Alt(function () {
	        return functorHalogenF(dictFunctor);
	    }, function (v) {
	        return function (v1) {
	            if (v instanceof HaltHF) {
	                return v1;
	            };
	            return v;
	        };
	    });
	};
	var plusHalogenF = function plusHalogenF(dictFunctor) {
	    return new Control_Plus.Plus(function () {
	        return altHalogenF(dictFunctor);
	    }, new HaltHF("`empty` was used"));
	};
	var affableHalogenF = function affableHalogenF(dictAffable) {
	    return new Control_Monad_Aff_Free.Affable(function ($38) {
	        return QueryHF.create(Control_Monad_Aff_Free.fromAff(dictAffable)($38));
	    });
	};
	module.exports = {
	    StateHF: StateHF,
	    SubscribeHF: SubscribeHF,
	    QueryHF: QueryHF,
	    RenderHF: RenderHF,
	    RenderPendingHF: RenderPendingHF,
	    HaltHF: HaltHF,
	    Pending: Pending,
	    Deferred: Deferred,
	    hoistHalogenF: hoistHalogenF,
	    transformHF: transformHF,
	    functorHalogenF: functorHalogenF,
	    affableHalogenF: affableHalogenF,
	    altHalogenF: altHalogenF,
	    plusHalogenF: plusHalogenF
	};

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Cont_Trans = __webpack_require__(97);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Except_Trans = __webpack_require__(105);
	var Control_Monad_Free = __webpack_require__(116);
	var Control_Monad_List_Trans = __webpack_require__(149);
	var Control_Monad_Maybe_Trans = __webpack_require__(150);
	var Control_Monad_Reader_Trans = __webpack_require__(108);
	var Control_Monad_RWS_Trans = __webpack_require__(151);
	var Control_Monad_State_Trans = __webpack_require__(152);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Trans = __webpack_require__(153);
	var Data_Monoid = __webpack_require__(61);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Affable = function Affable(fromAff) {
	    this.fromAff = fromAff;
	};
	var fromAff = function fromAff(dict) {
	    return dict.fromAff;
	};
	var fromEff = function fromEff(dictAffable) {
	    return function (eff) {
	        return fromAff(dictAffable)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(eff));
	    };
	};
	var monadAffContT = function monadAffContT(dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($20) {
	            return Control_Monad_Trans.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonad)(fromAff(dictAffable)($20));
	        });
	    };
	};
	var monadAffExceptT = function monadAffExceptT(dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($21) {
	            return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonad)(fromAff(dictAffable)($21));
	        });
	    };
	};
	var monadAffListT = function monadAffListT(dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($22) {
	            return Control_Monad_Trans.lift(Control_Monad_List_Trans.monadTransListT)(dictMonad)(fromAff(dictAffable)($22));
	        });
	    };
	};
	var monadAffMaybe = function monadAffMaybe(dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($23) {
	            return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonad)(fromAff(dictAffable)($23));
	        });
	    };
	};
	var monadAffRWS = function monadAffRWS(dictAffable) {
	    return function (dictMonad) {
	        return function (dictMonoid) {
	            return new Affable(function ($24) {
	                return Control_Monad_Trans.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonad)(fromAff(dictAffable)($24));
	            });
	        };
	    };
	};
	var monadAffReader = function monadAffReader(dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($25) {
	            return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonad)(fromAff(dictAffable)($25));
	        });
	    };
	};
	var monadAffState = function monadAffState(dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($26) {
	            return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad)(fromAff(dictAffable)($26));
	        });
	    };
	};
	var monadAffWriter = function monadAffWriter(dictAffable) {
	    return function (dictMonad) {
	        return function (dictMonoid) {
	            return new Affable(function ($27) {
	                return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonad)(fromAff(dictAffable)($27));
	            });
	        };
	    };
	};
	var affableFree = function affableFree(dictAffable) {
	    return new Affable(function ($28) {
	        return Control_Monad_Free.liftF(fromAff(dictAffable)($28));
	    });
	};
	var affableAff = new Affable(Control_Category.id(Control_Category.categoryFn));
	module.exports = {
	    Affable: Affable,
	    fromAff: fromAff,
	    fromEff: fromEff,
	    affableAff: affableAff,
	    affableFree: affableFree,
	    monadAffContT: monadAffContT,
	    monadAffExceptT: monadAffExceptT,
	    monadAffListT: monadAffListT,
	    monadAffMaybe: monadAffMaybe,
	    monadAffReader: monadAffReader,
	    monadAffRWS: monadAffRWS,
	    monadAffState: monadAffState,
	    monadAffWriter: monadAffWriter
	};

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Lazy = __webpack_require__(137);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_Tuple = __webpack_require__(100);
	var Data_Unfoldable = __webpack_require__(124);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Functor = __webpack_require__(8);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad = __webpack_require__(19);
	var Control_Bind = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Function = __webpack_require__(10);
	var Data_Ring = __webpack_require__(36);
	var Control_Category = __webpack_require__(11);
	var Yield = function () {
	    function Yield(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Yield.create = function (value0) {
	        return function (value1) {
	            return new Yield(value0, value1);
	        };
	    };
	    return Yield;
	}();
	var Skip = function () {
	    function Skip(value0) {
	        this.value0 = value0;
	    };
	    Skip.create = function (value0) {
	        return new Skip(value0);
	    };
	    return Skip;
	}();
	var Done = function () {
	    function Done() {};
	    Done.value = new Done();
	    return Done;
	}();
	var ListT = function () {
	    function ListT(value0) {
	        this.value0 = value0;
	    };
	    ListT.create = function (value0) {
	        return new ListT(value0);
	    };
	    return ListT;
	}();
	var wrapLazy = function wrapLazy(dictApplicative) {
	    return function (v) {
	        return Data_Function.apply(ListT.create)(Control_Applicative.pure(dictApplicative)(new Skip(v)));
	    };
	};
	var wrapEffect = function wrapEffect(dictFunctor) {
	    return function (v) {
	        return Data_Function.apply(ListT.create)(Data_Functor.map(dictFunctor)(function ($167) {
	            return Skip.create(Data_Lazy.defer(Data_Function["const"]($167)));
	        })(v));
	    };
	};
	var unfold = function unfold(dictMonad) {
	    return function (f) {
	        return function (z) {
	            var g = function g(v) {
	                if (v instanceof Data_Maybe.Just) {
	                    return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
	                        return unfold(dictMonad)(f)(v.value0.value0);
	                    }));
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 119, column 3 - line 119, column 58: " + [v.constructor.name]);
	            };
	            return Data_Function.apply(ListT.create)(Data_Functor.map(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(g)(f(z)));
	        };
	    };
	};
	var uncons = function uncons(dictMonad) {
	    return function (v) {
	        var g = function g(v1) {
	            if (v1 instanceof Yield) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
	            };
	            if (v1 instanceof Skip) {
	                return uncons(dictMonad)(Data_Lazy.force(v1.value0));
	            };
	            if (v1 instanceof Done) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value);
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 184, column 3 - line 184, column 50: " + [v1.constructor.name]);
	        };
	        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v.value0)(g);
	    };
	};
	var tail = function tail(dictMonad) {
	    return function (l) {
	        return Data_Functor.map(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
	    };
	};
	var stepMap = function stepMap(dictFunctor) {
	    return function (f) {
	        return function (v) {
	            return Data_Function.apply(ListT.create)(Data_Functor.map(dictFunctor)(f)(v.value0));
	        };
	    };
	};
	var takeWhile = function takeWhile(dictApplicative) {
	    return function (f) {
	        var g = function g(v) {
	            if (v instanceof Yield) {
	                var $90 = f(v.value0);
	                if ($90) {
	                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
	                };
	                if (!$90) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 143, column 19 - line 143, column 68: " + [$90.constructor.name]);
	            };
	            if (v instanceof Skip) {
	                return Data_Function.apply(Skip.create)(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 143, column 3 - line 143, column 68: " + [v.constructor.name]);
	        };
	        return stepMap(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(g);
	    };
	};
	var scanl = function scanl(dictMonad) {
	    return function (f) {
	        return function (b) {
	            return function (l) {
	                var g = function g(v) {
	                    var h = function h(v1) {
	                        if (v1 instanceof Yield) {
	                            var b$prime$prime = f(b)(v1.value0);
	                            return Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), b$prime$prime));
	                        };
	                        if (v1 instanceof Skip) {
	                            return Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
	                        };
	                        if (v1 instanceof Done) {
	                            return Data_Maybe.Nothing.value;
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.List.Trans line 218, column 5 - line 218, column 78: " + [v1.constructor.name]);
	                    };
	                    return Data_Functor.map(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(h)(v.value1.value0);
	                };
	                return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
	            };
	        };
	    };
	};
	var runListT = function runListT(v) {
	    return v.value0;
	};
	var prepend$prime = function prepend$prime(dictApplicative) {
	    return function (h) {
	        return function (t) {
	            return Data_Function.apply(ListT.create)(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
	        };
	    };
	};
	var prepend = function prepend(dictApplicative) {
	    return function (h) {
	        return function (t) {
	            return prepend$prime(dictApplicative)(h)(Data_Function.apply(Data_Lazy.defer)(Data_Function["const"](t)));
	        };
	    };
	};
	var nil = function nil(dictApplicative) {
	    return Data_Function.apply(ListT.create)(Control_Applicative.pure(dictApplicative)(Done.value));
	};
	var singleton = function singleton(dictApplicative) {
	    return function (a) {
	        return prepend(dictApplicative)(a)(nil(dictApplicative));
	    };
	};
	var take = function take(dictApplicative) {
	    return function (v) {
	        return function (fa) {
	            if (v === 0) {
	                return nil(dictApplicative);
	            };
	            var f = function f(v1) {
	                if (v1 instanceof Yield) {
	                    return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1))(v1.value1));
	                };
	                if (v1 instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
	                };
	                if (v1 instanceof Done) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 136, column 3 - line 136, column 47: " + [v1.constructor.name]);
	            };
	            return stepMap(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(f)(fa);
	        };
	    };
	};
	var zipWith$prime = function zipWith$prime(dictMonad) {
	    return function (f) {
	        var g = function g(v) {
	            return function (v1) {
	                if (v1 instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	                };
	                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
	                    return Data_Functor.map(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(prepend$prime(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(Data_Lazy.defer(function (v2) {
	                        return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
	                    })))(f(v.value0.value0)(v1.value0.value0));
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 225, column 3 - line 228, column 12: " + [v.constructor.name, v1.constructor.name]);
	            };
	        };
	        var loop = function loop(fa) {
	            return function (fb) {
	                return wrapEffect(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(fa))(function (v) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(fb))(function (v1) {
	                        return g(v)(v1);
	                    });
	                }));
	            };
	        };
	        return loop;
	    };
	};
	var zipWith = function zipWith(dictMonad) {
	    return function (f) {
	        var g = function g(a) {
	            return function (b) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(f(a)(b));
	            };
	        };
	        return zipWith$prime(dictMonad)(g);
	    };
	};
	var mapMaybe = function mapMaybe(dictFunctor) {
	    return function (f) {
	        var g = function g(v) {
	            if (v instanceof Yield) {
	                return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
	            };
	            if (v instanceof Skip) {
	                return Data_Function.apply(Skip.create)(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 172, column 3 - line 172, column 72: " + [v.constructor.name]);
	        };
	        return stepMap(dictFunctor)(g);
	    };
	};
	var iterate = function iterate(dictMonad) {
	    return function (f) {
	        return function (a) {
	            var g = function g(a1) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a1), a1)));
	            };
	            return unfold(dictMonad)(g)(a);
	        };
	    };
	};
	var repeat = function repeat(dictMonad) {
	    return iterate(dictMonad)(Control_Category.id(Control_Category.categoryFn));
	};
	var head = function head(dictMonad) {
	    return function (l) {
	        return Data_Functor.map(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
	    };
	};
	var functorListT = function functorListT(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        var g = function g(v) {
	            if (v instanceof Yield) {
	                return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
	            };
	            if (v instanceof Skip) {
	                return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 248, column 5 - line 248, column 48: " + [v.constructor.name]);
	        };
	        return stepMap(dictFunctor)(g);
	    });
	};
	var fromEffect = function fromEffect(dictApplicative) {
	    return function (fa) {
	        return Data_Function.apply(ListT.create)(Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(Yield.create)(Data_Function.apply(Data_Lazy.defer)(function (v) {
	            return nil(dictApplicative);
	        })))(fa));
	    };
	};
	var monadTransListT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return fromEffect(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	});
	var foldl$prime = function foldl$prime(dictMonad) {
	    return function (f) {
	        var loop = function loop(b) {
	            return function (l) {
	                var g = function g(v) {
	                    if (v instanceof Data_Maybe.Nothing) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(b);
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 201, column 5 - line 201, column 35: " + [v.constructor.name]);
	                };
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(l))(g);
	            };
	        };
	        return loop;
	    };
	};
	var foldl = function foldl(dictMonad) {
	    return function (f) {
	        var loop = function loop(b) {
	            return function (l) {
	                var g = function g(v) {
	                    if (v instanceof Data_Maybe.Nothing) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(b);
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        return loop(f(b)(v.value0.value0))(v.value0.value1);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 209, column 5 - line 209, column 35: " + [v.constructor.name]);
	                };
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(l))(g);
	            };
	        };
	        return loop;
	    };
	};
	var filter = function filter(dictFunctor) {
	    return function (f) {
	        var g = function g(v) {
	            if (v instanceof Yield) {
	                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
	                var $139 = f(v.value0);
	                if ($139) {
	                    return new Yield(v.value0, s$prime);
	                };
	                if (!$139) {
	                    return new Skip(s$prime);
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 165, column 19 - line 165, column 54: " + [$139.constructor.name]);
	            };
	            if (v instanceof Skip) {
	                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
	                return new Skip(s$prime);
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 165, column 3 - line 165, column 80: " + [v.constructor.name]);
	        };
	        return stepMap(dictFunctor)(g);
	    };
	};
	var dropWhile = function dropWhile(dictApplicative) {
	    return function (f) {
	        var g = function g(v) {
	            if (v instanceof Yield) {
	                var $144 = f(v.value0);
	                if ($144) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
	                };
	                if (!$144) {
	                    return new Yield(v.value0, v.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 158, column 19 - line 158, column 70: " + [$144.constructor.name]);
	            };
	            if (v instanceof Skip) {
	                return Data_Function.apply(Skip.create)(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 158, column 3 - line 158, column 70: " + [v.constructor.name]);
	        };
	        return stepMap(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(g);
	    };
	};
	var drop = function drop(dictApplicative) {
	    return function (v) {
	        return function (fa) {
	            if (v === 0) {
	                return fa;
	            };
	            var f = function f(v1) {
	                if (v1 instanceof Yield) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1))(v1.value1));
	                };
	                if (v1 instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
	                };
	                if (v1 instanceof Done) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 151, column 3 - line 151, column 44: " + [v1.constructor.name]);
	            };
	            return stepMap(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(f)(fa);
	        };
	    };
	};
	var cons = function cons(dictApplicative) {
	    return function (lh) {
	        return function (t) {
	            return Data_Function.apply(ListT.create)(Data_Function.apply(Control_Applicative.pure(dictApplicative))(new Yield(Data_Lazy.force(lh), t)));
	        };
	    };
	};
	var unfoldableListT = function unfoldableListT(dictMonad) {
	    return new Data_Unfoldable.Unfoldable(function (f) {
	        return function (b) {
	            var go = function go(v) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return cons(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
	                        return go(f(v.value0.value1));
	                    }));
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 253, column 3 - line 255, column 73: " + [v.constructor.name]);
	            };
	            return go(f(b));
	        };
	    });
	};
	var semigroupListT = function semigroupListT(dictApplicative) {
	    return new Data_Semigroup.Semigroup(concat(dictApplicative));
	};
	var concat = function concat(dictApplicative) {
	    return function (x) {
	        return function (y) {
	            var f = function f(v) {
	                if (v instanceof Yield) {
	                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
	                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
	                    })(v.value1));
	                };
	                if (v instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
	                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
	                    })(v.value0));
	                };
	                if (v instanceof Done) {
	                    return new Skip(Data_Function.apply(Data_Lazy.defer)(Data_Function["const"](y)));
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 95, column 3 - line 95, column 43: " + [v.constructor.name]);
	            };
	            return stepMap(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(f)(x);
	        };
	    };
	};
	var monoidListT = function monoidListT(dictApplicative) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupListT(dictApplicative);
	    }, nil(dictApplicative));
	};
	var catMaybes = function catMaybes(dictFunctor) {
	    return mapMaybe(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
	};
	var monadListT = function monadListT(dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeListT(dictMonad);
	    }, function () {
	        return bindListT(dictMonad);
	    });
	};
	var bindListT = function bindListT(dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyListT(dictMonad);
	    }, function (fa) {
	        return function (f) {
	            var g = function g(v) {
	                if (v instanceof Yield) {
	                    var h = function h(s1) {
	                        return Data_Semigroup.append(semigroupListT(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s1)(f));
	                    };
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
	                };
	                if (v instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
	                        return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
	                    })(v.value0));
	                };
	                if (v instanceof Done) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 265, column 5 - line 267, column 29: " + [v.constructor.name]);
	            };
	            return stepMap(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(g)(fa);
	        };
	    });
	};
	var applyListT = function applyListT(dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorListT(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	    }, Control_Monad.ap(monadListT(dictMonad)));
	};
	var applicativeListT = function applicativeListT(dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyListT(dictMonad);
	    }, singleton(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	};
	var monadEffListT = function monadEffListT(dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadListT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($168) {
	        return Control_Monad_Trans.lift(monadTransListT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($168));
	    });
	};
	var altListT = function altListT(dictApplicative) {
	    return new Control_Alt.Alt(function () {
	        return functorListT(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	    }, concat(dictApplicative));
	};
	var plusListT = function plusListT(dictMonad) {
	    return new Control_Plus.Plus(function () {
	        return altListT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	};
	var alternativeListT = function alternativeListT(dictMonad) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeListT(dictMonad);
	    }, function () {
	        return plusListT(dictMonad);
	    });
	};
	var monadZeroListT = function monadZeroListT(dictMonad) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeListT(dictMonad);
	    }, function () {
	        return monadListT(dictMonad);
	    });
	};
	var monadPlusListT = function monadPlusListT(dictMonad) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroListT(dictMonad);
	    });
	};
	module.exports = {
	    catMaybes: catMaybes,
	    cons: cons,
	    drop: drop,
	    dropWhile: dropWhile,
	    filter: filter,
	    foldl: foldl,
	    "foldl'": foldl$prime,
	    fromEffect: fromEffect,
	    head: head,
	    iterate: iterate,
	    mapMaybe: mapMaybe,
	    nil: nil,
	    prepend: prepend,
	    "prepend'": prepend$prime,
	    repeat: repeat,
	    scanl: scanl,
	    singleton: singleton,
	    tail: tail,
	    take: take,
	    takeWhile: takeWhile,
	    uncons: uncons,
	    unfold: unfold,
	    wrapEffect: wrapEffect,
	    wrapLazy: wrapLazy,
	    zipWith: zipWith,
	    "zipWith'": zipWith$prime,
	    semigroupListT: semigroupListT,
	    monoidListT: monoidListT,
	    functorListT: functorListT,
	    unfoldableListT: unfoldableListT,
	    applyListT: applyListT,
	    applicativeListT: applicativeListT,
	    bindListT: bindListT,
	    monadListT: monadListT,
	    monadTransListT: monadTransListT,
	    altListT: altListT,
	    plusListT: plusListT,
	    alternativeListT: alternativeListT,
	    monadZeroListT: monadZeroListT,
	    monadPlusListT: monadPlusListT,
	    monadEffListT: monadEffListT
	};

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_RWS_Class = __webpack_require__(106);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Either = __webpack_require__(58);
	var Data_Maybe = __webpack_require__(72);
	var Data_Tuple = __webpack_require__(100);
	var Data_Functor = __webpack_require__(8);
	var Control_Applicative = __webpack_require__(5);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad = __webpack_require__(19);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Bind = __webpack_require__(17);
	var Data_Function = __webpack_require__(10);
	var Control_Category = __webpack_require__(11);
	var MaybeT = function MaybeT(x) {
	    return x;
	};
	var runMaybeT = function runMaybeT(v) {
	    return v;
	};
	var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function ($60) {
	        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($60));
	    };
	});
	var mapMaybeT = function mapMaybeT(f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var monadMaybeT = function monadMaybeT(dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeMaybeT(dictMonad);
	    }, function () {
	        return bindMaybeT(dictMonad);
	    });
	};
	var functorMaybeT = function functorMaybeT(dictMonad) {
	    return new Data_Functor.Functor(Control_Applicative.liftA1(applicativeMaybeT(dictMonad)));
	};
	var bindMaybeT = function bindMaybeT(dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyMaybeT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                if (v1 instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value);
	                };
	                if (v1 instanceof Data_Maybe.Just) {
	                    var $36 = f(v1.value0);
	                    return $36;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 5 - line 58, column 22: " + [v1.constructor.name]);
	            });
	        };
	    });
	};
	var applyMaybeT = function applyMaybeT(dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorMaybeT(dictMonad);
	    }, Control_Monad.ap(monadMaybeT(dictMonad)));
	};
	var applicativeMaybeT = function applicativeMaybeT(dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyMaybeT(dictMonad);
	    }, function ($61) {
	        return MaybeT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Just.create($61)));
	    });
	};
	var monadContMaybeT = function monadContMaybeT(dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadMaybeT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Data_Function.apply(MaybeT)(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var $38 = f(function (a) {
	                return Data_Function.apply(MaybeT)(Data_Function.apply(c)(new Data_Maybe.Just(a)));
	            });
	            return $38;
	        }));
	    });
	};
	var monadEffMaybe = function monadEffMaybe(dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadMaybeT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($62) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($62));
	    });
	};
	var monadErrorMaybeT = function monadErrorMaybeT(dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadMaybeT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return Data_Function.apply(MaybeT)(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
	                var $41 = h(a);
	                return $41;
	            }));
	        };
	    }, function (e) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	    });
	};
	var monadReaderMaybeT = function monadReaderMaybeT(dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadMaybeT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadRecMaybeT = function monadRecMaybeT(dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function ($63) {
	            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                var $42 = f(a);
	                return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())($42)(function (m$prime) {
	                    return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                        if (m$prime instanceof Data_Maybe.Nothing) {
	                            return new Data_Either.Right(Data_Maybe.Nothing.value);
	                        };
	                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Data_Either.Left) {
	                            return new Data_Either.Left(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Data_Either.Right) {
	                            return new Data_Either.Right(new Data_Maybe.Just(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 86, column 11 - line 89, column 45: " + [m$prime.constructor.name]);
	                    }());
	                });
	            })($63));
	        };
	    });
	};
	var monadStateMaybeT = function monadStateMaybeT(dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadMaybeT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadWriterMaybeT = function monadWriterMaybeT(dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadMaybeT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, mapMaybeT(function (m) {
	        return Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Data_Function.apply(Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]()))(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapMaybeT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 117, column 5 - line 119, column 43: " + [v.constructor.name]);
	            }());
	        }));
	    }), function (wd) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
	    });
	};
	var monadRWSMaybeT = function monadRWSMaybeT(dictMonadRWS) {
	    return new Control_Monad_RWS_Class.MonadRWS(function () {
	        return monadReaderMaybeT(dictMonadRWS["__superclass_Control.Monad.Reader.Class.MonadReader_0"]());
	    }, function () {
	        return monadStateMaybeT(dictMonadRWS["__superclass_Control.Monad.State.Class.MonadState_2"]());
	    }, function () {
	        return monadWriterMaybeT(dictMonadRWS["__superclass_Control.Monad.Writer.Class.MonadWriter_1"]());
	    });
	};
	var altMaybeT = function altMaybeT(dictMonad) {
	    return new Control_Alt.Alt(function () {
	        return functorMaybeT(dictMonad);
	    }, function (v) {
	        return function (v1) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
	                if (v2 instanceof Data_Maybe.Nothing) {
	                    return v1;
	                };
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v2);
	            });
	        };
	    });
	};
	var plusMaybeT = function plusMaybeT(dictMonad) {
	    return new Control_Plus.Plus(function () {
	        return altMaybeT(dictMonad);
	    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value));
	};
	var alternativeMaybeT = function alternativeMaybeT(dictMonad) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeMaybeT(dictMonad);
	    }, function () {
	        return plusMaybeT(dictMonad);
	    });
	};
	var monadZeroMaybeT = function monadZeroMaybeT(dictMonad) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeMaybeT(dictMonad);
	    }, function () {
	        return monadMaybeT(dictMonad);
	    });
	};
	var monadPlusMaybeT = function monadPlusMaybeT(dictMonad) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroMaybeT(dictMonad);
	    });
	};
	module.exports = {
	    MaybeT: MaybeT,
	    mapMaybeT: mapMaybeT,
	    runMaybeT: runMaybeT,
	    functorMaybeT: functorMaybeT,
	    applyMaybeT: applyMaybeT,
	    applicativeMaybeT: applicativeMaybeT,
	    bindMaybeT: bindMaybeT,
	    monadMaybeT: monadMaybeT,
	    monadTransMaybeT: monadTransMaybeT,
	    altMaybeT: altMaybeT,
	    plusMaybeT: plusMaybeT,
	    alternativeMaybeT: alternativeMaybeT,
	    monadPlusMaybeT: monadPlusMaybeT,
	    monadZeroMaybeT: monadZeroMaybeT,
	    monadRecMaybeT: monadRecMaybeT,
	    monadEffMaybe: monadEffMaybe,
	    monadContMaybeT: monadContMaybeT,
	    monadErrorMaybeT: monadErrorMaybeT,
	    monadReaderMaybeT: monadReaderMaybeT,
	    monadStateMaybeT: monadStateMaybeT,
	    monadWriterMaybeT: monadWriterMaybeT,
	    monadRWSMaybeT: monadRWSMaybeT
	};

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_RWS_Class = __webpack_require__(106);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Data_Either = __webpack_require__(58);
	var Data_Monoid = __webpack_require__(61);
	var Data_Tuple = __webpack_require__(100);
	var Data_Functor = __webpack_require__(8);
	var Control_Apply = __webpack_require__(6);
	var Control_Bind = __webpack_require__(17);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Applicative = __webpack_require__(5);
	var Data_Function = __webpack_require__(10);
	var Control_Monad = __webpack_require__(19);
	var Control_Semigroupoid = __webpack_require__(12);
	var RWSResult = function () {
	    function RWSResult(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    RWSResult.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new RWSResult(value0, value1, value2);
	            };
	        };
	    };
	    return RWSResult;
	}();
	var RWST = function RWST(x) {
	    return x;
	};
	var withRWST = function withRWST(f) {
	    return function (m) {
	        return function (r) {
	            return function (s) {
	                return Data_Tuple.uncurry(m)(f(r)(s));
	            };
	        };
	    };
	};
	var runRWST = function runRWST(v) {
	    return v;
	};
	var monadTransRWST = function monadTransRWST(dictMonoid) {
	    return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	        return function (m) {
	            return function (v) {
	                return function (s) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (a) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
	                    });
	                };
	            };
	        };
	    });
	};
	var mapRWST = function mapRWST(f) {
	    return function (v) {
	        return function (r) {
	            return function (s) {
	                return f(v(r)(s));
	            };
	        };
	    };
	};
	var functorRWST = function functorRWST(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (r) {
	                return function (s) {
	                    return Data_Functor.map(dictFunctor)(function (v1) {
	                        return new RWSResult(v1.value0, f(v1.value1), v1.value2);
	                    })(v(r)(s));
	                };
	            };
	        };
	    });
	};
	var execRWST = function execRWST(dictMonad) {
	    return function (v) {
	        return function (r) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(r)(s))(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value2));
	                });
	            };
	        };
	    };
	};
	var evalRWST = function evalRWST(dictMonad) {
	    return function (v) {
	        return function (r) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(r)(s))(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value1, v1.value2));
	                });
	            };
	        };
	    };
	};
	var applyRWST = function applyRWST(dictBind) {
	    return function (dictMonoid) {
	        return new Control_Apply.Apply(function () {
	            return functorRWST(dictBind["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return function (r) {
	                    return function (s) {
	                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
	                            return Data_Functor.mapFlipped(dictBind["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(v1(r)(v2.value0))(function (v3) {
	                                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v2.value2)(v3.value2));
	                            });
	                        });
	                    };
	                };
	            };
	        });
	    };
	};
	var bindRWST = function bindRWST(dictBind) {
	    return function (dictMonoid) {
	        return new Control_Bind.Bind(function () {
	            return applyRWST(dictBind)(dictMonoid);
	        }, function (v) {
	            return function (f) {
	                return function (r) {
	                    return function (s) {
	                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
	                            var $89 = f(v1.value1);
	                            return Data_Functor.mapFlipped(dictBind["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())($89(r)(v1.value0))(function (v2) {
	                                return new RWSResult(v2.value0, v2.value1, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v1.value2)(v2.value2));
	                            });
	                        });
	                    };
	                };
	            };
	        });
	    };
	};
	var applicativeRWST = function applicativeRWST(dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Applicative.Applicative(function () {
	            return applyRWST(dictMonad["__superclass_Control.Bind.Bind_1"]())(dictMonoid);
	        }, function (a) {
	            return function (v) {
	                return function (s) {
	                    return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
	                };
	            };
	        });
	    };
	};
	var monadRWST = function monadRWST(dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad.Monad(function () {
	            return applicativeRWST(dictMonad)(dictMonoid);
	        }, function () {
	            return bindRWST(dictMonad["__superclass_Control.Bind.Bind_1"]())(dictMonoid);
	        });
	    };
	};
	var monadEffRWS = function monadEffRWS(dictMonoid) {
	    return function (dictMonadEff) {
	        return new Control_Monad_Eff_Class.MonadEff(function () {
	            return monadRWST(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
	        }, function ($134) {
	            return Control_Monad_Trans.lift(monadTransRWST(dictMonoid))(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($134));
	        });
	    };
	};
	var monadErrorRWST = function monadErrorRWST(dictMonadError) {
	    return function (dictMonoid) {
	        return new Control_Monad_Error_Class.MonadError(function () {
	            return monadRWST(dictMonadError["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
	        }, function (m) {
	            return function (h) {
	                return Data_Function.apply(RWST)(function (r) {
	                    return function (s) {
	                        return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
	                            var $99 = h(e);
	                            return $99(r)(s);
	                        });
	                    };
	                });
	            };
	        }, function (e) {
	            return Control_Monad_Trans.lift(monadTransRWST(dictMonoid))(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	        });
	    };
	};
	var monadReaderRWST = function monadReaderRWST(dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_Reader_Class.MonadReader(function () {
	            return monadRWST(dictMonad)(dictMonoid);
	        }, function (r) {
	            return function (s) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
	            };
	        }, function (f) {
	            return function (m) {
	                return function (r) {
	                    return function (s) {
	                        return m(f(r))(s);
	                    };
	                };
	            };
	        });
	    };
	};
	var monadRecRWST = function monadRecRWST(dictMonadRec) {
	    return function (dictMonoid) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadRWST(dictMonadRec["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
	        }, function (k) {
	            return function (a) {
	                var k$prime = function k$prime(r) {
	                    return function (v) {
	                        var $103 = k(v.value1);
	                        return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())($103(r)(v.value0))(function (v1) {
	                            return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                                if (v1.value1 instanceof Data_Either.Left) {
	                                    return new Data_Either.Left(new RWSResult(v1.value0, v1.value1.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value2)(v1.value2)));
	                                };
	                                if (v1.value1 instanceof Data_Either.Right) {
	                                    return new Data_Either.Right(new RWSResult(v1.value0, v1.value1.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value2)(v1.value2)));
	                                };
	                                throw new Error("Failed pattern match at Control.Monad.RWS.Trans line 113, column 11 - line 115, column 69: " + [v1.value1.constructor.name]);
	                            }());
	                        });
	                    };
	                };
	                return function (r) {
	                    return function (s) {
	                        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
	                    };
	                };
	            };
	        });
	    };
	};
	var monadStateRWST = function monadStateRWST(dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_State_Class.MonadState(function () {
	            return monadRWST(dictMonad)(dictMonoid);
	        }, function (f) {
	            return function (v) {
	                return function (s) {
	                    var $115 = f(s);
	                    return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult($115.value1, $115.value0, Data_Monoid.mempty(dictMonoid)));
	                };
	            };
	        });
	    };
	};
	var monadWriterRWST = function monadWriterRWST(dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_Writer_Class.MonadWriter(function () {
	            return monadRWST(dictMonad)(dictMonoid);
	        }, function (m) {
	            return function (r) {
	                return function (s) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m(r)(s))(function (v) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
	                    });
	                };
	            };
	        }, function (m) {
	            return function (r) {
	                return function (s) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m(r)(s))(function (v) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
	                    });
	                };
	            };
	        }, function (v) {
	            return function (v1) {
	                return function (s) {
	                    return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, v.value0, v.value1));
	                };
	            };
	        });
	    };
	};
	var monadRWSRWST = function monadRWSRWST(dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_RWS_Class.MonadRWS(function () {
	            return monadReaderRWST(dictMonad)(dictMonoid);
	        }, function () {
	            return monadStateRWST(dictMonad)(dictMonoid);
	        }, function () {
	            return monadWriterRWST(dictMonad)(dictMonoid);
	        });
	    };
	};
	module.exports = {
	    RWSResult: RWSResult,
	    RWST: RWST,
	    evalRWST: evalRWST,
	    execRWST: execRWST,
	    mapRWST: mapRWST,
	    runRWST: runRWST,
	    withRWST: withRWST,
	    functorRWST: functorRWST,
	    applyRWST: applyRWST,
	    bindRWST: bindRWST,
	    applicativeRWST: applicativeRWST,
	    monadRWST: monadRWST,
	    monadTransRWST: monadTransRWST,
	    monadEffRWS: monadEffRWS,
	    monadReaderRWST: monadReaderRWST,
	    monadStateRWST: monadStateRWST,
	    monadWriterRWST: monadWriterRWST,
	    monadRWSRWST: monadRWSRWST,
	    monadErrorRWST: monadErrorRWST,
	    monadRecRWST: monadRecRWST
	};

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Lazy = __webpack_require__(103);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Either = __webpack_require__(58);
	var Data_Tuple = __webpack_require__(100);
	var Data_Functor = __webpack_require__(8);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad = __webpack_require__(19);
	var Control_Applicative = __webpack_require__(5);
	var Data_Function = __webpack_require__(10);
	var Control_Bind = __webpack_require__(17);
	var Data_Unit = __webpack_require__(13);
	var Control_Semigroupoid = __webpack_require__(12);
	var StateT = function StateT(x) {
	    return x;
	};
	var withStateT = function withStateT(f) {
	    return function (v) {
	        return function ($92) {
	            return v(f($92));
	        };
	    };
	};
	var runStateT = function runStateT(v) {
	    return v;
	};
	var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (s) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v, s));
	            });
	        };
	    };
	});
	var mapStateT = function mapStateT(f) {
	    return function (v) {
	        return function ($93) {
	            return f(v($93));
	        };
	    };
	};
	var lazyStateT = new Control_Lazy.Lazy(function (f) {
	    return function (s) {
	        var $47 = f(Data_Unit.unit);
	        return $47(s);
	    };
	});
	var functorStateT = function functorStateT(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (s) {
	                return Data_Functor.map(dictFunctor)(function (v1) {
	                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
	                })(v(s));
	            };
	        };
	    });
	};
	var execStateT = function execStateT(dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
	        };
	    };
	};
	var evalStateT = function evalStateT(dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
	        };
	    };
	};
	var monadStateT = function monadStateT(dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeStateT(dictMonad);
	    }, function () {
	        return bindStateT(dictMonad);
	    });
	};
	var bindStateT = function bindStateT(dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyStateT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(s))(function (v1) {
	                    var $60 = f(v1.value0);
	                    return $60(v1.value1);
	                });
	            };
	        };
	    });
	};
	var applyStateT = function applyStateT(dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorStateT(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]());
	    }, Control_Monad.ap(monadStateT(dictMonad)));
	};
	var applicativeStateT = function applicativeStateT(dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyStateT(dictMonad);
	    }, function (a) {
	        return function (s) {
	            return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(a, s));
	        };
	    });
	};
	var monadContStateT = function monadContStateT(dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadStateT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (s) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $63 = f(function (a) {
	                    return function (s$prime) {
	                        return c(new Data_Tuple.Tuple(a, s$prime));
	                    };
	                });
	                return $63(s);
	            });
	        };
	    });
	};
	var monadEffState = function monadEffState(dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadStateT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($94) {
	        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($94));
	    });
	};
	var monadErrorStateT = function monadErrorStateT(dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadStateT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return function (s) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
	                    var $66 = h(e);
	                    return $66(s);
	                });
	            };
	        };
	    }, function (e) {
	        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	    });
	};
	var monadReaderStateT = function monadReaderStateT(dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadStateT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransStateT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadRecStateT = function monadRecStateT(dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadStateT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (a) {
	            var f$prime = function f$prime(v) {
	                return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(function () {
	                    var $68 = f(v.value0);
	                    return $68;
	                }()(v.value1))(function (v1) {
	                    return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                        if (v1.value0 instanceof Data_Either.Left) {
	                            return new Data_Either.Left(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        if (v1.value0 instanceof Data_Either.Right) {
	                            return new Data_Either.Right(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 86, column 11 - line 88, column 42: " + [v1.value0.constructor.name]);
	                    }());
	                });
	            };
	            return function (s) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
	            };
	        };
	    });
	};
	var monadStateStateT = function monadStateStateT(dictMonad) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadStateT(dictMonad);
	    }, function (f) {
	        return Data_Function.apply(StateT)(function ($95) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f($95));
	        });
	    });
	};
	var monadWriterStateT = function monadWriterStateT(dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadStateT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, function (m) {
	        return function (s) {
	            return Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            });
	        };
	    }, function (m) {
	        return function (s) {
	            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(m(s))(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonadWriter["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            }));
	        };
	    }, function (wd) {
	        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
	    });
	};
	var altStateT = function altStateT(dictMonad) {
	    return function (dictAlt) {
	        return new Control_Alt.Alt(function () {
	            return functorStateT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return function (s) {
	                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
	                };
	            };
	        });
	    };
	};
	var plusStateT = function plusStateT(dictMonad) {
	    return function (dictPlus) {
	        return new Control_Plus.Plus(function () {
	            return altStateT(dictMonad)(dictPlus["__superclass_Control.Alt.Alt_0"]());
	        }, function (v) {
	            return Control_Plus.empty(dictPlus);
	        });
	    };
	};
	var alternativeStateT = function alternativeStateT(dictMonad) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeStateT(dictMonad);
	        }, function () {
	            return plusStateT(dictMonad)(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	        });
	    };
	};
	var monadZeroStateT = function monadZeroStateT(dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]())(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	    }, function () {
	        return monadStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	    });
	};
	var monadPlusStateT = function monadPlusStateT(dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroStateT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	    });
	};
	module.exports = {
	    StateT: StateT,
	    evalStateT: evalStateT,
	    execStateT: execStateT,
	    mapStateT: mapStateT,
	    runStateT: runStateT,
	    withStateT: withStateT,
	    functorStateT: functorStateT,
	    applyStateT: applyStateT,
	    applicativeStateT: applicativeStateT,
	    altStateT: altStateT,
	    plusStateT: plusStateT,
	    alternativeStateT: alternativeStateT,
	    bindStateT: bindStateT,
	    monadStateT: monadStateT,
	    monadRecStateT: monadRecStateT,
	    monadZeroStateT: monadZeroStateT,
	    monadPlusStateT: monadPlusStateT,
	    monadTransStateT: monadTransStateT,
	    lazyStateT: lazyStateT,
	    monadEffState: monadEffState,
	    monadContStateT: monadContStateT,
	    monadErrorStateT: monadErrorStateT,
	    monadReaderStateT: monadReaderStateT,
	    monadStateStateT: monadStateStateT,
	    monadWriterStateT: monadWriterStateT
	};

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Monoid = __webpack_require__(61);
	var Data_Tuple = __webpack_require__(100);
	var Control_Alt = __webpack_require__(49);
	var Control_Alternative = __webpack_require__(50);
	var Control_Monad_Cont_Class = __webpack_require__(82);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Reader_Class = __webpack_require__(98);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Control_MonadPlus = __webpack_require__(95);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Plus = __webpack_require__(51);
	var Data_Functor = __webpack_require__(8);
	var Data_Function = __webpack_require__(10);
	var Control_Apply = __webpack_require__(6);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Applicative = __webpack_require__(5);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Control_Semigroupoid = __webpack_require__(12);
	var WriterT = function WriterT(x) {
	    return x;
	};
	var runWriterT = function runWriterT(v) {
	    return v;
	};
	var monadTransWriterT = function monadTransWriterT(dictMonoid) {
	    return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
	            });
	        };
	    });
	};
	var mapWriterT = function mapWriterT(f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorWriterT = function functorWriterT(dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return Data_Function.apply(mapWriterT)(Data_Functor.map(dictFunctor)(function (v) {
	            return new Data_Tuple.Tuple(f(v.value0), v.value1);
	        }));
	    });
	};
	var execWriterT = function execWriterT(dictFunctor) {
	    return function (v) {
	        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
	    };
	};
	var applyWriterT = function applyWriterT(dictSemigroup) {
	    return function (dictApply) {
	        return new Control_Apply.Apply(function () {
	            return functorWriterT(dictApply["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                var k = function k(v3) {
	                    return function (v4) {
	                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
	                    };
	                };
	                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(k)(v))(v1);
	            };
	        });
	    };
	};
	var bindWriterT = function bindWriterT(dictSemigroup) {
	    return function (dictMonad) {
	        return new Control_Bind.Bind(function () {
	            return applyWriterT(dictSemigroup)(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]());
	        }, function (v) {
	            return function (k) {
	                return Data_Function.apply(WriterT)(Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(function () {
	                        var $74 = k(v1.value0);
	                        return $74;
	                    }())(function (v2) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v2.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v2.value1)));
	                    });
	                }));
	            };
	        });
	    };
	};
	var applicativeWriterT = function applicativeWriterT(dictMonoid) {
	    return function (dictApplicative) {
	        return new Control_Applicative.Applicative(function () {
	            return applyWriterT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	        }, function (a) {
	            return Data_Function.apply(WriterT)(Data_Function.apply(Control_Applicative.pure(dictApplicative))(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	        });
	    };
	};
	var monadWriterT = function monadWriterT(dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad.Monad(function () {
	            return applicativeWriterT(dictMonoid)(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	        }, function () {
	            return bindWriterT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad);
	        });
	    };
	};
	var monadContWriterT = function monadContWriterT(dictMonoid) {
	    return function (dictMonadCont) {
	        return new Control_Monad_Cont_Class.MonadCont(function () {
	            return monadWriterT(dictMonoid)(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	        }, function (f) {
	            return Data_Function.apply(WriterT)(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $80 = f(function (a) {
	                    return Data_Function.apply(WriterT)(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	                });
	                return $80;
	            }));
	        });
	    };
	};
	var monadEffWriter = function monadEffWriter(dictMonoid) {
	    return function (dictMonadEff) {
	        return new Control_Monad_Eff_Class.MonadEff(function () {
	            return monadWriterT(dictMonoid)(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	        }, function ($106) {
	            return Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($106));
	        });
	    };
	};
	var monadErrorWriterT = function monadErrorWriterT(dictMonoid) {
	    return function (dictMonadError) {
	        return new Control_Monad_Error_Class.MonadError(function () {
	            return monadWriterT(dictMonoid)(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	        }, function (v) {
	            return function (h) {
	                return Data_Function.apply(WriterT)(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
	                    var $83 = h(e);
	                    return $83;
	                }));
	            };
	        }, function (e) {
	            return Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	        });
	    };
	};
	var monadReaderWriterT = function monadReaderWriterT(dictMonoid) {
	    return function (dictMonadReader) {
	        return new Control_Monad_Reader_Class.MonadReader(function () {
	            return monadWriterT(dictMonoid)(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	        }, Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	        });
	    };
	};
	var monadRecWriterT = function monadRecWriterT(dictMonoid) {
	    return function (dictMonadRec) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadWriterT(dictMonoid)(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	        }, function (f) {
	            return function (a) {
	                var f$prime = function f$prime(v) {
	                    return Control_Bind.bind(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(function () {
	                        var $85 = f(v.value0);
	                        return $85;
	                    }())(function (v1) {
	                        return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(function () {
	                            if (v1.value0 instanceof Data_Either.Left) {
	                                return new Data_Either.Left(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value1)(v1.value1)));
	                            };
	                            if (v1.value0 instanceof Data_Either.Right) {
	                                return new Data_Either.Right(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value1)(v1.value1)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 83, column 11 - line 85, column 49: " + [v1.value0.constructor.name]);
	                        }());
	                    });
	                };
	                return Data_Function.apply(WriterT)(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	            };
	        });
	    };
	};
	var monadStateWriterT = function monadStateWriterT(dictMonoid) {
	    return function (dictMonadState) {
	        return new Control_Monad_State_Class.MonadState(function () {
	            return monadWriterT(dictMonoid)(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	        }, function (f) {
	            return Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	        });
	    };
	};
	var monadWriterWriterT = function monadWriterWriterT(dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad_Writer_Class.MonadWriter(function () {
	            return monadWriterT(dictMonoid)(dictMonad);
	        }, function (v) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
	            });
	        }, function (v) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
	            });
	        }, function ($107) {
	            return WriterT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())($107));
	        });
	    };
	};
	var altWriterT = function altWriterT(dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorWriterT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Control_Alt.alt(dictAlt)(v)(v1);
	        };
	    });
	};
	var plusWriterT = function plusWriterT(dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altWriterT(dictPlus["__superclass_Control.Alt.Alt_0"]());
	    }, Control_Plus.empty(dictPlus));
	};
	var alternativeWriterT = function alternativeWriterT(dictMonoid) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeWriterT(dictMonoid)(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
	        }, function () {
	            return plusWriterT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	        });
	    };
	};
	var monadZeroWriterT = function monadZeroWriterT(dictMonoid) {
	    return function (dictMonadZero) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeWriterT(dictMonoid)(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	        }, function () {
	            return monadWriterT(dictMonoid)(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	        });
	    };
	};
	var monadPlusWriterT = function monadPlusWriterT(dictMonoid) {
	    return function (dictMonadPlus) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroWriterT(dictMonoid)(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	        });
	    };
	};
	module.exports = {
	    WriterT: WriterT,
	    execWriterT: execWriterT,
	    mapWriterT: mapWriterT,
	    runWriterT: runWriterT,
	    functorWriterT: functorWriterT,
	    applyWriterT: applyWriterT,
	    applicativeWriterT: applicativeWriterT,
	    altWriterT: altWriterT,
	    plusWriterT: plusWriterT,
	    alternativeWriterT: alternativeWriterT,
	    bindWriterT: bindWriterT,
	    monadWriterT: monadWriterT,
	    monadRecWriterT: monadRecWriterT,
	    monadZeroWriterT: monadZeroWriterT,
	    monadPlusWriterT: monadPlusWriterT,
	    monadTransWriterT: monadTransWriterT,
	    monadEffWriter: monadEffWriter,
	    monadContWriterT: monadContWriterT,
	    monadErrorWriterT: monadErrorWriterT,
	    monadReaderWriterT: monadReaderWriterT,
	    monadStateWriterT: monadStateWriterT,
	    monadWriterWriterT: monadWriterWriterT
	};

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Coroutine_Aff = __webpack_require__(155);
	var Control_Coroutine_Stalling = __webpack_require__(159);
	var Control_Monad_Aff_AVar = __webpack_require__(157);
	var Control_Monad_Aff_Free = __webpack_require__(148);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Free = __webpack_require__(116);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Data_Const = __webpack_require__(142);
	var Data_Either = __webpack_require__(58);
	var Data_Functor_Coproduct = __webpack_require__(132);
	var Data_Maybe = __webpack_require__(72);
	var Unsafe_Coerce = __webpack_require__(112);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Coroutine = __webpack_require__(156);
	var Data_Function = __webpack_require__(10);
	var Control_Bind = __webpack_require__(17);
	var EventSource = function EventSource(x) {
	    return x;
	};
	var toParentEventSource = Unsafe_Coerce.unsafeCoerce;
	var runEventSource = function runEventSource(v) {
	    return v;
	};
	var produce = function produce(dictFunctor) {
	    return function (dictAffable) {
	        return function ($11) {
	            return Control_Coroutine_Stalling.producerToStallingProducer(dictFunctor)(Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictFunctor)(Control_Monad_Aff_Free.fromAff(dictAffable))(Control_Coroutine_Aff.produce($11)));
	        };
	    };
	};
	var fromParentEventSource = Unsafe_Coerce.unsafeCoerce;
	var eventSource_ = function eventSource_(dictMonad) {
	    return function (dictAffable) {
	        return function (attach) {
	            return function (handle) {
	                return Data_Function.apply(EventSource)(produce(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(dictAffable)(function (emit) {
	                    return attach(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(function ($12) {
	                        return emit(Data_Either.Left.create($12));
	                    })(handle));
	                }));
	            };
	        };
	    };
	};
	var eventSource = function eventSource(dictMonad) {
	    return function (dictAffable) {
	        return function (attach) {
	            return function (handle) {
	                return Data_Function.apply(EventSource)(produce(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(dictAffable)(function (emit) {
	                    return attach(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($13) {
	                        return emit(Data_Either.Left.create($13));
	                    })(handle));
	                }));
	            };
	        };
	    };
	};
	var catEventSource = function catEventSource(dictMonadRec) {
	    return function (v) {
	        return Data_Function.apply(EventSource)(Data_Function.apply(Control_Coroutine_Stalling.catMaybes(dictMonadRec))(Control_Coroutine_Stalling.mapStallingProducer(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(v)));
	    };
	};
	module.exports = {
	    EventSource: EventSource,
	    catEventSource: catEventSource,
	    eventSource: eventSource,
	    eventSource_: eventSource_,
	    fromParentEventSource: fromParentEventSource,
	    produce: produce,
	    runEventSource: runEventSource,
	    toParentEventSource: toParentEventSource
	};

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Control_Coroutine = __webpack_require__(156);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Aff_AVar = __webpack_require__(157);
	var Control_Monad_Aff_Class = __webpack_require__(158);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Bind = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var Data_Function = __webpack_require__(10);
	var Control_Applicative = __webpack_require__(5);
	var Data_Unit = __webpack_require__(13);
	var produceAff = function produceAff(recv) {
	    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.makeVar))(function (v) {
	        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff.forkAff(recv(Control_Monad_Aff_AVar.putVar(v)))))(function () {
	            return Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar(v));
	        });
	    });
	};
	var produce = function produce(recv) {
	    return produceAff(function (send) {
	        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function ($3) {
	            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(send($3)));
	        }));
	    });
	};
	var produce$prime = function produce$prime(dictMonadAff) {
	    return function ($4) {
	        return Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(produce($4));
	    };
	};
	module.exports = {
	    produce: produce,
	    "produce'": produce$prime,
	    produceAff: produceAff
	};

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Parallel_Class = __webpack_require__(96);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Either = __webpack_require__(58);
	var Data_Functor = __webpack_require__(8);
	var Data_Identity = __webpack_require__(90);
	var Data_Maybe = __webpack_require__(72);
	var Data_Profunctor = __webpack_require__(144);
	var Data_Tuple = __webpack_require__(100);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Applicative = __webpack_require__(5);
	var Data_Unit = __webpack_require__(13);
	var Control_Bind = __webpack_require__(17);
	var Control_Category = __webpack_require__(11);
	var Transform = function Transform(x) {
	    return x;
	};
	var Emit = function () {
	    function Emit(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Emit.create = function (value0) {
	        return function (value1) {
	            return new Emit(value0, value1);
	        };
	    };
	    return Emit;
	}();
	var CoTransform = function () {
	    function CoTransform(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CoTransform.create = function (value0) {
	        return function (value1) {
	            return new CoTransform(value0, value1);
	        };
	    };
	    return CoTransform;
	}();
	var Await = function Await(x) {
	    return x;
	};
	var runProcess = function runProcess(dictMonadRec) {
	    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($162) {
	        return Control_Applicative.pure(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(Data_Identity.runIdentity($162));
	    });
	};
	var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
	        };
	    };
	});
	var loop = function loop(dictFunctor) {
	    return function (dictMonad) {
	        return function (me) {
	            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
	                return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.maybe(new Data_Either.Left(Data_Unit.unit))(Data_Either.Right.create))(me);
	            })(Data_Unit.unit);
	        };
	    };
	};
	var fuseWith = function fuseWith(dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictFunctor2) {
	            return function (dictMonadRec) {
	                return function (dictMonadPar) {
	                    return function (zap) {
	                        return function (fs) {
	                            return function (gs) {
	                                var go = function go(v) {
	                                    return Control_Bind.bind(dictMonadPar["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]())(Control_Parallel_Class.runParallel(Control_Apply.apply(Control_Parallel_Class.applyParallel(dictMonadPar))(Data_Functor.map(Control_Parallel_Class.functorParallel(dictMonadPar["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]()))(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
	                                        if (v1 instanceof Data_Either.Left) {
	                                            return Control_Applicative.pure(dictMonadPar["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value0));
	                                        };
	                                        if (v1 instanceof Data_Either.Right) {
	                                            return Control_Applicative.pure(dictMonadPar["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
	                                                return Control_Monad_Free_Trans.freeT(function (v2) {
	                                                    return go(t);
	                                                });
	                                            })(v1.value0)));
	                                        };
	                                        throw new Error("Failed pattern match at Control.Coroutine line 73, column 5 - line 75, column 63: " + [v1.constructor.name]);
	                                    });
	                                };
	                                return Control_Monad_Free_Trans.freeT(function (v) {
	                                    return go(new Data_Tuple.Tuple(fs, gs));
	                                });
	                            };
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
	var joinConsumers = function joinConsumers(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return function (v2) {
	                        return f(v(v2.value0))(v1(v2.value1));
	                    };
	                };
	            };
	        });
	    };
	};
	var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return function ($163) {
	                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($163));
	            };
	        };
	    };
	});
	var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
	var composeTransformers = function composeTransformers(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return function (i) {
	                        var $91 = v(i);
	                        var $92 = v1($91.value0);
	                        return new Data_Tuple.Tuple($92.value0, f($91.value1)($92.value1));
	                    };
	                };
	            };
	        });
	    };
	};
	var transform = function transform(dictMonad) {
	    return function (f) {
	        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
	            return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
	        });
	    };
	};
	var transformConsumer = function transformConsumer(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return function (i) {
	                        var $99 = v(i);
	                        return f($99.value1)(v1($99.value0));
	                    };
	                };
	            };
	        });
	    };
	};
	var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Emit(f(v.value0), g(v.value1));
	        };
	    };
	});
	var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
	var connect = function connect(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return f(v.value1)(v1(v.value0));
	                };
	            };
	        });
	    };
	};
	var emit = function emit(dictMonad) {
	    return function (o) {
	        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
	    };
	};
	var joinProducers = function joinProducers(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
	                };
	            };
	        });
	    };
	};
	var producer = function producer(dictMonad) {
	    return function (recv) {
	        return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
	            };
	            if (v instanceof Data_Either.Right) {
	                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
	            };
	            throw new Error("Failed pattern match at Control.Coroutine line 99, column 3 - line 101, column 29: " + [v.constructor.name]);
	        }));
	    };
	};
	var transformProducer = function transformProducer(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    var $123 = v1(v.value0);
	                    return new Emit($123.value0, f(v.value1)($123.value1));
	                };
	            };
	        });
	    };
	};
	var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new CoTransform(f(v.value0), function ($164) {
	                return g(v.value1($164));
	            });
	        };
	    };
	});
	var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
	var composeCoTransformers = function composeCoTransformers(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return new CoTransform(v1.value0, function (i) {
	                        return f(v.value1(i))(v1.value1(v.value0));
	                    });
	                };
	            };
	        });
	    };
	};
	var cotransform = function cotransform(dictMonad) {
	    return function (o) {
	        return Control_Monad_Free_Trans.freeT(function (v) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
	        });
	    };
	};
	var fuseCoTransform = function fuseCoTransform(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    var $142 = v(v1.value0);
	                    return f($142.value1)(v1.value1($142.value0));
	                };
	            };
	        });
	    };
	};
	var transformCoTransformL = function transformCoTransformL(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    return new CoTransform(v1.value0, function (i1) {
	                        var $149 = v(i1);
	                        return f($149.value1)(v1.value1($149.value0));
	                    });
	                };
	            };
	        });
	    };
	};
	var transformCoTransformR = function transformCoTransformR(dictMonadRec) {
	    return function (dictMonadPar) {
	        return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (v) {
	                return function (v1) {
	                    var $156 = v1(v.value0);
	                    return new CoTransform($156.value0, function ($165) {
	                        return function (v2) {
	                            return f(v2)($156.value1);
	                        }(v.value1($165));
	                    });
	                };
	            };
	        });
	    };
	};
	var $$await = function $$await(dictMonad) {
	    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
	};
	var consumer = function consumer(dictMonad) {
	    return function (send) {
	        return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
	            return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
	        }));
	    };
	};
	module.exports = {
	    Await: Await,
	    CoTransform: CoTransform,
	    Emit: Emit,
	    Transform: Transform,
	    "await": $$await,
	    composeCoTransformers: composeCoTransformers,
	    composeTransformers: composeTransformers,
	    connect: connect,
	    consumer: consumer,
	    cotransform: cotransform,
	    emit: emit,
	    fuseCoTransform: fuseCoTransform,
	    fuseWith: fuseWith,
	    joinConsumers: joinConsumers,
	    joinProducers: joinProducers,
	    loop: loop,
	    producer: producer,
	    runProcess: runProcess,
	    transform: transform,
	    transformCoTransformL: transformCoTransformL,
	    transformCoTransformR: transformCoTransformR,
	    transformConsumer: transformConsumer,
	    transformProducer: transformProducer,
	    bifunctorEmit: bifunctorEmit,
	    functorEmit: functorEmit,
	    profunctorAwait: profunctorAwait,
	    functorAwait: functorAwait,
	    bifunctorTransform: bifunctorTransform,
	    functorTransform: functorTransform,
	    bifunctorCoTransform: bifunctorCoTransform,
	    functorCoTransform: functorCoTransform
	};

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Aff_Internal_1 = __webpack_require__(52);
	var Control_Monad_Aff_Internal_1 = __webpack_require__(52);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Unsafe_Coerce = __webpack_require__(112);
	var Data_Function = __webpack_require__(10);
	var Control_Bind = __webpack_require__(17);
	var Control_Applicative = __webpack_require__(5);
	var Control_Semigroupoid = __webpack_require__(12);
	var fromAVBox = Unsafe_Coerce.unsafeCoerce;
	var killVar = function killVar(q) {
	    return function (e) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal_1._killVar)(Control_Monad_Aff.nonCanceler)(q)(e));
	    };
	};
	var makeVar = Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal_1._makeVar(Control_Monad_Aff.nonCanceler));
	var putVar = function putVar(q) {
	    return function (a) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal_1._putVar)(Control_Monad_Aff.nonCanceler)(q)(a));
	    };
	};
	var makeVar$prime = function makeVar$prime(a) {
	    return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeVar)(function (v) {
	        return Control_Bind.bind(Control_Monad_Aff.bindAff)(putVar(v)(a))(function () {
	            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
	        });
	    });
	};
	var takeVar = function takeVar(q) {
	    return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn2(Control_Monad_Aff_Internal_1._takeVar)(Control_Monad_Aff.nonCanceler)(q));
	};
	var modifyVar = function modifyVar(f) {
	    return function (v) {
	        return Control_Bind.bind(Control_Monad_Aff.bindAff)(takeVar(v))(function ($2) {
	            return putVar(v)(f($2));
	        });
	    };
	};
	module.exports = {
	    killVar: killVar,
	    makeVar: makeVar,
	    "makeVar'": makeVar$prime,
	    modifyVar: modifyVar,
	    putVar: putVar,
	    takeVar: takeVar
	};

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Cont_Trans = __webpack_require__(97);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Except_Trans = __webpack_require__(105);
	var Control_Monad_List_Trans = __webpack_require__(149);
	var Control_Monad_Maybe_Trans = __webpack_require__(150);
	var Control_Monad_Reader_Trans = __webpack_require__(108);
	var Control_Monad_RWS_Trans = __webpack_require__(151);
	var Control_Monad_State_Trans = __webpack_require__(152);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Monad_Writer_Trans = __webpack_require__(153);
	var Data_Monoid = __webpack_require__(61);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var MonadAff = function MonadAff(__superclass_Control$dotMonad$dotEff$dotClass$dotMonadEff_0, liftAff) {
	    this["__superclass_Control.Monad.Eff.Class.MonadEff_0"] = __superclass_Control$dotMonad$dotEff$dotClass$dotMonadEff_0;
	    this.liftAff = liftAff;
	};
	var monadAffAff = new MonadAff(function () {
	    return Control_Monad_Aff.monadEffAff;
	}, Control_Category.id(Control_Category.categoryFn));
	var liftAff = function liftAff(dict) {
	    return dict.liftAff;
	};
	var monadAffContT = function monadAffContT(dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Cont_Trans.monadEffContT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($10) {
	        return Control_Monad_Trans.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($10));
	    });
	};
	var monadAffExceptT = function monadAffExceptT(dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Except_Trans.monadEffExceptT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($11) {
	        return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($11));
	    });
	};
	var monadAffListT = function monadAffListT(dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_List_Trans.monadEffListT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($12) {
	        return Control_Monad_Trans.lift(Control_Monad_List_Trans.monadTransListT)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($12));
	    });
	};
	var monadAffMaybe = function monadAffMaybe(dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Maybe_Trans.monadEffMaybe(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($13) {
	        return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($13));
	    });
	};
	var monadAffRWS = function monadAffRWS(dictMonadAff) {
	    return function (dictMonoid) {
	        return new MonadAff(function () {
	            return Control_Monad_RWS_Trans.monadEffRWS(dictMonoid)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	        }, function ($14) {
	            return Control_Monad_Trans.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($14));
	        });
	    };
	};
	var monadAffReader = function monadAffReader(dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Reader_Trans.monadEffReader(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($15) {
	        return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($15));
	    });
	};
	var monadAffState = function monadAffState(dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_State_Trans.monadEffState(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($16) {
	        return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($16));
	    });
	};
	var monadAffWriter = function monadAffWriter(dictMonadAff) {
	    return function (dictMonoid) {
	        return new MonadAff(function () {
	            return Control_Monad_Writer_Trans.monadEffWriter(dictMonoid)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	        }, function ($17) {
	            return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]()["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($17));
	        });
	    };
	};
	module.exports = {
	    MonadAff: MonadAff,
	    liftAff: liftAff,
	    monadAffAff: monadAffAff,
	    monadAffContT: monadAffContT,
	    monadAffExceptT: monadAffExceptT,
	    monadAffListT: monadAffListT,
	    monadAffMaybe: monadAffMaybe,
	    monadAffReader: monadAffReader,
	    monadAffRWS: monadAffRWS,
	    monadAffState: monadAffState,
	    monadAffWriter: monadAffWriter
	};

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Coroutine = __webpack_require__(156);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Monad_Maybe_Trans = __webpack_require__(150);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_Trans = __webpack_require__(104);
	var Control_Parallel_Class = __webpack_require__(96);
	var Control_Plus = __webpack_require__(51);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Either = __webpack_require__(58);
	var Data_Identity = __webpack_require__(90);
	var Data_Maybe = __webpack_require__(72);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Applicative = __webpack_require__(5);
	var Data_Function = __webpack_require__(10);
	var Data_Unit = __webpack_require__(13);
	var Control_Bind = __webpack_require__(17);
	var Emit = function () {
	    function Emit(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Emit.create = function (value0) {
	        return function (value1) {
	            return new Emit(value0, value1);
	        };
	    };
	    return Emit;
	}();
	var Stall = function () {
	    function Stall(value0) {
	        this.value0 = value0;
	    };
	    Stall.create = function (value0) {
	        return new Stall(value0);
	    };
	    return Stall;
	}();
	var stallF = function stallF(e) {
	    return function (s) {
	        return function (v) {
	            if (v instanceof Emit) {
	                return e(v.value0)(v.value1);
	            };
	            if (v instanceof Stall) {
	                return s(v.value0);
	            };
	            throw new Error("Failed pattern match at Control.Coroutine.Stalling line 46, column 14 - line 48, column 17: " + [v.constructor.name]);
	        };
	    };
	};
	var runStallingProcess = function runStallingProcess(dictMonadRec) {
	    return function ($31) {
	        return Control_Monad_Maybe_Trans.runMaybeT(Control_Monad_Free_Trans.runFreeT(Data_Maybe.functorMaybe)(Control_Monad_Maybe_Trans.monadRecMaybeT(dictMonadRec))(Data_Maybe.maybe(Control_Plus.empty(Control_Monad_Maybe_Trans.plusMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]())))(Control_Applicative.pure(Control_Monad_Maybe_Trans.applicativeMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))))(Control_Monad_Free_Trans.hoistFreeT(Data_Maybe.functorMaybe)(Control_Monad_Maybe_Trans.functorMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(function ($32) {
	            return Control_Monad_Maybe_Trans.MaybeT(Data_Functor.map(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)($32));
	        })($31)));
	    };
	};
	var producerToStallingProducer = function producerToStallingProducer(dictFunctor) {
	    return Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(function (v) {
	        return new Emit(v.value0, v.value1);
	    });
	};
	var processToStallingProcess = function processToStallingProcess(dictFunctor) {
	    return Control_Monad_Free_Trans.interpret(Data_Identity.functorIdentity)(dictFunctor)(function ($33) {
	        return Data_Maybe.Just.create(Data_Identity.runIdentity($33));
	    });
	};
	var bifunctorStallF = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            if (v instanceof Emit) {
	                return new Emit(f(v.value0), g(v.value1));
	            };
	            if (v instanceof Stall) {
	                return new Stall(g(v.value0));
	            };
	            throw new Error("Failed pattern match at Control.Coroutine.Stalling line 51, column 15 - line 53, column 27: " + [v.constructor.name]);
	        };
	    };
	});
	var functorStallF = new Data_Functor.Functor(function (f) {
	    return Data_Bifunctor.rmap(bifunctorStallF)(f);
	});
	var emit = function emit(dictMonad) {
	    return function ($34) {
	        return Control_Monad_Free_Trans.liftFreeT(functorStallF)(dictMonad)(Data_Function.flip(Emit.create)(Data_Unit.unit)($34));
	    };
	};
	var catMaybes = function catMaybes(dictMonadRec) {
	    return Data_Function.apply(Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]())))(Control_Bind.composeKleisli(Control_Monad_Free_Trans.bindFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(function ($35) {
	        return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorStallF))(dictMonadRec["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Free_Trans.resume(functorStallF)(dictMonadRec)($35));
	    })(Data_Either.either(function ($36) {
	        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Either.Right.create($36));
	    })(stallF(function (mo) {
	        return function (t) {
	            return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Unit.unit))(emit(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(mo))(new Data_Either.Left(t));
	        };
	    })(function ($37) {
	        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Either.Left.create($37));
	    }))));
	};
	var fuse = function fuse(dictMonadRec) {
	    return function (dictMonadPar) {
	        return Control_Coroutine.fuseWith(functorStallF)(Control_Coroutine.functorAwait)(Data_Maybe.functorMaybe)(dictMonadRec)(dictMonadPar)(function (f) {
	            return function (q) {
	                return function (v) {
	                    if (q instanceof Emit) {
	                        return new Data_Maybe.Just(f(q.value1)(v(q.value0)));
	                    };
	                    if (q instanceof Stall) {
	                        return Data_Maybe.Nothing.value;
	                    };
	                    throw new Error("Failed pattern match at Control.Coroutine.Stalling line 86, column 5 - line 88, column 27: " + [q.constructor.name]);
	                };
	            };
	        });
	    };
	};
	var stall = function stall(dictMonad) {
	    return Control_Monad_Free_Trans.liftFreeT(functorStallF)(dictMonad)(new Stall(Data_Unit.unit));
	};
	var mapStallingProducer = function mapStallingProducer(dictFunctor) {
	    return function ($38) {
	        return Control_Monad_Free_Trans.interpret(functorStallF)(dictFunctor)(Data_Bifunctor.lmap(bifunctorStallF)($38));
	    };
	};
	var filter = function filter(dictMonadRec) {
	    return function (p) {
	        return function ($39) {
	            return catMaybes(dictMonadRec)(mapStallingProducer(dictMonadRec["__superclass_Control.Monad.Monad_0"]()["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(function (x) {
	                var $30 = p(x);
	                if ($30) {
	                    return new Data_Maybe.Just(x);
	                };
	                if (!$30) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Control.Coroutine.Stalling line 151, column 5 - line 151, column 33: " + [$30.constructor.name]);
	            })($39));
	        };
	    };
	};
	module.exports = {
	    Emit: Emit,
	    Stall: Stall,
	    catMaybes: catMaybes,
	    emit: emit,
	    filter: filter,
	    fuse: fuse,
	    mapStallingProducer: mapStallingProducer,
	    processToStallingProcess: processToStallingProcess,
	    producerToStallingProducer: producerToStallingProducer,
	    runStallingProcess: runStallingProcess,
	    stall: stall,
	    stallF: stallF,
	    bifunctorStallF: bifunctorStallF,
	    functorStallF: functorStallF
	};

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_State = __webpack_require__(161);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Applicative = __webpack_require__(5);
	var Get = function () {
	    function Get(value0) {
	        this.value0 = value0;
	    };
	    Get.create = function (value0) {
	        return new Get(value0);
	    };
	    return Get;
	}();
	var Modify = function () {
	    function Modify(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Modify.create = function (value0) {
	        return function (value1) {
	            return new Modify(value0, value1);
	        };
	    };
	    return Modify;
	}();
	var stateN = function stateN(dictMonad) {
	    return function (dictMonadState) {
	        return function (v) {
	            if (v instanceof Get) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Class.get(dictMonadState))(function ($22) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v.value0($22));
	                });
	            };
	            if (v instanceof Modify) {
	                return Data_Functor.voidLeft(dictMonad["__superclass_Control.Bind.Bind_1"]()["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Control_Monad_State_Class.modify(dictMonadState)(v.value0))(v.value1);
	            };
	            throw new Error("Failed pattern match at Halogen.Query.StateF line 33, column 1 - line 33, column 40: " + [v.constructor.name]);
	        };
	    };
	};
	var mapState = function mapState(v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Get) {
	                return new Get(function ($23) {
	                    return v2.value0(v($23));
	                });
	            };
	            if (v2 instanceof Modify) {
	                return new Modify(v1(v2.value0), v2.value1);
	            };
	            throw new Error("Failed pattern match at Halogen.Query.StateF line 27, column 1 - line 27, column 37: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	};
	var functorStateF = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        if (v instanceof Get) {
	            return new Get(function ($24) {
	                return f(v.value0($24));
	            });
	        };
	        if (v instanceof Modify) {
	            return new Modify(v.value0, f(v.value1));
	        };
	        throw new Error("Failed pattern match at Halogen.Query.StateF line 21, column 3 - line 21, column 32: " + [f.constructor.name, v.constructor.name]);
	    };
	});
	module.exports = {
	    Get: Get,
	    Modify: Modify,
	    mapState: mapState,
	    stateN: stateN,
	    functorStateF: functorStateF
	};

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_State_Class = __webpack_require__(99);
	var Control_Monad_State_Trans = __webpack_require__(152);
	var Data_Identity = __webpack_require__(90);
	var Data_Tuple = __webpack_require__(100);
	var Control_Semigroupoid = __webpack_require__(12);
	var withState = Control_Monad_State_Trans.withStateT;
	var runState = function runState(v) {
	    return function ($14) {
	        return Data_Identity.runIdentity(v($14));
	    };
	};
	var mapState = function mapState(f) {
	    return Control_Monad_State_Trans.mapStateT(function ($15) {
	        return Data_Identity.Identity(f(Data_Identity.runIdentity($15)));
	    });
	};
	var execState = function execState(v) {
	    return function (s) {
	        var $6 = v(s);
	        return $6.value1;
	    };
	};
	var evalState = function evalState(v) {
	    return function (s) {
	        var $11 = v(s);
	        return $11.value0;
	    };
	};
	module.exports = {
	    evalState: evalState,
	    execState: execState,
	    mapState: mapState,
	    runState: runState,
	    withState: withState
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Lazy = __webpack_require__(137);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Unsafe_Coerce = __webpack_require__(112);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Unit = __webpack_require__(13);
	var Data_Eq = __webpack_require__(28);
	var Data_Functor = __webpack_require__(8);
	var Control_Category = __webpack_require__(11);
	var runTree = function runTree(k) {
	    return function (t) {
	        var $5 = Unsafe_Coerce.unsafeCoerce(t);
	        return k($5);
	    };
	};
	var mkTree$prime = Unsafe_Coerce.unsafeCoerce;
	var thunkTree = runTree(function ($11) {
	    return mkTree$prime(function (v) {
	        var $6 = {};
	        for (var $7 in v) {
	            if (v.hasOwnProperty($7)) {
	                $6[$7] = v[$7];
	            };
	        };
	        $6.thunk = true;
	        return $6;
	    }($11));
	});
	var mkTree = function mkTree(dictEq) {
	    return function (html) {
	        return mkTree$prime({
	            slot: Data_Unit.unit,
	            html: html,
	            eq: Data_Eq.eq(dictEq),
	            thunk: false
	        });
	    };
	};
	var graftTree = function graftTree(l) {
	    return function (r) {
	        return runTree(function (t) {
	            return mkTree$prime({
	                slot: r(t.slot),
	                html: Data_Functor.map(Data_Lazy.functorLazy)(Data_Bifunctor.bimap(Halogen_HTML_Core.bifunctorHTML)(graftTree(l)(Control_Category.id(Control_Category.categoryFn)))(l))(t.html),
	                eq: t.eq,
	                thunk: t.thunk
	            });
	        });
	    };
	};
	var emptyTree = mkTree$prime({
	    slot: Data_Unit.unit,
	    html: Data_Lazy.defer(function (v) {
	        return new Halogen_HTML_Core.Text("");
	    }),
	    eq: function eq(v) {
	        return function (v1) {
	            return false;
	        };
	    },
	    thunk: false
	});
	module.exports = {
	    emptyTree: emptyTree,
	    graftTree: graftTree,
	    mkTree: mkTree,
	    "mkTree'": mkTree$prime,
	    runTree: runTree,
	    thunkTree: thunkTree
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Bifunctor = __webpack_require__(68);
	var Data_Exists = __webpack_require__(134);
	var Data_ExistsR = __webpack_require__(164);
	var Data_Maybe = __webpack_require__(72);
	var Data_Traversable = __webpack_require__(78);
	var Data_Tuple = __webpack_require__(100);
	var DOM_HTML_Types = __webpack_require__(165);
	var Halogen_HTML_Events_Handler = __webpack_require__(186);
	var Halogen_HTML_Events_Types = __webpack_require__(190);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Show = __webpack_require__(15);
	var Data_Function = __webpack_require__(10);
	var Control_Applicative = __webpack_require__(5);
	var TagName = function TagName(x) {
	    return x;
	};
	var PropName = function PropName(x) {
	    return x;
	};
	var Namespace = function Namespace(x) {
	    return x;
	};
	var EventName = function EventName(x) {
	    return x;
	};
	var HandlerF = function () {
	    function HandlerF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    HandlerF.create = function (value0) {
	        return function (value1) {
	            return new HandlerF(value0, value1);
	        };
	    };
	    return HandlerF;
	}();
	var ClassName = function ClassName(x) {
	    return x;
	};
	var AttrName = function AttrName(x) {
	    return x;
	};
	var PropF = function () {
	    function PropF(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    PropF.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new PropF(value0, value1, value2);
	            };
	        };
	    };
	    return PropF;
	}();
	var Prop = function () {
	    function Prop(value0) {
	        this.value0 = value0;
	    };
	    Prop.create = function (value0) {
	        return new Prop(value0);
	    };
	    return Prop;
	}();
	var Attr = function () {
	    function Attr(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    Attr.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new Attr(value0, value1, value2);
	            };
	        };
	    };
	    return Attr;
	}();
	var Key = function () {
	    function Key(value0) {
	        this.value0 = value0;
	    };
	    Key.create = function (value0) {
	        return new Key(value0);
	    };
	    return Key;
	}();
	var Handler = function () {
	    function Handler(value0) {
	        this.value0 = value0;
	    };
	    Handler.create = function (value0) {
	        return new Handler(value0);
	    };
	    return Handler;
	}();
	var Ref = function () {
	    function Ref(value0) {
	        this.value0 = value0;
	    };
	    Ref.create = function (value0) {
	        return new Ref(value0);
	    };
	    return Ref;
	}();
	var Text = function () {
	    function Text(value0) {
	        this.value0 = value0;
	    };
	    Text.create = function (value0) {
	        return new Text(value0);
	    };
	    return Text;
	}();
	var Element = function () {
	    function Element(value0, value1, value2, value3) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	    };
	    Element.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return new Element(value0, value1, value2, value3);
	                };
	            };
	        };
	    };
	    return Element;
	}();
	var Slot = function () {
	    function Slot(value0) {
	        this.value0 = value0;
	    };
	    Slot.create = function (value0) {
	        return new Slot(value0);
	    };
	    return Slot;
	}();
	var IsProp = function IsProp(toPropString) {
	    this.toPropString = toPropString;
	};
	var toPropString = function toPropString(dict) {
	    return dict.toPropString;
	};
	var tagName = TagName;
	var stringIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (s) {
	            return s;
	        };
	    };
	});
	var runTagName = function runTagName(v) {
	    return v;
	};
	var runPropName = function runPropName(v) {
	    return v;
	};
	var runNamespace = function runNamespace(v) {
	    return v;
	};
	var runEventName = function runEventName(v) {
	    return v;
	};
	var runClassName = function runClassName(v) {
	    return v;
	};
	var runAttrName = function runAttrName(v) {
	    return v;
	};
	var propName = PropName;
	var prop = function prop(dictIsProp) {
	    return function (name) {
	        return function (attr) {
	            return function (v) {
	                return new Prop(Data_Exists.mkExists(new PropF(name, v, Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(toPropString(dictIsProp)))(attr))));
	            };
	        };
	    };
	};
	var numberIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (n) {
	            return Data_Show.show(Data_Show.showNumber)(n);
	        };
	    };
	});
	var namespace = Namespace;
	var intIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (i) {
	            return Data_Show.show(Data_Show.showInt)(i);
	        };
	    };
	});
	var handler = function handler(name) {
	    return function (k) {
	        return new Handler(Data_ExistsR.mkExistsR(new HandlerF(name, k)));
	    };
	};
	var functorProp = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Prop) {
	            return new Prop(v1.value0);
	        };
	        if (v1 instanceof Key) {
	            return new Key(v1.value0);
	        };
	        if (v1 instanceof Attr) {
	            return new Attr(v1.value0, v1.value1, v1.value2);
	        };
	        if (v1 instanceof Handler) {
	            return Data_ExistsR.runExistsR(function (v2) {
	                return new Handler(Data_ExistsR.mkExistsR(new HandlerF(v2.value0, function ($61) {
	                    return Data_Functor.map(Halogen_HTML_Events_Handler.functorEventHandler)(Data_Functor.map(Data_Maybe.functorMaybe)(v))(v2.value1($61));
	                })));
	            })(v1.value0);
	        };
	        if (v1 instanceof Ref) {
	            return new Ref(function ($62) {
	                return v(v1.value0($62));
	            });
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Core line 98, column 3 - line 98, column 26: " + [v.constructor.name, v1.constructor.name]);
	    };
	});
	var fillSlot = function fillSlot(dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Text) {
	                    return Data_Function.apply(Control_Applicative.pure(dictApplicative))(new Text(v2.value0));
	                };
	                if (v2 instanceof Element) {
	                    return Data_Functor.map(dictApplicative["__superclass_Control.Apply.Apply_0"]()["__superclass_Data.Functor.Functor_0"]())(Element.create(v2.value0)(v2.value1)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorProp)(v1))(v2.value2)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(fillSlot(dictApplicative)(v)(v1))(v2.value3));
	                };
	                if (v2 instanceof Slot) {
	                    return v(v2.value0);
	                };
	                throw new Error("Failed pattern match at Halogen.HTML.Core line 77, column 1 - line 77, column 38: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	            };
	        };
	    };
	};
	var eventName = EventName;
	var element = Element.create(Data_Maybe.Nothing.value);
	var className = ClassName;
	var booleanIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2) {
	                return runAttrName(v);
	            };
	            if (!v2) {
	                return "";
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Core line 138, column 3 - line 138, column 46: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
	        };
	    };
	});
	var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        var go = function go(v) {
	            if (v instanceof Text) {
	                return new Text(v.value0);
	            };
	            if (v instanceof Element) {
	                return new Element(v.value0, v.value1, Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorProp)(g))(v.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v.value3));
	            };
	            if (v instanceof Slot) {
	                return new Slot(f(v.value0));
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Core line 62, column 3 - line 66, column 29: " + [v.constructor.name]);
	        };
	        return go;
	    };
	});
	var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));
	var attrName = AttrName;
	module.exports = {
	    Text: Text,
	    Element: Element,
	    Slot: Slot,
	    HandlerF: HandlerF,
	    Prop: Prop,
	    Attr: Attr,
	    Key: Key,
	    Handler: Handler,
	    Ref: Ref,
	    PropF: PropF,
	    IsProp: IsProp,
	    attrName: attrName,
	    className: className,
	    element: element,
	    eventName: eventName,
	    fillSlot: fillSlot,
	    handler: handler,
	    namespace: namespace,
	    prop: prop,
	    propName: propName,
	    runAttrName: runAttrName,
	    runClassName: runClassName,
	    runEventName: runEventName,
	    runNamespace: runNamespace,
	    runPropName: runPropName,
	    runTagName: runTagName,
	    tagName: tagName,
	    toPropString: toPropString,
	    bifunctorHTML: bifunctorHTML,
	    functorHTML: functorHTML,
	    functorProp: functorProp,
	    stringIsProp: stringIsProp,
	    intIsProp: intIsProp,
	    numberIsProp: numberIsProp,
	    booleanIsProp: booleanIsProp
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Unsafe_Coerce = __webpack_require__(112);
	var runExistsR = Unsafe_Coerce.unsafeCoerce;
	var mkExistsR = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    mkExistsR: mkExistsR,
	    runExistsR: runExistsR
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(166);
	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Foreign = __webpack_require__(167);
	var Data_Foreign_Class = __webpack_require__(175);
	var DOM_Event_Types = __webpack_require__(183);
	var DOM_Node_Types = __webpack_require__(185);
	var Unsafe_Coerce = __webpack_require__(112);
	var Control_Semigroupoid = __webpack_require__(12);
	var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var readHTMLVideoElement = Data_Foreign.unsafeReadTagged("HTMLVideoElement");
	var readHTMLUListElement = Data_Foreign.unsafeReadTagged("HTMLUListElement");
	var readHTMLTrackElement = Data_Foreign.unsafeReadTagged("HTMLTrackElement");
	var readHTMLTitleElement = Data_Foreign.unsafeReadTagged("HTMLTitleElement");
	var readHTMLTimeElement = Data_Foreign.unsafeReadTagged("HTMLTimeElement");
	var readHTMLTextAreaElement = Data_Foreign.unsafeReadTagged("HTMLTextAreaElement");
	var readHTMLTemplateElement = Data_Foreign.unsafeReadTagged("HTMLTemplateElement");
	var readHTMLTableSectionElement = Data_Foreign.unsafeReadTagged("HTMLTableSectionElement");
	var readHTMLTableRowElement = Data_Foreign.unsafeReadTagged("HTMLTableRowElement");
	var readHTMLTableHeaderCellElement = Data_Foreign.unsafeReadTagged("HTMLTableHeaderCellElement");
	var readHTMLTableElement = Data_Foreign.unsafeReadTagged("HTMLTableElement");
	var readHTMLTableDataCellElement = Data_Foreign.unsafeReadTagged("HTMLTableDataCellElement");
	var readHTMLTableColElement = Data_Foreign.unsafeReadTagged("HTMLTableColElement");
	var readHTMLTableCellElement = Data_Foreign.unsafeReadTagged("HTMLTableCellElement");
	var readHTMLTableCaptionElement = Data_Foreign.unsafeReadTagged("HTMLTableCaptionElement");
	var readHTMLStyleElement = Data_Foreign.unsafeReadTagged("HTMLStyleElement");
	var readHTMLSpanElement = Data_Foreign.unsafeReadTagged("HTMLSpanElement");
	var readHTMLSourceElement = Data_Foreign.unsafeReadTagged("HTMLSourceElement");
	var readHTMLSelectElement = Data_Foreign.unsafeReadTagged("HTMLSelectElement");
	var readHTMLScriptElement = Data_Foreign.unsafeReadTagged("HTMLScriptElement");
	var readHTMLQuoteElement = Data_Foreign.unsafeReadTagged("HTMLQuoteElement");
	var readHTMLProgressElement = Data_Foreign.unsafeReadTagged("HTMLProgressElement");
	var readHTMLPreElement = Data_Foreign.unsafeReadTagged("HTMLPreElement");
	var readHTMLParamElement = Data_Foreign.unsafeReadTagged("HTMLParamElement");
	var readHTMLParagraphElement = Data_Foreign.unsafeReadTagged("HTMLParagraphElement");
	var readHTMLOutputElement = Data_Foreign.unsafeReadTagged("HTMLOutputElement");
	var readHTMLOptionElement = Data_Foreign.unsafeReadTagged("HTMLOptionElement");
	var readHTMLOptGroupElement = Data_Foreign.unsafeReadTagged("HTMLOptGroupElement");
	var readHTMLObjectElement = Data_Foreign.unsafeReadTagged("HTMLObjectElement");
	var readHTMLOListElement = Data_Foreign.unsafeReadTagged("HTMLOListElement");
	var readHTMLModElement = Data_Foreign.unsafeReadTagged("HTMLModElement");
	var readHTMLMeterElement = Data_Foreign.unsafeReadTagged("HTMLMeterElement");
	var readHTMLMetaElement = Data_Foreign.unsafeReadTagged("HTMLMetaElement");
	var readHTMLMediaElement = Data_Foreign.unsafeReadTagged("HTMLMediaElement");
	var readHTMLMapElement = Data_Foreign.unsafeReadTagged("HTMLMapElement");
	var readHTMLLinkElement = Data_Foreign.unsafeReadTagged("HTMLLinkElement");
	var readHTMLLegendElement = Data_Foreign.unsafeReadTagged("HTMLLegendElement");
	var readHTMLLabelElement = Data_Foreign.unsafeReadTagged("HTMLLabelElement");
	var readHTMLLIElement = Data_Foreign.unsafeReadTagged("HTMLLIElement");
	var readHTMLKeygenElement = Data_Foreign.unsafeReadTagged("HTMLKeygenElement");
	var readHTMLInputElement = Data_Foreign.unsafeReadTagged("HTMLInputElement");
	var readHTMLImageElement = Data_Foreign.unsafeReadTagged("HTMLImageElement");
	var readHTMLIFrameElement = Data_Foreign.unsafeReadTagged("HTMLIFrameElement");
	var readHTMLHtmlElement = Data_Foreign.unsafeReadTagged("HTMLHtmlElement");
	var readHTMLHeadingElement = Data_Foreign.unsafeReadTagged("HTMLHeadingElement");
	var readHTMLHeadElement = Data_Foreign.unsafeReadTagged("HTMLHeadElement");
	var readHTMLHRElement = Data_Foreign.unsafeReadTagged("HTMLHRElement");
	var readHTMLFormElement = Data_Foreign.unsafeReadTagged("HTMLFormElement");
	var readHTMLFieldSetElement = Data_Foreign.unsafeReadTagged("HTMLFieldSetElement");
	var readHTMLEmbedElement = Data_Foreign.unsafeReadTagged("HTMLEmbedElement");
	var readHTMLElement = $foreign._readHTMLElement(function ($0) {
	    return Data_Either.Left.create(Data_Foreign.TypeMismatch.create("HTMLElement")($0));
	})(Data_Either.Right.create);
	var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
	var readHTMLDivElement = Data_Foreign.unsafeReadTagged("HTMLDivElement");
	var readHTMLDataListElement = Data_Foreign.unsafeReadTagged("HTMLDataListElement");
	var readHTMLDataElement = Data_Foreign.unsafeReadTagged("HTMLDataElement");
	var readHTMLDListElement = Data_Foreign.unsafeReadTagged("HTMLDListElement");
	var readHTMLCanvasElement = Data_Foreign.unsafeReadTagged("HTMLCanvasElement");
	var readHTMLButtonElement = Data_Foreign.unsafeReadTagged("HTMLButtonElement");
	var readHTMLBodyElement = Data_Foreign.unsafeReadTagged("HTMLBodyElement");
	var readHTMLBaseElement = Data_Foreign.unsafeReadTagged("HTMLBaseElement");
	var readHTMLBRElement = Data_Foreign.unsafeReadTagged("HTMLBRElement");
	var readHTMLAudioElement = Data_Foreign.unsafeReadTagged("HTMLAudioElement");
	var readHTMLAreaElement = Data_Foreign.unsafeReadTagged("HTMLAreaElement");
	var readHTMLAnchorElement = Data_Foreign.unsafeReadTagged("HTMLAnchorElement");
	var isForeignHTMLUListElement = new Data_Foreign_Class.IsForeign(readHTMLUListElement);
	var isForeignHTMLTrackElement = new Data_Foreign_Class.IsForeign(readHTMLTrackElement);
	var isForeignHTMLTitleElement = new Data_Foreign_Class.IsForeign(readHTMLTitleElement);
	var isForeignHTMLTimeElement = new Data_Foreign_Class.IsForeign(readHTMLTimeElement);
	var isForeignHTMLTextAreaElement = new Data_Foreign_Class.IsForeign(readHTMLTextAreaElement);
	var isForeignHTMLTemplateElement = new Data_Foreign_Class.IsForeign(readHTMLTemplateElement);
	var isForeignHTMLTableSectionElement = new Data_Foreign_Class.IsForeign(readHTMLTableSectionElement);
	var isForeignHTMLTableRowElement = new Data_Foreign_Class.IsForeign(readHTMLTableRowElement);
	var isForeignHTMLTableElement = new Data_Foreign_Class.IsForeign(readHTMLTableElement);
	var isForeignHTMLTableColElement = new Data_Foreign_Class.IsForeign(readHTMLTableColElement);
	var isForeignHTMLTableCaptionElement = new Data_Foreign_Class.IsForeign(readHTMLTableCaptionElement);
	var isForeignHTMLStyleElement = new Data_Foreign_Class.IsForeign(readHTMLStyleElement);
	var isForeignHTMLSpanElement = new Data_Foreign_Class.IsForeign(readHTMLSpanElement);
	var isForeignHTMLSourceElement = new Data_Foreign_Class.IsForeign(readHTMLSourceElement);
	var isForeignHTMLSelectElement = new Data_Foreign_Class.IsForeign(readHTMLSelectElement);
	var isForeignHTMLScriptElement = new Data_Foreign_Class.IsForeign(readHTMLScriptElement);
	var isForeignHTMLQuoteElement = new Data_Foreign_Class.IsForeign(readHTMLQuoteElement);
	var isForeignHTMLProgressElement = new Data_Foreign_Class.IsForeign(readHTMLProgressElement);
	var isForeignHTMLPreElement = new Data_Foreign_Class.IsForeign(readHTMLPreElement);
	var isForeignHTMLParamElement = new Data_Foreign_Class.IsForeign(readHTMLParamElement);
	var isForeignHTMLParagraphElement = new Data_Foreign_Class.IsForeign(readHTMLParagraphElement);
	var isForeignHTMLOutputElement = new Data_Foreign_Class.IsForeign(readHTMLOutputElement);
	var isForeignHTMLOptionElement = new Data_Foreign_Class.IsForeign(readHTMLOptionElement);
	var isForeignHTMLOptGroupElement = new Data_Foreign_Class.IsForeign(readHTMLOptGroupElement);
	var isForeignHTMLObjectElement = new Data_Foreign_Class.IsForeign(readHTMLObjectElement);
	var isForeignHTMLOListElement = new Data_Foreign_Class.IsForeign(readHTMLOListElement);
	var isForeignHTMLModElement = new Data_Foreign_Class.IsForeign(readHTMLModElement);
	var isForeignHTMLMeterElement = new Data_Foreign_Class.IsForeign(readHTMLMeterElement);
	var isForeignHTMLMetaElement = new Data_Foreign_Class.IsForeign(readHTMLMetaElement);
	var isForeignHTMLMapElement = new Data_Foreign_Class.IsForeign(readHTMLMapElement);
	var isForeignHTMLLinkElement = new Data_Foreign_Class.IsForeign(readHTMLLinkElement);
	var isForeignHTMLLegendElement = new Data_Foreign_Class.IsForeign(readHTMLLegendElement);
	var isForeignHTMLLabelElement = new Data_Foreign_Class.IsForeign(readHTMLLabelElement);
	var isForeignHTMLLIElement = new Data_Foreign_Class.IsForeign(readHTMLLIElement);
	var isForeignHTMLKeygenElement = new Data_Foreign_Class.IsForeign(readHTMLKeygenElement);
	var isForeignHTMLInputElement = new Data_Foreign_Class.IsForeign(readHTMLInputElement);
	var isForeignHTMLImageElement = new Data_Foreign_Class.IsForeign(readHTMLImageElement);
	var isForeignHTMLIFrameElement = new Data_Foreign_Class.IsForeign(readHTMLIFrameElement);
	var isForeignHTMLHtmlElement = new Data_Foreign_Class.IsForeign(readHTMLHtmlElement);
	var isForeignHTMLHeadingElement = new Data_Foreign_Class.IsForeign(readHTMLHeadingElement);
	var isForeignHTMLHeadElement = new Data_Foreign_Class.IsForeign(readHTMLHeadElement);
	var isForeignHTMLHRElement = new Data_Foreign_Class.IsForeign(readHTMLHRElement);
	var isForeignHTMLFormElement = new Data_Foreign_Class.IsForeign(readHTMLFormElement);
	var isForeignHTMLFieldSetElement = new Data_Foreign_Class.IsForeign(readHTMLFieldSetElement);
	var isForeignHTMLEmbedElement = new Data_Foreign_Class.IsForeign(readHTMLEmbedElement);
	var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
	var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
	var isForeignHTMLDivElement = new Data_Foreign_Class.IsForeign(readHTMLDivElement);
	var isForeignHTMLDataListElement = new Data_Foreign_Class.IsForeign(readHTMLDataListElement);
	var isForeignHTMLDataElement = new Data_Foreign_Class.IsForeign(readHTMLDataElement);
	var isForeignHTMLDListElement = new Data_Foreign_Class.IsForeign(readHTMLDListElement);
	var isForeignHTMLCanvasElement = new Data_Foreign_Class.IsForeign(readHTMLCanvasElement);
	var isForeignHTMLButtonElement = new Data_Foreign_Class.IsForeign(readHTMLButtonElement);
	var isForeignHTMLBodyElement = new Data_Foreign_Class.IsForeign(readHTMLBodyElement);
	var isForeignHTMLBaseElement = new Data_Foreign_Class.IsForeign(readHTMLBaseElement);
	var isForeignHTMLBRElement = new Data_Foreign_Class.IsForeign(readHTMLBRElement);
	var isForeignHTMLAreaElement = new Data_Foreign_Class.IsForeign(readHTMLAreaElement);
	var isForeignHTMLAnchorElement = new Data_Foreign_Class.IsForeign(readHTMLAnchorElement);
	var htmlVideoElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
	var htmlUListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTrackElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTitleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTimeElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTextAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTemplateElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableSectionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableRowElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableHeaderCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableDataCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableColElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableCellElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableCaptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlStyleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSpanElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSourceElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSelectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlScriptElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlQuoteElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlProgressElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlPreElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlParamElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlParagraphElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOutputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOptGroupElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlObjectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlModElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMeterElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMetaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMediaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMapElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLinkElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLegendElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLabelElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLIElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlKeygenElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlInputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlImageElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlIFrameElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHtmlElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHeadingElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHeadElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlFormElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlFieldSetElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlEmbedElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
	var htmlDivElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDataListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDataElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlCanvasElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlButtonElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBodyElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBaseElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAudioElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAnchorElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    htmlAnchorElementToHTMLElement: htmlAnchorElementToHTMLElement,
	    htmlAreaElementToHTMLElement: htmlAreaElementToHTMLElement,
	    htmlAudioElementToHTMLMediaElement: htmlAudioElementToHTMLMediaElement,
	    htmlBRElementToHTMLElement: htmlBRElementToHTMLElement,
	    htmlBaseElementToHTMLElement: htmlBaseElementToHTMLElement,
	    htmlBodyElementToHTMLElement: htmlBodyElementToHTMLElement,
	    htmlButtonElementToHTMLElement: htmlButtonElementToHTMLElement,
	    htmlCanvasElementToHTMLElement: htmlCanvasElementToHTMLElement,
	    htmlDListElementToHTMLElement: htmlDListElementToHTMLElement,
	    htmlDataElementToHTMLElement: htmlDataElementToHTMLElement,
	    htmlDataListElementToHTMLElement: htmlDataListElementToHTMLElement,
	    htmlDivElementToHTMLElement: htmlDivElementToHTMLElement,
	    htmlDocumentToDocument: htmlDocumentToDocument,
	    htmlDocumentToEventTarget: htmlDocumentToEventTarget,
	    htmlDocumentToNode: htmlDocumentToNode,
	    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode,
	    htmlDocumentToParentNode: htmlDocumentToParentNode,
	    htmlElementToElement: htmlElementToElement,
	    htmlElementToEventTarget: htmlElementToEventTarget,
	    htmlElementToNode: htmlElementToNode,
	    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode,
	    htmlElementToParentNode: htmlElementToParentNode,
	    htmlEmbedElementToHTMLElement: htmlEmbedElementToHTMLElement,
	    htmlFieldSetElementToHTMLElement: htmlFieldSetElementToHTMLElement,
	    htmlFormElementToHTMLElement: htmlFormElementToHTMLElement,
	    htmlHRElementToHTMLElement: htmlHRElementToHTMLElement,
	    htmlHeadElementToHTMLElement: htmlHeadElementToHTMLElement,
	    htmlHeadingElementToHTMLElement: htmlHeadingElementToHTMLElement,
	    htmlHtmlElementToHTMLElement: htmlHtmlElementToHTMLElement,
	    htmlIFrameElementToHTMLElement: htmlIFrameElementToHTMLElement,
	    htmlImageElementToHTMLElement: htmlImageElementToHTMLElement,
	    htmlInputElementToHTMLElement: htmlInputElementToHTMLElement,
	    htmlKeygenElementToHTMLElement: htmlKeygenElementToHTMLElement,
	    htmlLIElementToHTMLElement: htmlLIElementToHTMLElement,
	    htmlLabelElementToHTMLElement: htmlLabelElementToHTMLElement,
	    htmlLegendElementToHTMLElement: htmlLegendElementToHTMLElement,
	    htmlLinkElementToHTMLElement: htmlLinkElementToHTMLElement,
	    htmlMapElementToHTMLElement: htmlMapElementToHTMLElement,
	    htmlMediaElementToHTMLElement: htmlMediaElementToHTMLElement,
	    htmlMetaElementToHTMLElement: htmlMetaElementToHTMLElement,
	    htmlMeterElementToHTMLElement: htmlMeterElementToHTMLElement,
	    htmlModElementToHTMLElement: htmlModElementToHTMLElement,
	    htmlOListElementToHTMLElement: htmlOListElementToHTMLElement,
	    htmlObjectElementToHTMLElement: htmlObjectElementToHTMLElement,
	    htmlOptGroupElementToHTMLElement: htmlOptGroupElementToHTMLElement,
	    htmlOptionElementToHTMLElement: htmlOptionElementToHTMLElement,
	    htmlOutputElementToHTMLElement: htmlOutputElementToHTMLElement,
	    htmlParagraphElementToHTMLElement: htmlParagraphElementToHTMLElement,
	    htmlParamElementToHTMLElement: htmlParamElementToHTMLElement,
	    htmlPreElementToHTMLElement: htmlPreElementToHTMLElement,
	    htmlProgressElementToHTMLElement: htmlProgressElementToHTMLElement,
	    htmlQuoteElementToHTMLElement: htmlQuoteElementToHTMLElement,
	    htmlScriptElementToHTMLElement: htmlScriptElementToHTMLElement,
	    htmlSelectElementToHTMLElement: htmlSelectElementToHTMLElement,
	    htmlSourceElementToHTMLElement: htmlSourceElementToHTMLElement,
	    htmlSpanElementToHTMLElement: htmlSpanElementToHTMLElement,
	    htmlStyleElementToHTMLElement: htmlStyleElementToHTMLElement,
	    htmlTableCaptionElementToHTMLElement: htmlTableCaptionElementToHTMLElement,
	    htmlTableCellElementToHTMLElement: htmlTableCellElementToHTMLElement,
	    htmlTableColElementToHTMLElement: htmlTableColElementToHTMLElement,
	    htmlTableDataCellElementToHTMLTableCellElement: htmlTableDataCellElementToHTMLTableCellElement,
	    htmlTableElementToHTMLElement: htmlTableElementToHTMLElement,
	    htmlTableHeaderCellElementToHTMLTableCellElement: htmlTableHeaderCellElementToHTMLTableCellElement,
	    htmlTableRowElementToHTMLElement: htmlTableRowElementToHTMLElement,
	    htmlTableSectionElementToHTMLElement: htmlTableSectionElementToHTMLElement,
	    htmlTemplateElementToHTMLElement: htmlTemplateElementToHTMLElement,
	    htmlTextAreaElementToHTMLElement: htmlTextAreaElementToHTMLElement,
	    htmlTimeElementToHTMLElement: htmlTimeElementToHTMLElement,
	    htmlTitleElementToHTMLElement: htmlTitleElementToHTMLElement,
	    htmlTrackElementToHTMLElement: htmlTrackElementToHTMLElement,
	    htmlUListElementToHTMLElement: htmlUListElementToHTMLElement,
	    htmlVideoElementToHTMLMediaElement: htmlVideoElementToHTMLMediaElement,
	    readHTMLAnchorElement: readHTMLAnchorElement,
	    readHTMLAreaElement: readHTMLAreaElement,
	    readHTMLAudioElement: readHTMLAudioElement,
	    readHTMLBRElement: readHTMLBRElement,
	    readHTMLBaseElement: readHTMLBaseElement,
	    readHTMLBodyElement: readHTMLBodyElement,
	    readHTMLButtonElement: readHTMLButtonElement,
	    readHTMLCanvasElement: readHTMLCanvasElement,
	    readHTMLDListElement: readHTMLDListElement,
	    readHTMLDataElement: readHTMLDataElement,
	    readHTMLDataListElement: readHTMLDataListElement,
	    readHTMLDivElement: readHTMLDivElement,
	    readHTMLDocument: readHTMLDocument,
	    readHTMLElement: readHTMLElement,
	    readHTMLEmbedElement: readHTMLEmbedElement,
	    readHTMLFieldSetElement: readHTMLFieldSetElement,
	    readHTMLFormElement: readHTMLFormElement,
	    readHTMLHRElement: readHTMLHRElement,
	    readHTMLHeadElement: readHTMLHeadElement,
	    readHTMLHeadingElement: readHTMLHeadingElement,
	    readHTMLHtmlElement: readHTMLHtmlElement,
	    readHTMLIFrameElement: readHTMLIFrameElement,
	    readHTMLImageElement: readHTMLImageElement,
	    readHTMLInputElement: readHTMLInputElement,
	    readHTMLKeygenElement: readHTMLKeygenElement,
	    readHTMLLIElement: readHTMLLIElement,
	    readHTMLLabelElement: readHTMLLabelElement,
	    readHTMLLegendElement: readHTMLLegendElement,
	    readHTMLLinkElement: readHTMLLinkElement,
	    readHTMLMapElement: readHTMLMapElement,
	    readHTMLMediaElement: readHTMLMediaElement,
	    readHTMLMetaElement: readHTMLMetaElement,
	    readHTMLMeterElement: readHTMLMeterElement,
	    readHTMLModElement: readHTMLModElement,
	    readHTMLOListElement: readHTMLOListElement,
	    readHTMLObjectElement: readHTMLObjectElement,
	    readHTMLOptGroupElement: readHTMLOptGroupElement,
	    readHTMLOptionElement: readHTMLOptionElement,
	    readHTMLOutputElement: readHTMLOutputElement,
	    readHTMLParagraphElement: readHTMLParagraphElement,
	    readHTMLParamElement: readHTMLParamElement,
	    readHTMLPreElement: readHTMLPreElement,
	    readHTMLProgressElement: readHTMLProgressElement,
	    readHTMLQuoteElement: readHTMLQuoteElement,
	    readHTMLScriptElement: readHTMLScriptElement,
	    readHTMLSelectElement: readHTMLSelectElement,
	    readHTMLSourceElement: readHTMLSourceElement,
	    readHTMLSpanElement: readHTMLSpanElement,
	    readHTMLStyleElement: readHTMLStyleElement,
	    readHTMLTableCaptionElement: readHTMLTableCaptionElement,
	    readHTMLTableCellElement: readHTMLTableCellElement,
	    readHTMLTableColElement: readHTMLTableColElement,
	    readHTMLTableDataCellElement: readHTMLTableDataCellElement,
	    readHTMLTableElement: readHTMLTableElement,
	    readHTMLTableHeaderCellElement: readHTMLTableHeaderCellElement,
	    readHTMLTableRowElement: readHTMLTableRowElement,
	    readHTMLTableSectionElement: readHTMLTableSectionElement,
	    readHTMLTemplateElement: readHTMLTemplateElement,
	    readHTMLTextAreaElement: readHTMLTextAreaElement,
	    readHTMLTimeElement: readHTMLTimeElement,
	    readHTMLTitleElement: readHTMLTitleElement,
	    readHTMLTrackElement: readHTMLTrackElement,
	    readHTMLUListElement: readHTMLUListElement,
	    readHTMLVideoElement: readHTMLVideoElement,
	    windowToEventTarget: windowToEventTarget,
	    isForeignHTMLDocument: isForeignHTMLDocument,
	    isForeignHTMLElement: isForeignHTMLElement,
	    isForeignHTMLHtmlElement: isForeignHTMLHtmlElement,
	    isForeignHTMLHeadElement: isForeignHTMLHeadElement,
	    isForeignHTMLTitleElement: isForeignHTMLTitleElement,
	    isForeignHTMLBaseElement: isForeignHTMLBaseElement,
	    isForeignHTMLLinkElement: isForeignHTMLLinkElement,
	    isForeignHTMLMetaElement: isForeignHTMLMetaElement,
	    isForeignHTMLStyleElement: isForeignHTMLStyleElement,
	    isForeignHTMLBodyElement: isForeignHTMLBodyElement,
	    isForeignHTMLHeadingElement: isForeignHTMLHeadingElement,
	    isForeignHTMLParagraphElement: isForeignHTMLParagraphElement,
	    isForeignHTMLHRElement: isForeignHTMLHRElement,
	    isForeignHTMLPreElement: isForeignHTMLPreElement,
	    isForeignHTMLQuoteElement: isForeignHTMLQuoteElement,
	    isForeignHTMLOListElement: isForeignHTMLOListElement,
	    isForeignHTMLUListElement: isForeignHTMLUListElement,
	    isForeignHTMLLIElement: isForeignHTMLLIElement,
	    isForeignHTMLDListElement: isForeignHTMLDListElement,
	    isForeignHTMLDivElement: isForeignHTMLDivElement,
	    isForeignHTMLAnchorElement: isForeignHTMLAnchorElement,
	    isForeignHTMLDataElement: isForeignHTMLDataElement,
	    isForeignHTMLTimeElement: isForeignHTMLTimeElement,
	    isForeignHTMLSpanElement: isForeignHTMLSpanElement,
	    isForeignHTMLBRElement: isForeignHTMLBRElement,
	    isForeignHTMLModElement: isForeignHTMLModElement,
	    isForeignHTMLImageElement: isForeignHTMLImageElement,
	    isForeignHTMLIFrameElement: isForeignHTMLIFrameElement,
	    isForeignHTMLEmbedElement: isForeignHTMLEmbedElement,
	    isForeignHTMLObjectElement: isForeignHTMLObjectElement,
	    isForeignHTMLParamElement: isForeignHTMLParamElement,
	    isForeignHTMLSourceElement: isForeignHTMLSourceElement,
	    isForeignHTMLTrackElement: isForeignHTMLTrackElement,
	    isForeignHTMLMapElement: isForeignHTMLMapElement,
	    isForeignHTMLAreaElement: isForeignHTMLAreaElement,
	    isForeignHTMLTableElement: isForeignHTMLTableElement,
	    isForeignHTMLTableCaptionElement: isForeignHTMLTableCaptionElement,
	    isForeignHTMLTableColElement: isForeignHTMLTableColElement,
	    isForeignHTMLTableSectionElement: isForeignHTMLTableSectionElement,
	    isForeignHTMLTableRowElement: isForeignHTMLTableRowElement,
	    isForeignHTMLFormElement: isForeignHTMLFormElement,
	    isForeignHTMLLabelElement: isForeignHTMLLabelElement,
	    isForeignHTMLInputElement: isForeignHTMLInputElement,
	    isForeignHTMLButtonElement: isForeignHTMLButtonElement,
	    isForeignHTMLSelectElement: isForeignHTMLSelectElement,
	    isForeignHTMLDataListElement: isForeignHTMLDataListElement,
	    isForeignHTMLOptGroupElement: isForeignHTMLOptGroupElement,
	    isForeignHTMLOptionElement: isForeignHTMLOptionElement,
	    isForeignHTMLTextAreaElement: isForeignHTMLTextAreaElement,
	    isForeignHTMLKeygenElement: isForeignHTMLKeygenElement,
	    isForeignHTMLOutputElement: isForeignHTMLOutputElement,
	    isForeignHTMLProgressElement: isForeignHTMLProgressElement,
	    isForeignHTMLMeterElement: isForeignHTMLMeterElement,
	    isForeignHTMLFieldSetElement: isForeignHTMLFieldSetElement,
	    isForeignHTMLLegendElement: isForeignHTMLLegendElement,
	    isForeignHTMLScriptElement: isForeignHTMLScriptElement,
	    isForeignHTMLTemplateElement: isForeignHTMLTemplateElement,
	    isForeignHTMLCanvasElement: isForeignHTMLCanvasElement
	};

/***/ },
/* 166 */
/***/ function(module, exports) {

	"use strict";

	exports._readHTMLElement = function (failure) {
	  return function (success) {
	    return function (value) {
	      var tag = Object.prototype.toString.call(value);
	      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
	        return success(value);
	      } else {
	        return failure(tag);
	      }
	    };
	  };
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(168);
	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Data_Int = __webpack_require__(169);
	var Data_Maybe = __webpack_require__(72);
	var Data_String = __webpack_require__(126);
	var Data_Show = __webpack_require__(15);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Eq = __webpack_require__(28);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Ord = __webpack_require__(26);
	var Data_Ordering = __webpack_require__(33);
	var Control_Applicative = __webpack_require__(5);
	var Data_Function = __webpack_require__(10);
	var Control_Semigroupoid = __webpack_require__(12);
	var Prop = function Prop(x) {
	    return x;
	};
	var TypeMismatch = function () {
	    function TypeMismatch(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    TypeMismatch.create = function (value0) {
	        return function (value1) {
	            return new TypeMismatch(value0, value1);
	        };
	    };
	    return TypeMismatch;
	}();
	var ErrorAtIndex = function () {
	    function ErrorAtIndex(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ErrorAtIndex.create = function (value0) {
	        return function (value1) {
	            return new ErrorAtIndex(value0, value1);
	        };
	    };
	    return ErrorAtIndex;
	}();
	var ErrorAtProperty = function () {
	    function ErrorAtProperty(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ErrorAtProperty.create = function (value0) {
	        return function (value1) {
	            return new ErrorAtProperty(value0, value1);
	        };
	    };
	    return ErrorAtProperty;
	}();
	var JSONError = function () {
	    function JSONError(value0) {
	        this.value0 = value0;
	    };
	    JSONError.create = function (value0) {
	        return new JSONError(value0);
	    };
	    return JSONError;
	}();
	var unsafeReadTagged = function unsafeReadTagged(tag) {
	    return function (value) {
	        if ($foreign.tagOf(value) === tag) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
	        };
	        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
	    };
	};
	var showForeignError = new Data_Show.Show(function (v) {
	    if (v instanceof TypeMismatch) {
	        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
	    };
	    if (v instanceof ErrorAtIndex) {
	        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
	    };
	    if (v instanceof ErrorAtProperty) {
	        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
	    };
	    if (v instanceof JSONError) {
	        return "JSON error: " + v.value0;
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 55, column 3 - line 55, column 87: " + [v.constructor.name]);
	});
	var readString = unsafeReadTagged("String");
	var readNumber = unsafeReadTagged("Number");
	var readInt = function readInt(value) {
	    var error = Data_Function.apply(Data_Either.Left.create)(new TypeMismatch("Int", $foreign.tagOf(value)));
	    var fromNumber = function fromNumber($91) {
	        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($91));
	    };
	    return Data_Either.either(Data_Function["const"](error))(fromNumber)(readNumber(value));
	};
	var readChar = function readChar(value) {
	    var error = Data_Function.apply(Data_Either.Left.create)(new TypeMismatch("Char", $foreign.tagOf(value)));
	    var fromString = function fromString($92) {
	        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($92));
	    };
	    return Data_Either.either(Data_Function["const"](error))(fromString)(readString(value));
	};
	var readBoolean = unsafeReadTagged("Boolean");
	var readArray = function readArray(value) {
	    if ($foreign.isArray(value)) {
	        return Data_Function.apply(Control_Applicative.pure(Data_Either.applicativeEither))($foreign.unsafeFromForeign(value));
	    };
	    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
	};
	var parseJSON = function parseJSON(json) {
	    return Data_Function_Uncurried.runFn3($foreign.parseJSONImpl)(function ($93) {
	        return Data_Either.Left.create(JSONError.create($93));
	    })(Data_Either.Right.create)(json);
	};
	var eqForeignError = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
	            return x.value0 === y.value0 && x.value1 === y.value1;
	        };
	        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
	            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
	            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof JSONError && y instanceof JSONError) {
	            return x.value0 === y.value0;
	        };
	        return false;
	    };
	});
	var ordForeignError = new Data_Ord.Ord(function () {
	    return eqForeignError;
	}, function (x) {
	    return function (y) {
	        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
	            var $62 = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	            if ($62 instanceof Data_Ordering.LT) {
	                return Data_Ordering.LT.value;
	            };
	            if ($62 instanceof Data_Ordering.GT) {
	                return Data_Ordering.GT.value;
	            };
	            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
	        };
	        if (x instanceof TypeMismatch) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof TypeMismatch) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
	            var $71 = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
	            if ($71 instanceof Data_Ordering.LT) {
	                return Data_Ordering.LT.value;
	            };
	            if ($71 instanceof Data_Ordering.GT) {
	                return Data_Ordering.GT.value;
	            };
	            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof ErrorAtIndex) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof ErrorAtIndex) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
	            var $80 = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	            if ($80 instanceof Data_Ordering.LT) {
	                return Data_Ordering.LT.value;
	            };
	            if ($80 instanceof Data_Ordering.GT) {
	                return Data_Ordering.GT.value;
	            };
	            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
	        };
	        if (x instanceof ErrorAtProperty) {
	            return Data_Ordering.LT.value;
	        };
	        if (y instanceof ErrorAtProperty) {
	            return Data_Ordering.GT.value;
	        };
	        if (x instanceof JSONError && y instanceof JSONError) {
	            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	        };
	        throw new Error("Failed pattern match: " + [x.constructor.name, y.constructor.name]);
	    };
	});
	module.exports = {
	    TypeMismatch: TypeMismatch,
	    ErrorAtIndex: ErrorAtIndex,
	    ErrorAtProperty: ErrorAtProperty,
	    JSONError: JSONError,
	    Prop: Prop,
	    parseJSON: parseJSON,
	    readArray: readArray,
	    readBoolean: readBoolean,
	    readChar: readChar,
	    readInt: readInt,
	    readNumber: readNumber,
	    readString: readString,
	    unsafeReadTagged: unsafeReadTagged,
	    showForeignError: showForeignError,
	    eqForeignError: eqForeignError,
	    ordForeignError: ordForeignError,
	    isArray: $foreign.isArray,
	    isNull: $foreign.isNull,
	    isUndefined: $foreign.isUndefined,
	    tagOf: $foreign.tagOf,
	    toForeign: $foreign.toForeign,
	    typeOf: $foreign.typeOf,
	    unsafeFromForeign: $foreign.unsafeFromForeign,
	    writeObject: $foreign.writeObject
	};

/***/ },
/* 168 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// jshint maxparams: 3

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.parseJSONImpl = function (left, right, str) {
	  try {
	    return right(JSON.parse(str));
	  } catch (e) {
	    return left(e.toString());
	  }
	};
	// jshint maxparams: 1

	exports.toForeign = function (value) {
	  return value;
	};

	exports.unsafeFromForeign = function (value) {
	  return value;
	};

	exports.typeOf = function (value) {
	  return typeof value === "undefined" ? "undefined" : _typeof(value);
	};

	exports.tagOf = function (value) {
	  return Object.prototype.toString.call(value).slice(8, -1);
	};

	exports.isNull = function (value) {
	  return value === null;
	};

	exports.isUndefined = function (value) {
	  return value === undefined;
	};

	exports.isArray = Array.isArray || function (value) {
	  return Object.prototype.toString.call(value) === "[object Array]";
	};

	exports.writeObject = function (fields) {
	  var record = {};
	  for (var i = 0; i < fields.length; i++) {
	    record[fields[i].key] = fields[i].value;
	  }
	  return record;
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(170);
	var Data_Boolean = __webpack_require__(20);
	var Data_BooleanAlgebra = __webpack_require__(21);
	var Data_Bounded = __webpack_require__(24);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Int_Bits = __webpack_require__(171);
	var Data_Maybe = __webpack_require__(72);
	var Data_Ord = __webpack_require__(26);
	var $$Math = __webpack_require__(173);
	var Partial_Unsafe = __webpack_require__(91);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Control_Semigroupoid = __webpack_require__(12);
	var Radix = function Radix(x) {
	    return x;
	};
	var radix = function radix(n) {
	    if (n >= 2 && n <= 36) {
	        return new Data_Maybe.Just(n);
	    };
	    if (Data_Boolean.otherwise) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Int line 124, column 1 - line 125, column 38: " + [n.constructor.name]);
	};
	var odd = function odd(x) {
	    return Data_Int_Bits.and(x)(1) !== 0;
	};
	var octal = 8;
	var hexadecimal = 16;
	var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var fromString = fromStringAs(10);
	var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unsafeClamp = function unsafeClamp(x) {
	    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
	        return Data_Bounded.top(Data_Bounded.boundedInt);
	    };
	    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
	        return Data_Bounded.bottom(Data_Bounded.boundedInt);
	    };
	    if (Data_Boolean.otherwise) {
	        return Partial_Unsafe.unsafePartial(function (dictPartial) {
	            return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
	        });
	    };
	    throw new Error("Failed pattern match at Data.Int line 65, column 1 - line 68, column 56: " + [x.constructor.name]);
	};
	var round = function round($3) {
	    return unsafeClamp($$Math.round($3));
	};
	var floor = function floor($4) {
	    return unsafeClamp($$Math.floor($4));
	};
	var even = function even(x) {
	    return Data_Int_Bits.and(x)(1) === 0;
	};
	var decimal = 10;
	var ceil = function ceil($5) {
	    return unsafeClamp($$Math.ceil($5));
	};
	var binary = 2;
	var base36 = 36;
	module.exports = {
	    base36: base36,
	    binary: binary,
	    ceil: ceil,
	    decimal: decimal,
	    even: even,
	    floor: floor,
	    fromNumber: fromNumber,
	    fromString: fromString,
	    fromStringAs: fromStringAs,
	    hexadecimal: hexadecimal,
	    octal: octal,
	    odd: odd,
	    radix: radix,
	    round: round,
	    toNumber: $foreign.toNumber,
	    toStringAs: $foreign.toStringAs
	};

/***/ },
/* 170 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Int

	exports.fromNumberImpl = function (just) {
	  return function (nothing) {
	    return function (n) {
	      /* jshint bitwise: false */
	      return (n | 0) === n ? just(n) : nothing;
	    };
	  };
	};

	exports.toNumber = function (n) {
	  return n;
	};

	exports.fromStringAsImpl = function (just) {
	  return function (nothing) {
	    return function (radix) {
	      var digits;
	      if (radix < 11) {
	        digits = "[0-" + (radix - 1).toString() + "]";
	      } else if (radix === 11) {
	        digits = "[0-9a]";
	      } else {
	        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
	      }
	      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

	      return function (s) {
	        /* jshint bitwise: false */
	        if (pattern.test(s)) {
	          var i = parseInt(s, radix);
	          return (i | 0) === i ? just(i) : nothing;
	        } else {
	          return nothing;
	        }
	      };
	    };
	  };
	};

	exports.toStringAs = function (radix) {
	  return function (i) {
	    return i.toString(radix);
	  };
	};

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(172);
	module.exports = {
	    and: $foreign.and,
	    complement: $foreign.complement,
	    or: $foreign.or,
	    shl: $foreign.shl,
	    shr: $foreign.shr,
	    xor: $foreign.xor,
	    zshr: $foreign.zshr
	};

/***/ },
/* 172 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Int.Bits

	exports.and = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 & n2;
	  };
	};

	exports.or = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 | n2;
	  };
	};

	exports.xor = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 ^ n2;
	  };
	};

	exports.shl = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 << n2;
	  };
	};

	exports.shr = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 >> n2;
	  };
	};

	exports.zshr = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 >>> n2;
	  };
	};

	exports.complement = function (n) {
	  /* jshint bitwise: false */
	  return ~n;
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(174);
	module.exports = {
	    abs: $foreign.abs,
	    acos: $foreign.acos,
	    asin: $foreign.asin,
	    atan: $foreign.atan,
	    atan2: $foreign.atan2,
	    ceil: $foreign.ceil,
	    cos: $foreign.cos,
	    e: $foreign.e,
	    exp: $foreign.exp,
	    floor: $foreign.floor,
	    ln10: $foreign.ln10,
	    ln2: $foreign.ln2,
	    log: $foreign.log,
	    log10e: $foreign.log10e,
	    log2e: $foreign.log2e,
	    max: $foreign.max,
	    min: $foreign.min,
	    pi: $foreign.pi,
	    pow: $foreign.pow,
	    remainder: $foreign.remainder,
	    round: $foreign.round,
	    sin: $foreign.sin,
	    sqrt: $foreign.sqrt,
	    sqrt1_2: $foreign.sqrt1_2,
	    sqrt2: $foreign.sqrt2,
	    tan: $foreign.tan,
	    trunc: $foreign.trunc
	};

/***/ },
/* 174 */
/***/ function(module, exports) {

	"use strict";

	// module Math

	exports.abs = Math.abs;

	exports.acos = Math.acos;

	exports.asin = Math.asin;

	exports.atan = Math.atan;

	exports.atan2 = function (y) {
	  return function (x) {
	    return Math.atan2(y, x);
	  };
	};

	exports.ceil = Math.ceil;

	exports.cos = Math.cos;

	exports.exp = Math.exp;

	exports.floor = Math.floor;

	exports.trunc = Math.trunc || function (n) {
	  return n < 0 ? Math.ceil(n) : Math.floor(n);
	};

	exports.log = Math.log;

	exports.max = function (n1) {
	  return function (n2) {
	    return Math.max(n1, n2);
	  };
	};

	exports.min = function (n1) {
	  return function (n2) {
	    return Math.min(n1, n2);
	  };
	};

	exports.pow = function (n) {
	  return function (p) {
	    return Math.pow(n, p);
	  };
	};

	exports.remainder = function (n) {
	  return function (m) {
	    return n % m;
	  };
	};

	exports.round = Math.round;

	exports.sin = Math.sin;

	exports.sqrt = Math.sqrt;

	exports.tan = Math.tan;

	exports.e = Math.E;

	exports.ln2 = Math.LN2;

	exports.ln10 = Math.LN10;

	exports.log2e = Math.LOG2E;

	exports.log10e = Math.LOG10E;

	exports.pi = Math.PI;

	exports.sqrt1_2 = Math.SQRT1_2;

	exports.sqrt2 = Math.SQRT2;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Array = __webpack_require__(122);
	var Data_Either = __webpack_require__(58);
	var Data_Foreign = __webpack_require__(167);
	var Data_Foreign_Index = __webpack_require__(176);
	var Data_Foreign_Null = __webpack_require__(178);
	var Data_Foreign_NullOrUndefined = __webpack_require__(180);
	var Data_Foreign_Undefined = __webpack_require__(181);
	var Data_Traversable = __webpack_require__(78);
	var Data_Maybe = __webpack_require__(72);
	var Control_Applicative = __webpack_require__(5);
	var Data_Semiring = __webpack_require__(38);
	var Control_Bind = __webpack_require__(17);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var IsForeign = function IsForeign(read) {
	    this.read = read;
	};
	var AsForeign = function AsForeign(write) {
	    this.write = write;
	};
	var write = function write(dict) {
	    return dict.write;
	};
	var writeProp = function writeProp(dictAsForeign) {
	    return function (k) {
	        return function (v) {
	            return {
	                key: k,
	                value: write(dictAsForeign)(v)
	            };
	        };
	    };
	};
	var undefinedAsForeign = function undefinedAsForeign(dictAsForeign) {
	    return new AsForeign(function (v) {
	        return Data_Maybe.maybe(Data_Foreign_Undefined.writeUndefined)(write(dictAsForeign))(v);
	    });
	};
	var stringIsForeign = new IsForeign(Data_Foreign.readString);
	var stringAsForeign = new AsForeign(Data_Foreign.toForeign);
	var read = function read(dict) {
	    return dict.read;
	};
	var readJSON = function readJSON(dictIsForeign) {
	    return function (json) {
	        return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(dictIsForeign));
	    };
	};
	var readWith = function readWith(dictIsForeign) {
	    return function (f) {
	        return function (value) {
	            return Data_Either.either(function ($19) {
	                return Data_Either.Left.create(f($19));
	            })(Data_Either.Right.create)(read(dictIsForeign)(value));
	        };
	    };
	};
	var readProp = function readProp(dictIsForeign) {
	    return function (dictIndex) {
	        return function (prop) {
	            return function (value) {
	                return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign_Index.ix(dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Foreign_Index.errorAt(dictIndex)(prop)));
	            };
	        };
	    };
	};
	var undefinedIsForeign = function undefinedIsForeign(dictIsForeign) {
	    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(dictIsForeign)));
	};
	var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
	var numberAsForeign = new AsForeign(Data_Foreign.toForeign);
	var nullOrUndefinedIsForeign = function nullOrUndefinedIsForeign(dictIsForeign) {
	    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(dictIsForeign)));
	};
	var nullIsForeign = function nullIsForeign(dictIsForeign) {
	    return new IsForeign(Data_Foreign_Null.readNull(read(dictIsForeign)));
	};
	var nullAsForeign = function nullAsForeign(dictAsForeign) {
	    return new AsForeign(function (v) {
	        return Data_Maybe.maybe(Data_Foreign_Null.writeNull)(write(dictAsForeign))(v);
	    });
	};
	var nullOrUndefinedAsForeign = function nullOrUndefinedAsForeign(dictAsForeign) {
	    return new AsForeign(function (v) {
	        return write(nullAsForeign(dictAsForeign))(v);
	    });
	};
	var intIsForeign = new IsForeign(Data_Foreign.readInt);
	var intAsForeign = new AsForeign(Data_Foreign.toForeign);
	var foreignIsForeign = new IsForeign(Control_Applicative.pure(Data_Either.applicativeEither));
	var foreignAsForeign = new AsForeign(Control_Category.id(Control_Category.categoryFn));
	var charIsForeign = new IsForeign(Data_Foreign.readChar);
	var charAsForeign = new AsForeign(Data_Foreign.toForeign);
	var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
	var booleanAsForeign = new AsForeign(Data_Foreign.toForeign);
	var arrayIsForeign = function arrayIsForeign(dictIsForeign) {
	    return new IsForeign(function (value) {
	        var readElement = function readElement(i) {
	            return function (value1) {
	                return readWith(dictIsForeign)(Data_Foreign.ErrorAtIndex.create(i))(value1);
	            };
	        };
	        var readElements = function readElements(arr) {
	            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
	        };
	        return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
	    });
	};
	var arrayAsForeign = function arrayAsForeign(dictAsForeign) {
	    return new AsForeign(function ($20) {
	        return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(write(dictAsForeign))($20));
	    });
	};
	module.exports = {
	    AsForeign: AsForeign,
	    IsForeign: IsForeign,
	    read: read,
	    readJSON: readJSON,
	    readProp: readProp,
	    readWith: readWith,
	    write: write,
	    writeProp: writeProp,
	    foreignIsForeign: foreignIsForeign,
	    stringIsForeign: stringIsForeign,
	    charIsForeign: charIsForeign,
	    booleanIsForeign: booleanIsForeign,
	    numberIsForeign: numberIsForeign,
	    intIsForeign: intIsForeign,
	    arrayIsForeign: arrayIsForeign,
	    nullIsForeign: nullIsForeign,
	    undefinedIsForeign: undefinedIsForeign,
	    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign,
	    foreignAsForeign: foreignAsForeign,
	    stringAsForeign: stringAsForeign,
	    charAsForeign: charAsForeign,
	    booleanAsForeign: booleanAsForeign,
	    numberAsForeign: numberAsForeign,
	    intAsForeign: intAsForeign,
	    arrayAsForeign: arrayAsForeign,
	    nullAsForeign: nullAsForeign,
	    undefinedAsForeign: undefinedAsForeign,
	    nullOrUndefinedAsForeign: nullOrUndefinedAsForeign
	};

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(177);
	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Foreign = __webpack_require__(167);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Data_Function = __webpack_require__(10);
	var Control_Applicative = __webpack_require__(5);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Eq = __webpack_require__(28);
	var Index = function Index(errorAt, hasOwnProperty, hasProperty, ix) {
	    this.errorAt = errorAt;
	    this.hasOwnProperty = hasOwnProperty;
	    this.hasProperty = hasProperty;
	    this.ix = ix;
	};
	var unsafeReadProp = function unsafeReadProp(k) {
	    return function (value) {
	        return Data_Function_Uncurried.runFn4($foreign.unsafeReadPropImpl)(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))))(Control_Applicative.pure(Data_Either.applicativeEither))(k)(value);
	    };
	};
	var prop = unsafeReadProp;
	var ix = function ix(dict) {
	    return dict.ix;
	};
	var index = unsafeReadProp;
	var hasPropertyImpl = function hasPropertyImpl(v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value)) {
	            return false;
	        };
	        if (Data_Foreign.isUndefined(value)) {
	            return false;
	        };
	        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
	            return Data_Function_Uncurried.runFn2($foreign.unsafeHasProperty)(v)(value);
	        };
	        return false;
	    };
	};
	var hasProperty = function hasProperty(dict) {
	    return dict.hasProperty;
	};
	var hasOwnPropertyImpl = function hasOwnPropertyImpl(v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value)) {
	            return false;
	        };
	        if (Data_Foreign.isUndefined(value)) {
	            return false;
	        };
	        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
	            return Data_Function_Uncurried.runFn2($foreign.unsafeHasOwnProperty)(v)(value);
	        };
	        return false;
	    };
	};
	var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(index));
	var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(prop));
	var hasOwnProperty = function hasOwnProperty(dict) {
	    return dict.hasOwnProperty;
	};
	var errorAt = function errorAt(dict) {
	    return dict.errorAt;
	};
	module.exports = {
	    Index: Index,
	    errorAt: errorAt,
	    hasOwnProperty: hasOwnProperty,
	    hasProperty: hasProperty,
	    index: index,
	    ix: ix,
	    prop: prop,
	    indexString: indexString,
	    indexInt: indexInt
	};

/***/ },
/* 177 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// jshint maxparams: 4

	exports.unsafeReadPropImpl = function (f, s, key, value) {
	  return value == null ? f : s(value[key]);
	};

	// jshint maxparams: 2
	exports.unsafeHasOwnProperty = function (prop, value) {
	  return Object.prototype.hasOwnProperty.call(value, prop);
	};

	exports.unsafeHasProperty = function (prop, value) {
	  return prop in value;
	};

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(179);
	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_Foreign = __webpack_require__(167);
	var Control_Applicative = __webpack_require__(5);
	var Data_Either = __webpack_require__(58);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Null = function Null(x) {
	    return x;
	};
	var unNull = function unNull(v) {
	    return v;
	};
	var readNull = function readNull(v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value)) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Either.functorEither)(function ($5) {
	            return Null(Data_Maybe.Just.create($5));
	        })(v(value));
	    };
	};
	module.exports = {
	    Null: Null,
	    readNull: readNull,
	    unNull: unNull,
	    writeNull: $foreign.writeNull
	};

/***/ },
/* 179 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	exports.writeNull = null;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_Foreign = __webpack_require__(167);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Control_Applicative = __webpack_require__(5);
	var Data_Either = __webpack_require__(58);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var NullOrUndefined = function NullOrUndefined(x) {
	    return x;
	};
	var unNullOrUndefined = function unNullOrUndefined(v) {
	    return v;
	};
	var readNullOrUndefined = function readNullOrUndefined(v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Either.functorEither)(function ($5) {
	            return NullOrUndefined(Data_Maybe.Just.create($5));
	        })(v(value));
	    };
	};
	module.exports = {
	    NullOrUndefined: NullOrUndefined,
	    readNullOrUndefined: readNullOrUndefined,
	    unNullOrUndefined: unNullOrUndefined
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(182);
	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_Foreign = __webpack_require__(167);
	var Control_Applicative = __webpack_require__(5);
	var Data_Either = __webpack_require__(58);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Undefined = function Undefined(x) {
	    return x;
	};
	var unUndefined = function unUndefined(v) {
	    return v;
	};
	var readUndefined = function readUndefined(v) {
	    return function (value) {
	        if (Data_Foreign.isUndefined(value)) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Either.functorEither)(function ($5) {
	            return Undefined(Data_Maybe.Just.create($5));
	        })(v(value));
	    };
	};
	module.exports = {
	    Undefined: Undefined,
	    readUndefined: readUndefined,
	    unUndefined: unUndefined,
	    writeUndefined: $foreign.writeUndefined
	};

/***/ },
/* 182 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	exports.writeUndefined = undefined;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(184);
	var Prelude = __webpack_require__(4);
	var Data_Either = __webpack_require__(58);
	var Data_Foreign = __webpack_require__(167);
	var Data_Foreign_Class = __webpack_require__(175);
	var Unsafe_Coerce = __webpack_require__(112);
	var Data_Eq = __webpack_require__(28);
	var Data_Ord = __webpack_require__(26);
	var EventType = function EventType(x) {
	    return x;
	};
	var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
	var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
	var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
	var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
	var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
	var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
	var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
	var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
	var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
	var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
	var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
	var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
	var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
	var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
	var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
	var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
	var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
	var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
	var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
	var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
	var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
	var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
	var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var eqEventType = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordEventType = new Data_Ord.Ord(function () {
	    return eqEventType;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
	    };
	});
	var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    EventType: EventType,
	    compositionEventToEvent: compositionEventToEvent,
	    customEventToEvent: customEventToEvent,
	    focusEventToEvent: focusEventToEvent,
	    inputEventToEvent: inputEventToEvent,
	    keyboardEventToEvent: keyboardEventToEvent,
	    mouseEventToEvent: mouseEventToEvent,
	    progressEventToEvent: progressEventToEvent,
	    readCompositionEvent: readCompositionEvent,
	    readCustomEvent: readCustomEvent,
	    readEventTarget: readEventTarget,
	    readFocusEvent: readFocusEvent,
	    readInputEvent: readInputEvent,
	    readKeyboardEvent: readKeyboardEvent,
	    readMouseEvent: readMouseEvent,
	    readProgressEvent: readProgressEvent,
	    readTouchEvent: readTouchEvent,
	    readUIEvent: readUIEvent,
	    readWheelEvent: readWheelEvent,
	    touchEventToEvent: touchEventToEvent,
	    uiEventToEvent: uiEventToEvent,
	    wheelEventToEvent: wheelEventToEvent,
	    eqEventType: eqEventType,
	    ordEventType: ordEventType,
	    isForeignEventTarget: isForeignEventTarget,
	    isForeignCustomEvent: isForeignCustomEvent,
	    isForeignUIEvent: isForeignUIEvent,
	    isForeignFocusEvent: isForeignFocusEvent,
	    isForeignMouseEvent: isForeignMouseEvent,
	    isForeignWheelEvent: isForeignWheelEvent,
	    isForeignTouchEvent: isForeignTouchEvent,
	    isForeignInputEvent: isForeignInputEvent,
	    isForeignKeyboardEvent: isForeignKeyboardEvent,
	    isForeignCompositionEvent: isForeignCompositionEvent,
	    isForeignProgressEvent: isForeignProgressEvent
	};

/***/ },
/* 184 */
/***/ function(module, exports) {

	/* global EventTarget */
	"use strict";

	exports._readEventTarget = function (left) {
	  return function (right) {
	    return function (foreign) {
	      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
	    };
	  };
	};

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var DOM_Event_Types = __webpack_require__(183);
	var Unsafe_Coerce = __webpack_require__(112);
	var ElementId = function ElementId(x) {
	    return x;
	};
	var textToNode = Unsafe_Coerce.unsafeCoerce;
	var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
	var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
	var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	var elementToNode = Unsafe_Coerce.unsafeCoerce;
	var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
	var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentToNode = Unsafe_Coerce.unsafeCoerce;
	var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
	var commentToNode = Unsafe_Coerce.unsafeCoerce;
	var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    ElementId: ElementId,
	    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode,
	    commentToNode: commentToNode,
	    documentFragmentToNode: documentFragmentToNode,
	    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode,
	    documentFragmentToParentNode: documentFragmentToParentNode,
	    documentToEventTarget: documentToEventTarget,
	    documentToNode: documentToNode,
	    documentToNonElementParentNode: documentToNonElementParentNode,
	    documentToParentNode: documentToParentNode,
	    documentTypeToNode: documentTypeToNode,
	    elementToEventTarget: elementToEventTarget,
	    elementToNode: elementToNode,
	    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode,
	    elementToParentNode: elementToParentNode,
	    processingInstructionToNode: processingInstructionToNode,
	    textToNode: textToNode
	};

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(187);
	var Prelude = __webpack_require__(4);
	var Control_Apply = __webpack_require__(6);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Writer = __webpack_require__(188);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Data_Foldable = __webpack_require__(70);
	var Data_Tuple = __webpack_require__(100);
	var DOM = __webpack_require__(189);
	var Halogen_HTML_Events_Types = __webpack_require__(190);
	var Data_Functor = __webpack_require__(8);
	var Control_Applicative = __webpack_require__(5);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad = __webpack_require__(19);
	var Control_Monad_Writer_Trans = __webpack_require__(153);
	var Data_Monoid = __webpack_require__(61);
	var Data_Identity = __webpack_require__(90);
	var Data_Function = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(34);
	var PreventDefault = function () {
	    function PreventDefault() {};
	    PreventDefault.value = new PreventDefault();
	    return PreventDefault;
	}();
	var StopPropagation = function () {
	    function StopPropagation() {};
	    StopPropagation.value = new StopPropagation();
	    return StopPropagation;
	}();
	var StopImmediatePropagation = function () {
	    function StopImmediatePropagation() {};
	    StopImmediatePropagation.value = new StopImmediatePropagation();
	    return StopImmediatePropagation;
	}();
	var EventHandler = function EventHandler(x) {
	    return x;
	};
	var unEventHandler = function unEventHandler(v) {
	    return v;
	};
	var stopPropagation = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([StopPropagation.value]);
	var stopImmediatePropagation = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([StopImmediatePropagation.value]);
	var runEventHandler = function runEventHandler(dictMonad) {
	    return function (dictMonadEff) {
	        return function (e) {
	            return function (v) {
	                var applyUpdate = function applyUpdate(v1) {
	                    if (v1 instanceof PreventDefault) {
	                        return $foreign.preventDefaultImpl(e);
	                    };
	                    if (v1 instanceof StopPropagation) {
	                        return $foreign.stopPropagationImpl(e);
	                    };
	                    if (v1 instanceof StopImmediatePropagation) {
	                        return $foreign.stopImmediatePropagationImpl(e);
	                    };
	                    throw new Error("Failed pattern match at Halogen.HTML.Events.Handler line 89, column 3 - line 89, column 63: " + [v1.constructor.name]);
	                };
	                var $13 = Control_Monad_Writer.runWriter(v);
	                return Data_Function.apply(Control_Monad_Eff_Class.liftEff(dictMonadEff))(Control_Apply.applySecond(Control_Monad_Eff.applyEff)(Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)($13.value1)(applyUpdate))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($13.value0)));
	            };
	        };
	    };
	};
	var preventDefault = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([PreventDefault.value]);
	var functorEventHandler = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(v);
	    };
	});
	var applyEventHandler = new Control_Apply.Apply(function () {
	    return functorEventHandler;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Control_Monad_Writer_Trans.applyWriterT(Data_Semigroup.semigroupArray)(Data_Identity.applyIdentity))(v)(v1);
	    };
	});
	var bindEventHandler = new Control_Bind.Bind(function () {
	    return applyEventHandler;
	}, function (v) {
	    return function (f) {
	        return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.monadIdentity))(v)(function ($22) {
	            return unEventHandler(f($22));
	        });
	    };
	});
	var applicativeEventHandler = new Control_Applicative.Applicative(function () {
	    return applyEventHandler;
	}, function ($23) {
	    return EventHandler(Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))($23));
	});
	var monadEventHandler = new Control_Monad.Monad(function () {
	    return applicativeEventHandler;
	}, function () {
	    return bindEventHandler;
	});
	module.exports = {
	    preventDefault: preventDefault,
	    runEventHandler: runEventHandler,
	    stopImmediatePropagation: stopImmediatePropagation,
	    stopPropagation: stopPropagation,
	    functorEventHandler: functorEventHandler,
	    applyEventHandler: applyEventHandler,
	    applicativeEventHandler: applicativeEventHandler,
	    bindEventHandler: bindEventHandler,
	    monadEventHandler: monadEventHandler
	};

/***/ },
/* 187 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Halogen.HTML.Events.Handler

	exports.preventDefaultImpl = function (e) {
	  return function () {
	    e.preventDefault();
	  };
	};

	exports.stopPropagationImpl = function (e) {
	  return function () {
	    e.stopPropagation();
	  };
	};

	exports.stopImmediatePropagationImpl = function (e) {
	  return function () {
	    e.stopImmediatePropagation();
	  };
	};

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Writer_Class = __webpack_require__(107);
	var Control_Monad_Writer_Trans = __webpack_require__(153);
	var Data_Identity = __webpack_require__(90);
	var Data_Tuple = __webpack_require__(100);
	var Control_Semigroupoid = __webpack_require__(12);
	var runWriter = function runWriter($0) {
	    return Data_Identity.runIdentity(Control_Monad_Writer_Trans.runWriterT($0));
	};
	var mapWriter = function mapWriter(f) {
	    return Control_Monad_Writer_Trans.mapWriterT(function ($1) {
	        return Data_Identity.Identity(f(Data_Identity.runIdentity($1)));
	    });
	};
	var execWriter = function execWriter(m) {
	    return Data_Tuple.snd(runWriter(m));
	};
	module.exports = {
	    execWriter: execWriter,
	    mapWriter: mapWriter,
	    runWriter: runWriter
	};

/***/ },
/* 189 */
/***/ function(module, exports) {

	// Generated by psc version 0.9.1
	"use strict";

	module.exports = {};

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Nullable = __webpack_require__(191);
	var DOM_HTML_Types = __webpack_require__(165);
	var DOM_HTML_Event_DragEvent_DataTransfer = __webpack_require__(193);
	module.exports = {};

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(192);
	var Prelude = __webpack_require__(4);
	var Data_Function = __webpack_require__(10);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Data_Maybe = __webpack_require__(72);
	var Data_Show = __webpack_require__(15);
	var Data_Eq = __webpack_require__(28);
	var Data_Ord = __webpack_require__(26);
	var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
	var toMaybe = function toMaybe(n) {
	    return Data_Function_Uncurried.runFn3($foreign.nullable)(n)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	};
	var showNullable = function showNullable(dictShow) {
	    return new Data_Show.Show(function (n) {
	        var $3 = toMaybe(n);
	        if ($3 instanceof Data_Maybe.Nothing) {
	            return "null";
	        };
	        if ($3 instanceof Data_Maybe.Just) {
	            return Data_Show.show(dictShow)($3.value0);
	        };
	        throw new Error("Failed pattern match at Data.Nullable line 39, column 12 - line 41, column 30: " + [$3.constructor.name]);
	    });
	};
	var eqNullable = function eqNullable(dictEq) {
	    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
	};
	var ordNullable = function ordNullable(dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqNullable(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
	};
	module.exports = {
	    toMaybe: toMaybe,
	    toNullable: toNullable,
	    showNullable: showNullable,
	    eqNullable: eqNullable,
	    ordNullable: ordNullable
	};

/***/ },
/* 192 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	exports["null"] = null;

	exports.nullable = function (a, r, f) {
	    return a == null ? r : f(a);
	};

	exports.notNull = function (x) {
	    return x;
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(194);
	var DOM_File_Types = __webpack_require__(195);
	module.exports = {
	    files: $foreign.files
	};

/***/ },
/* 194 */
/***/ function(module, exports) {

	"use strict";

	exports.files = function (dataTransfer) {
	  return dataTransfer.files;
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Unsafe_Coerce = __webpack_require__(112);
	var fileToBlob = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    fileToBlob: fileToBlob
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Aff_Free = __webpack_require__(148);
	var Control_Monad_Free = __webpack_require__(116);
	var Halogen_Query_EventSource = __webpack_require__(154);
	var Halogen_Query_HalogenF = __webpack_require__(147);
	var Halogen_Query_StateF = __webpack_require__(160);
	var Data_Unit = __webpack_require__(13);
	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Function = __webpack_require__(10);
	var subscribe$prime = function subscribe$prime(es) {
	    return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.SubscribeHF(Halogen_Query_EventSource.toParentEventSource(es), Data_Unit.unit));
	};
	var subscribe = function subscribe(es) {
	    return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.SubscribeHF(es, Data_Unit.unit));
	};
	var request = function request(req) {
	    return req(Control_Category.id(Control_Category.categoryFn));
	};
	var modify = function modify(f) {
	    return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.StateHF(new Halogen_Query_StateF.Modify(f, Data_Unit.unit)));
	};
	var set = function set($0) {
	    return modify(Data_Function["const"]($0));
	};
	var liftH = function liftH($1) {
	    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.QueryHF.create($1));
	};
	var gets = function gets($2) {
	    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.StateHF.create(Halogen_Query_StateF.Get.create($2)));
	};
	var get = gets(Control_Category.id(Control_Category.categoryFn));
	var action = function action(act) {
	    return act(Data_Unit.unit);
	};
	module.exports = {
	    action: action,
	    get: get,
	    gets: gets,
	    liftH: liftH,
	    modify: modify,
	    request: request,
	    set: set,
	    subscribe: subscribe,
	    "subscribe'": subscribe$prime
	};

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Coroutine = __webpack_require__(156);
	var Control_Coroutine_Stalling_1 = __webpack_require__(159);
	var Control_Coroutine_Stalling_1 = __webpack_require__(159);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Aff_AVar = __webpack_require__(157);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Control_Monad_Free = __webpack_require__(116);
	var Control_Monad_Rec_Class = __webpack_require__(85);
	var Control_Monad_State = __webpack_require__(161);
	var Control_Monad_Trans = __webpack_require__(104);
	var Data_Either = __webpack_require__(58);
	var Data_Foldable = __webpack_require__(70);
	var Data_List = __webpack_require__(119);
	var Data_Maybe = __webpack_require__(72);
	var Data_Tuple = __webpack_require__(100);
	var DOM_HTML_Types = __webpack_require__(165);
	var DOM_Node_Node = __webpack_require__(198);
	var Halogen_Component = __webpack_require__(115);
	var Halogen_Component_Hook = __webpack_require__(146);
	var Halogen_Effects = __webpack_require__(204);
	var Halogen_HTML_Renderer_VirtualDOM = __webpack_require__(205);
	var Halogen_Internal_VirtualDOM = __webpack_require__(206);
	var Halogen_Query = __webpack_require__(196);
	var Halogen_Query_HalogenF = __webpack_require__(147);
	var Halogen_Query_EventSource = __webpack_require__(154);
	var Halogen_Query_StateF = __webpack_require__(160);
	var Control_Bind = __webpack_require__(17);
	var Data_Function = __webpack_require__(10);
	var Control_Monad_State_Trans = __webpack_require__(152);
	var Data_Identity = __webpack_require__(90);
	var Control_Applicative = __webpack_require__(5);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Unit = __webpack_require__(13);
	var Control_Monad_Free_Trans = __webpack_require__(133);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var onInitializers = function onInitializers(dictFoldable) {
	    return function (f) {
	        var go = function go(v) {
	            return function (as) {
	                if (v instanceof Halogen_Component_Hook.PostRender) {
	                    return new Data_List.Cons(f(v.value0), as);
	                };
	                return as;
	            };
	        };
	        return Data_Foldable.foldr(dictFoldable)(go)(Data_List.Nil.value);
	    };
	};
	var onFinalizers = function onFinalizers(dictFoldable) {
	    return function (f) {
	        var go = function go(v) {
	            return function (as) {
	                if (v instanceof Halogen_Component_Hook.Finalized) {
	                    return new Data_List.Cons(f(v.value0), as);
	                };
	                return as;
	            };
	        };
	        return Data_Foldable.foldr(dictFoldable)(go)(Data_List.Nil.value);
	    };
	};
	var runUI = function runUI(c) {
	    return function (s) {
	        return function (element) {
	            var driver$prime = function driver$prime(e) {
	                return function (s1) {
	                    return function (i) {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](s1))(function (v) {
	                            return Data_Function.flip(Control_Monad_Free.runFreeM(Halogen_Query_HalogenF.functorHalogenF(Control_Monad_Aff.functorAff))(Control_Monad_Aff.monadRecAff))(e(i))(function (h) {
	                                if (h instanceof Halogen_Query_HalogenF.StateHF) {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v1) {
	                                        var $29 = Control_Monad_State.runState(Halogen_Query_StateF.stateN(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(h.value0))(v1);
	                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)($29.value1))(function () {
	                                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($29.value0);
	                                        });
	                                    });
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.RenderHF) {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(h.value0(Data_Maybe.Nothing.value));
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.QueryHF) {
	                                    return h.value0;
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.HaltHF) {
	                                    return Data_Function.apply(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff))(Control_Monad_Eff_Exception.error(h.value0));
	                                };
	                                throw new Error("Failed pattern match at Halogen.Driver line 145, column 7 - line 156, column 45: " + [h.constructor.name]);
	                            });
	                        });
	                    };
	                };
	            };
	            var render = function render(ref) {
	                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
	                    if (v.renderPaused) {
	                        return Data_Function.apply(Control_Monad_Aff_AVar.putVar(ref))(function () {
	                            var $42 = {};
	                            for (var $43 in v) {
	                                if (v.hasOwnProperty($43)) {
	                                    $42[$43] = v[$43];
	                                };
	                            };
	                            $42.renderPending = true;
	                            return $42;
	                        }());
	                    };
	                    if (!v.renderPaused) {
	                        var rc = Halogen_Component.renderComponent(c)(v.state);
	                        var vtree$prime = Halogen_HTML_Renderer_VirtualDOM.renderTree(driver(ref))(rc.tree);
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Halogen_Internal_VirtualDOM.patch(Halogen_Internal_VirtualDOM.diff(v.vtree)(vtree$prime))(v.node)))(function (v1) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)({
	                                node: v1,
	                                vtree: vtree$prime,
	                                state: rc.state,
	                                renderPending: false,
	                                renderPaused: true
	                            }))(function () {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onFinalizers(Data_Foldable.foldableArray)(Halogen_Component_Hook.runFinalized(driver$prime))(rc.hooks)))(function () {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onInitializers(Data_Foldable.foldableArray)(driver(ref))(rc.hooks)))(function () {
	                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(function (v2) {
	                                            var $45 = {};
	                                            for (var $46 in v2) {
	                                                if (v2.hasOwnProperty($46)) {
	                                                    $45[$46] = v2[$46];
	                                                };
	                                            };
	                                            $45.renderPaused = false;
	                                            return $45;
	                                        })(ref))(function () {
	                                            return flushRender(ref);
	                                        });
	                                    });
	                                });
	                            });
	                        });
	                    };
	                    throw new Error("Failed pattern match at Halogen.Driver line 161, column 5 - line 177, column 24: " + [v.renderPaused.constructor.name]);
	                });
	            };
	            var flushRender = Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(function (ref) {
	                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
	                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v))(function () {
	                        var $48 = !v.renderPending;
	                        if ($48) {
	                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Right(Data_Unit.unit));
	                        };
	                        if (!$48) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(render(ref))(function () {
	                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Left(ref));
	                            });
	                        };
	                        throw new Error("Failed pattern match at Halogen.Driver line 183, column 5 - line 187, column 24: " + [$48.constructor.name]);
	                    });
	                });
	            });
	            var $$eval = function $$eval(ref) {
	                return function (rpRef) {
	                    return function (h) {
	                        if (h instanceof Halogen_Query_HalogenF.StateHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
	                                if (h.value0 instanceof Halogen_Query_StateF.Get) {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v))(function () {
	                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value0.value0(v.state));
	                                    });
	                                };
	                                if (h.value0 instanceof Halogen_Query_StateF.Modify) {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v1) {
	                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff_AVar.putVar(ref))(function () {
	                                            var $54 = {};
	                                            for (var $55 in v) {
	                                                if (v.hasOwnProperty($55)) {
	                                                    $54[$55] = v[$55];
	                                                };
	                                            };
	                                            $54.state = h.value0.value0(v.state);
	                                            return $54;
	                                        }()))(function () {
	                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff_AVar.putVar(rpRef))(new Data_Maybe.Just(Halogen_Query_HalogenF.Pending.value)))(function () {
	                                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value0.value1);
	                                            });
	                                        });
	                                    });
	                                };
	                                throw new Error("Failed pattern match at Halogen.Driver line 107, column 9 - line 115, column 22: " + [h.value0.constructor.name]);
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                            var producer = Halogen_Query_EventSource.runEventSource(h.value0);
	                            var consumer = Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Bind.bindFlipped(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(function ($74) {
	                                return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(driver(ref)($74));
	                            })(Control_Coroutine["await"](Control_Monad_Aff.monadAff)));
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAff)(Control_Coroutine_Stalling_1.runStallingProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine_Stalling_1.fuse(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.monadParAff)(producer)(consumer))))(function () {
	                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.RenderHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(Data_Function["const"](h.value0))(rpRef))(function () {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isNothing(h.value0)))(render(ref)))(function () {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                                });
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(rpRef)(v))(function () {
	                                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(h.value0(v));
	                                });
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.QueryHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isJust(v)))(render(ref)))(function () {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(rpRef)(Data_Maybe.Nothing.value))(function () {
	                                        return h.value0;
	                                    });
	                                });
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.HaltHF) {
	                            return Data_Function.apply(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff))(Control_Monad_Eff_Exception.error(h.value0));
	                        };
	                        throw new Error("Failed pattern match at Halogen.Driver line 104, column 5 - line 134, column 43: " + [h.constructor.name]);
	                    };
	                };
	            };
	            var driver = function driver(ref) {
	                return function (q) {
	                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](Data_Maybe.Nothing.value))(function (v) {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free.runFreeM(Halogen_Query_HalogenF.functorHalogenF(Control_Monad_Aff.functorAff))(Control_Monad_Aff.monadRecAff)($$eval(ref)(v))(Halogen_Component.queryComponent(c)(q)))(function (v1) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v2) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isJust(v2)))(render(ref)))(function () {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
	                                });
	                            });
	                        });
	                    });
	                };
	            };
	            return Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
	                return v.driver;
	            })(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
	                var rc = Halogen_Component.renderComponent(c)(s);
	                var dr = driver(v);
	                var vtree = Halogen_HTML_Renderer_VirtualDOM.renderTree(dr)(rc.tree);
	                var node = Halogen_Internal_VirtualDOM.createElement(vtree);
	                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)({
	                    node: node,
	                    vtree: vtree,
	                    state: rc.state,
	                    renderPending: false,
	                    renderPaused: true
	                }))(function () {
	                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(node))(DOM_HTML_Types.htmlElementToNode(element))))(function () {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onInitializers(Data_Foldable.foldableArray)(dr)(rc.hooks)))(function () {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAff)(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(dr)(Halogen_Component.initializeComponent(c))))(function () {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(function (v1) {
	                                    var $72 = {};
	                                    for (var $73 in v1) {
	                                        if (v1.hasOwnProperty($73)) {
	                                            $72[$73] = v1[$73];
	                                        };
	                                    };
	                                    $72.renderPaused = false;
	                                    return $72;
	                                })(v))(function () {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(flushRender(v))(function () {
	                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
	                                            driver: dr
	                                        });
	                                    });
	                                });
	                            });
	                        });
	                    });
	                });
	            }));
	        };
	    };
	};
	module.exports = {
	    runUI: runUI
	};

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(199);
	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Data_Enum = __webpack_require__(200);
	var Data_Nullable = __webpack_require__(191);
	var Data_Maybe = __webpack_require__(72);
	var DOM = __webpack_require__(189);
	var DOM_Node_NodeType = __webpack_require__(203);
	var DOM_Node_Types = __webpack_require__(185);
	var Control_Semigroupoid = __webpack_require__(12);
	var nodeType = function nodeType(dictPartial) {
	    return function ($1) {
	        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(DOM_Node_NodeType.boundedEnumNodeType)($foreign.nodeTypeIndex($1)));
	    };
	};
	module.exports = {
	    nodeType: nodeType,
	    appendChild: $foreign.appendChild,
	    baseURI: $foreign.baseURI,
	    childNodes: $foreign.childNodes,
	    clone: $foreign.clone,
	    compareDocumentPositionBits: $foreign.compareDocumentPositionBits,
	    contains: $foreign.contains,
	    deepClone: $foreign.deepClone,
	    firstChild: $foreign.firstChild,
	    hasChildNodes: $foreign.hasChildNodes,
	    insertBefore: $foreign.insertBefore,
	    isDefaultNamespace: $foreign.isDefaultNamespace,
	    isEqualNode: $foreign.isEqualNode,
	    lastChild: $foreign.lastChild,
	    lookupNamespaceURI: $foreign.lookupNamespaceURI,
	    lookupPrefix: $foreign.lookupPrefix,
	    nextSibling: $foreign.nextSibling,
	    nodeName: $foreign.nodeName,
	    nodeTypeIndex: $foreign.nodeTypeIndex,
	    nodeValue: $foreign.nodeValue,
	    normalize: $foreign.normalize,
	    ownerDocument: $foreign.ownerDocument,
	    parentElement: $foreign.parentElement,
	    parentNode: $foreign.parentNode,
	    previousSibling: $foreign.previousSibling,
	    removeChild: $foreign.removeChild,
	    replaceChild: $foreign.replaceChild,
	    setNodeValue: $foreign.setNodeValue,
	    setTextContent: $foreign.setTextContent,
	    textContent: $foreign.textContent
	};

/***/ },
/* 199 */
/***/ function(module, exports) {

	"use strict";

	var getEffProp = function getEffProp(name) {
	  return function (node) {
	    return function () {
	      return node[name];
	    };
	  };
	};

	exports.nodeTypeIndex = function (node) {
	  return node.nodeType;
	};

	exports.nodeName = function (node) {
	  return node.nodeName;
	};

	exports.baseURI = getEffProp("baseURI");

	exports.ownerDocument = getEffProp("ownerDocument");

	exports.parentNode = getEffProp("parentNode");

	exports.parentElement = getEffProp("parentElement");

	exports.hasChildNodes = function (node) {
	  return function () {
	    return node.hasChildNodes();
	  };
	};

	exports.childNodes = getEffProp("childNodes");

	exports.firstChild = getEffProp("firstChild");

	exports.lastChild = getEffProp("lastChild");

	exports.previousSibling = getEffProp("previousSibling");

	exports.nextSibling = getEffProp("nextSibling");

	exports.nodeValue = getEffProp("nodeValue");

	exports.setNodeValue = function (value) {
	  return function (node) {
	    return function () {
	      node.nodeValue = value;
	      return {};
	    };
	  };
	};

	exports.textContent = getEffProp("textContent");

	exports.setTextContent = function (value) {
	  return function (node) {
	    return function () {
	      node.textContent = value;
	      return {};
	    };
	  };
	};

	exports.normalize = function (node) {
	  return function () {
	    node.normalize();
	    return {};
	  };
	};

	exports.clone = function (node) {
	  return function () {
	    return node.clone(false);
	  };
	};

	exports.deepClone = function (node) {
	  return function () {
	    return node.clone(false);
	  };
	};

	exports.isEqualNode = function (node1) {
	  return function (node2) {
	    return function () {
	      return node1.isEqualNode(node2);
	    };
	  };
	};

	exports.compareDocumentPositionBits = function (node1) {
	  return function (node2) {
	    return function () {
	      return node1.compareDocumentPosition(node2);
	    };
	  };
	};

	exports.contains = function (node1) {
	  return function (node2) {
	    return function () {
	      return node1.contains(node2);
	    };
	  };
	};

	exports.lookupPrefix = function (prefix) {
	  return function (node) {
	    return function () {
	      return node.lookupPrefix(prefix);
	    };
	  };
	};

	exports.lookupNamespaceURI = function (ns) {
	  return function (node) {
	    return function () {
	      return node.lookupNamespaceURI(ns);
	    };
	  };
	};

	exports.isDefaultNamespace = function (ns) {
	  return function (node) {
	    return function () {
	      return node.isDefaultNamespace(ns);
	    };
	  };
	};

	exports.insertBefore = function (node1) {
	  return function (node2) {
	    return function (parent) {
	      return function () {
	        return parent.insertBefore(node1, node2);
	      };
	    };
	  };
	};

	exports.appendChild = function (node) {
	  return function (parent) {
	    return function () {
	      return parent.appendChild(node);
	    };
	  };
	};

	exports.replaceChild = function (oldChild) {
	  return function (newChild) {
	    return function (parent) {
	      return function () {
	        return parent.replaceChild(oldChild, newChild);
	      };
	    };
	  };
	};

	exports.removeChild = function (node) {
	  return function (parent) {
	    return function () {
	      return parent.removeChild(node);
	    };
	  };
	};

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_MonadPlus = __webpack_require__(95);
	var Data_Char = __webpack_require__(201);
	var Data_Either = __webpack_require__(58);
	var Data_Maybe = __webpack_require__(72);
	var Data_Tuple = __webpack_require__(100);
	var Data_Unfoldable = __webpack_require__(124);
	var Partial_Unsafe = __webpack_require__(91);
	var Data_Ord = __webpack_require__(26);
	var Data_Bounded = __webpack_require__(24);
	var Data_Semiring = __webpack_require__(38);
	var Data_Ring = __webpack_require__(36);
	var Data_Function = __webpack_require__(10);
	var Data_Ordering = __webpack_require__(33);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Data_Unit = __webpack_require__(13);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Boolean = __webpack_require__(20);
	var Control_Apply = __webpack_require__(6);
	var Data_EuclideanRing = __webpack_require__(41);
	var Control_Bind = __webpack_require__(17);
	var Control_MonadZero = __webpack_require__(73);
	var Control_Applicative = __webpack_require__(5);
	var Data_Eq = __webpack_require__(28);
	var Cardinality = function Cardinality(x) {
	    return x;
	};
	var Enum = function Enum(__superclass_Data$dotOrd$dotOrd_0, pred, succ) {
	    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
	    this.pred = pred;
	    this.succ = succ;
	};
	var BoundedEnum = function BoundedEnum(__superclass_Data$dotBounded$dotBounded_0, __superclass_Data$dotEnum$dotEnum_1, cardinality, fromEnum, toEnum) {
	    this["__superclass_Data.Bounded.Bounded_0"] = __superclass_Data$dotBounded$dotBounded_0;
	    this["__superclass_Data.Enum.Enum_1"] = __superclass_Data$dotEnum$dotEnum_1;
	    this.cardinality = cardinality;
	    this.fromEnum = fromEnum;
	    this.toEnum = toEnum;
	};
	var toEnum = function toEnum(dict) {
	    return dict.toEnum;
	};
	var succ = function succ(dict) {
	    return dict.succ;
	};
	var runCardinality = function runCardinality(v) {
	    return v;
	};
	var pred = function pred(dict) {
	    return dict.pred;
	};
	var intStepFromTo = function intStepFromTo(step) {
	    return function (from) {
	        return function (to) {
	            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
	                var $51 = e <= to;
	                if ($51) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(e, e + step | 0));
	                };
	                if (!$51) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.Enum line 120, column 13 - line 122, column 25: " + [$51.constructor.name]);
	            })(from);
	        };
	    };
	};
	var fromEnum = function fromEnum(dict) {
	    return dict.fromEnum;
	};
	var enumUnit = new Enum(function () {
	    return Data_Ord.ordUnit;
	}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
	var enumTuple = function enumTuple(dictEnum) {
	    return function (dictBoundedEnum) {
	        return new Enum(function () {
	            return Data_Tuple.ordTuple(dictEnum["__superclass_Data.Ord.Ord_0"]())(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]()["__superclass_Data.Ord.Ord_0"]());
	        }, function (v) {
	            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())))(pred(dictEnum)(v.value0)))(function ($98) {
	                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($98));
	            })(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value1));
	        }, function (v) {
	            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())))(succ(dictEnum)(v.value0)))(function ($99) {
	                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($99));
	            })(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value1));
	        });
	    };
	};
	var enumOrdering = new Enum(function () {
	    return Data_Ord.ordOrdering;
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    throw new Error("Failed pattern match at Data.Enum line 70, column 3 - line 70, column 20: " + [v.constructor.name]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 67, column 3 - line 67, column 20: " + [v.constructor.name]);
	});
	var enumMaybe = function enumMaybe(dictBoundedEnum) {
	    return new Enum(function () {
	        return Data_Maybe.ordMaybe(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]()["__superclass_Data.Ord.Ord_0"]());
	    }, function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Data_Maybe.Nothing.value;
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Function.apply(Data_Maybe.Just.create)(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	        };
	        throw new Error("Failed pattern match at Data.Enum line 77, column 3 - line 77, column 25: " + [v.constructor.name]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Data_Function.apply(Data_Maybe.Just.create)(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())));
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	        };
	        throw new Error("Failed pattern match at Data.Enum line 75, column 3 - line 75, column 36: " + [v.constructor.name]);
	    });
	};
	var enumInt = new Enum(function () {
	    return Data_Ord.ordInt;
	}, function (n) {
	    var $64 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
	    if ($64) {
	        return new Data_Maybe.Just(n - 1);
	    };
	    if (!$64) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 52, column 12 - line 52, column 56: " + [$64.constructor.name]);
	}, function (n) {
	    var $65 = n < Data_Bounded.top(Data_Bounded.boundedInt);
	    if ($65) {
	        return new Data_Maybe.Just(n + 1 | 0);
	    };
	    if (!$65) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 51, column 12 - line 51, column 53: " + [$65.constructor.name]);
	});
	var enumFromTo = function enumFromTo(dictEnum) {
	    return function (dictUnfoldable) {
	        return function (from) {
	            return function (to) {
	                var go = function go(mx) {
	                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
	                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum["__superclass_Data.Ord.Ord_0"]())(v)(to)))(function () {
	                            return Data_Function.apply(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
	                        });
	                    });
	                };
	                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
	            };
	        };
	    };
	};
	var enumFromThenTo = function enumFromThenTo(dictBoundedEnum) {
	    return Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    var c$prime = fromEnum(dictBoundedEnum)(c);
	                    var b$prime = fromEnum(dictBoundedEnum)(b);
	                    var a$prime = fromEnum(dictBoundedEnum)(a);
	                    return Data_Functor.map(Data_Functor.functorArray)(function ($100) {
	                        return Data_Maybe.fromJust(dictPartial)(toEnum(dictBoundedEnum)($100));
	                    })(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
	                };
	            };
	        };
	    });
	};
	var enumEither = function enumEither(dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new Enum(function () {
	            return Data_Either.ordEither(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]()["__superclass_Data.Ord.Ord_0"]())(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]()["__superclass_Data.Ord.Ord_0"]());
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($101) {
	                    return Data_Maybe.Just.create(Data_Either.Left.create($101));
	                })(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            if (v instanceof Data_Either.Right) {
	                return Data_Maybe.maybe(Data_Function.apply(Data_Maybe.Just.create)(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]()))))(function ($102) {
	                    return Data_Maybe.Just.create(Data_Either.Right.create($102));
	                })(pred(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 83, column 3 - line 83, column 59: " + [v.constructor.name]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Maybe.maybe(Data_Function.apply(Data_Maybe.Just.create)(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]()))))(function ($103) {
	                    return Data_Maybe.Just.create(Data_Either.Left.create($103));
	                })(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            if (v instanceof Data_Either.Right) {
	                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
	                    return Data_Maybe.Just.create(Data_Either.Right.create($104));
	                })(succ(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 81, column 3 - line 81, column 71: " + [v.constructor.name]);
	        });
	    };
	};
	var enumBoolean = new Enum(function () {
	    return Data_Ord.ordBoolean;
	}, function (v) {
	    if (v) {
	        return new Data_Maybe.Just(false);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    if (!v) {
	        return new Data_Maybe.Just(true);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var diag = function diag(a) {
	    return new Data_Tuple.Tuple(a, a);
	};
	var downFrom = function downFrom(dictEnum) {
	    return function (dictUnfoldable) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($105) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($105));
	        });
	    };
	};
	var upFrom = function upFrom(dictEnum) {
	    return function (dictUnfoldable) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($106) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($106));
	        });
	    };
	};
	var defaultToEnum = function defaultToEnum(dictBounded) {
	    return function (dictEnum) {
	        return function (n) {
	            if (n < 0) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (n === 0) {
	                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
	            };
	            if (Data_Boolean.otherwise) {
	                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1))(succ(dictEnum));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 237, column 1 - line 240, column 47: " + [n.constructor.name]);
	        };
	    };
	};
	var defaultSucc = function defaultSucc(toEnum$prime) {
	    return function (fromEnum$prime) {
	        return function (a) {
	            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
	        };
	    };
	};
	var defaultPred = function defaultPred(toEnum$prime) {
	    return function (fromEnum$prime) {
	        return function (a) {
	            return toEnum$prime(fromEnum$prime(a) - 1);
	        };
	    };
	};
	var defaultFromEnum = function defaultFromEnum(dictEnum) {
	    return function ($107) {
	        return Data_Maybe.maybe(0)(function (prd) {
	            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
	        })(pred(dictEnum)($107));
	    };
	};
	var defaultCardinality = function defaultCardinality(dictBounded) {
	    return function (dictEnum) {
	        var defaultCardinality$prime = function defaultCardinality$prime(i) {
	            return function ($108) {
	                return Data_Maybe.maybe(i)(Data_Function.apply(defaultCardinality$prime)(i + 1 | 0))(succ(dictEnum)($108));
	            };
	        };
	        return Data_Function.apply(Cardinality)(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
	    };
	};
	var charToEnum = function charToEnum(v) {
	    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Char.fromCharCode(v));
	    };
	    return Data_Maybe.Nothing.value;
	};
	var enumChar = new Enum(function () {
	    return Data_Ord.ordChar;
	}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
	var cardinality = function cardinality(dict) {
	    return dict.cardinality;
	};
	var boundedEnumUnit = new BoundedEnum(function () {
	    return Data_Bounded.boundedUnit;
	}, function () {
	    return enumUnit;
	}, 1, Data_Function["const"](0), function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var boundedEnumTuple = function boundedEnumTuple(dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new BoundedEnum(function () {
	            return Data_Tuple.boundedTuple(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]());
	        }, function () {
	            return enumTuple(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(dictBoundedEnum1);
	        }, Data_Function.apply(Cardinality)(runCardinality(cardinality(dictBoundedEnum)) * runCardinality(cardinality(dictBoundedEnum1)) | 0), function () {
	            var from = function from(v) {
	                return function (v1) {
	                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
	                };
	            };
	            return from(cardinality(dictBoundedEnum1));
	        }(), function () {
	            var to = function to(v) {
	                return function (n) {
	                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
	                };
	            };
	            return to(cardinality(dictBoundedEnum1));
	        }());
	    };
	};
	var boundedEnumOrdering = new BoundedEnum(function () {
	    return Data_Bounded.boundedOrdering;
	}, function () {
	    return enumOrdering;
	}, 3, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return 2;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 186, column 3 - line 187, column 3: " + [v.constructor.name]);
	}, function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var boundedEnumMaybe = function boundedEnumMaybe(dictBoundedEnum) {
	    return new BoundedEnum(function () {
	        return Data_Maybe.boundedMaybe(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]());
	    }, function () {
	        return enumMaybe(dictBoundedEnum);
	    }, Data_Function.apply(Cardinality)(runCardinality(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return 0;
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
	        };
	        throw new Error("Failed pattern match at Data.Enum line 198, column 3 - line 199, column 3: " + [v.constructor.name]);
	    }, function () {
	        var to = function to(v) {
	            return function (v1) {
	                if (v1 === 0) {
	                    return Data_Maybe.Nothing.value;
	                };
	                if (v1 <= v) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v1 - 1));
	                };
	                return Data_Maybe.Nothing.value;
	            };
	        };
	        return to(cardinality(dictBoundedEnum));
	    }());
	};
	var boundedEnumInt = new BoundedEnum(function () {
	    return Data_Bounded.boundedInt;
	}, function () {
	    return enumInt;
	}, Data_Bounded.top(Data_Bounded.boundedInt) - Data_Bounded.bottom(Data_Bounded.boundedInt), Control_Category.id(Control_Category.categoryFn), Data_Maybe.Just.create);
	var boundedEnumEither = function boundedEnumEither(dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new BoundedEnum(function () {
	            return Data_Either.boundedEither(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]());
	        }, function () {
	            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
	        }, Data_Function.apply(Cardinality)(runCardinality(cardinality(dictBoundedEnum)) + runCardinality(cardinality(dictBoundedEnum1)) | 0), function (v) {
	            if (v instanceof Data_Either.Left) {
	                return fromEnum(dictBoundedEnum)(v.value0);
	            };
	            if (v instanceof Data_Either.Right) {
	                return fromEnum(dictBoundedEnum1)(v.value0) + runCardinality(cardinality(dictBoundedEnum)) | 0;
	            };
	            throw new Error("Failed pattern match at Data.Enum line 213, column 3 - line 213, column 33: " + [v.constructor.name]);
	        }, function () {
	            var to = function to(v) {
	                return function (v1) {
	                    return function (n) {
	                        if (n >= 0 && n < v) {
	                            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
	                        };
	                        if (n >= v && n < v1) {
	                            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v));
	                        };
	                        if (Data_Boolean.otherwise) {
	                            return Data_Maybe.Nothing.value;
	                        };
	                        throw new Error("Failed pattern match at Data.Enum line 209, column 5 - line 212, column 28: " + [v.constructor.name, v1.constructor.name, n.constructor.name]);
	                    };
	                };
	            };
	            return to(cardinality(dictBoundedEnum))(cardinality(boundedEnumEither(dictBoundedEnum)(dictBoundedEnum1)));
	        }());
	    };
	};
	var boundedEnumChar = new BoundedEnum(function () {
	    return Data_Bounded.boundedChar;
	}, function () {
	    return enumChar;
	}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)), Data_Char.toCharCode, charToEnum);
	var boundedEnumBoolean = new BoundedEnum(function () {
	    return Data_Bounded.boundedBoolean;
	}, function () {
	    return enumBoolean;
	}, 2, function (v) {
	    if (!v) {
	        return 0;
	    };
	    if (v) {
	        return 1;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 161, column 3 - line 162, column 3: " + [v.constructor.name]);
	}, function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(false);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(true);
	    };
	    return Data_Maybe.Nothing.value;
	});
	module.exports = {
	    Cardinality: Cardinality,
	    BoundedEnum: BoundedEnum,
	    Enum: Enum,
	    cardinality: cardinality,
	    defaultCardinality: defaultCardinality,
	    defaultFromEnum: defaultFromEnum,
	    defaultPred: defaultPred,
	    defaultSucc: defaultSucc,
	    defaultToEnum: defaultToEnum,
	    downFrom: downFrom,
	    enumFromThenTo: enumFromThenTo,
	    enumFromTo: enumFromTo,
	    fromEnum: fromEnum,
	    pred: pred,
	    runCardinality: runCardinality,
	    succ: succ,
	    toEnum: toEnum,
	    upFrom: upFrom,
	    enumBoolean: enumBoolean,
	    enumInt: enumInt,
	    enumChar: enumChar,
	    enumUnit: enumUnit,
	    enumOrdering: enumOrdering,
	    enumMaybe: enumMaybe,
	    enumEither: enumEither,
	    enumTuple: enumTuple,
	    boundedEnumBoolean: boundedEnumBoolean,
	    boundedEnumInt: boundedEnumInt,
	    boundedEnumChar: boundedEnumChar,
	    boundedEnumUnit: boundedEnumUnit,
	    boundedEnumOrdering: boundedEnumOrdering,
	    boundedEnumMaybe: boundedEnumMaybe,
	    boundedEnumEither: boundedEnumEither,
	    boundedEnumTuple: boundedEnumTuple
	};

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(202);
	module.exports = {
	    fromCharCode: $foreign.fromCharCode,
	    toCharCode: $foreign.toCharCode,
	    toLower: $foreign.toLower,
	    toUpper: $foreign.toUpper
	};

/***/ },
/* 202 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module Data.Char

	exports.toCharCode = function (c) {
	  return c.charCodeAt(0);
	};

	exports.fromCharCode = function (c) {
	  return String.fromCharCode(c);
	};

	exports.toLower = function (c) {
	  return c.toLowerCase();
	};

	exports.toUpper = function (c) {
	  return c.toUpperCase();
	};

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_Enum = __webpack_require__(200);
	var Data_Eq = __webpack_require__(28);
	var Data_Ord = __webpack_require__(26);
	var Data_Bounded = __webpack_require__(24);
	var ElementNode = function () {
	    function ElementNode() {};
	    ElementNode.value = new ElementNode();
	    return ElementNode;
	}();
	var AttributeNode = function () {
	    function AttributeNode() {};
	    AttributeNode.value = new AttributeNode();
	    return AttributeNode;
	}();
	var TextNode = function () {
	    function TextNode() {};
	    TextNode.value = new TextNode();
	    return TextNode;
	}();
	var CDATASectionNode = function () {
	    function CDATASectionNode() {};
	    CDATASectionNode.value = new CDATASectionNode();
	    return CDATASectionNode;
	}();
	var EntityReferenceNode = function () {
	    function EntityReferenceNode() {};
	    EntityReferenceNode.value = new EntityReferenceNode();
	    return EntityReferenceNode;
	}();
	var EntityNode = function () {
	    function EntityNode() {};
	    EntityNode.value = new EntityNode();
	    return EntityNode;
	}();
	var ProcessingInstructionNode = function () {
	    function ProcessingInstructionNode() {};
	    ProcessingInstructionNode.value = new ProcessingInstructionNode();
	    return ProcessingInstructionNode;
	}();
	var CommentNode = function () {
	    function CommentNode() {};
	    CommentNode.value = new CommentNode();
	    return CommentNode;
	}();
	var DocumentNode = function () {
	    function DocumentNode() {};
	    DocumentNode.value = new DocumentNode();
	    return DocumentNode;
	}();
	var DocumentTypeNode = function () {
	    function DocumentTypeNode() {};
	    DocumentTypeNode.value = new DocumentTypeNode();
	    return DocumentTypeNode;
	}();
	var DocumentFragmentNode = function () {
	    function DocumentFragmentNode() {};
	    DocumentFragmentNode.value = new DocumentFragmentNode();
	    return DocumentFragmentNode;
	}();
	var NotationNode = function () {
	    function NotationNode() {};
	    NotationNode.value = new NotationNode();
	    return NotationNode;
	}();
	var toEnumNodeType = function toEnumNodeType(v) {
	    if (v === 1) {
	        return new Data_Maybe.Just(ElementNode.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(AttributeNode.value);
	    };
	    if (v === 3) {
	        return new Data_Maybe.Just(TextNode.value);
	    };
	    if (v === 4) {
	        return new Data_Maybe.Just(CDATASectionNode.value);
	    };
	    if (v === 5) {
	        return new Data_Maybe.Just(EntityReferenceNode.value);
	    };
	    if (v === 6) {
	        return new Data_Maybe.Just(EntityNode.value);
	    };
	    if (v === 7) {
	        return new Data_Maybe.Just(ProcessingInstructionNode.value);
	    };
	    if (v === 8) {
	        return new Data_Maybe.Just(CommentNode.value);
	    };
	    if (v === 9) {
	        return new Data_Maybe.Just(DocumentNode.value);
	    };
	    if (v === 10) {
	        return new Data_Maybe.Just(DocumentTypeNode.value);
	    };
	    if (v === 11) {
	        return new Data_Maybe.Just(DocumentFragmentNode.value);
	    };
	    if (v === 12) {
	        return new Data_Maybe.Just(NotationNode.value);
	    };
	    return Data_Maybe.Nothing.value;
	};
	var fromEnumNodeType = function fromEnumNodeType(v) {
	    if (v instanceof ElementNode) {
	        return 1;
	    };
	    if (v instanceof AttributeNode) {
	        return 2;
	    };
	    if (v instanceof TextNode) {
	        return 3;
	    };
	    if (v instanceof CDATASectionNode) {
	        return 4;
	    };
	    if (v instanceof EntityReferenceNode) {
	        return 5;
	    };
	    if (v instanceof EntityNode) {
	        return 6;
	    };
	    if (v instanceof ProcessingInstructionNode) {
	        return 7;
	    };
	    if (v instanceof CommentNode) {
	        return 8;
	    };
	    if (v instanceof DocumentNode) {
	        return 9;
	    };
	    if (v instanceof DocumentTypeNode) {
	        return 10;
	    };
	    if (v instanceof DocumentFragmentNode) {
	        return 11;
	    };
	    if (v instanceof NotationNode) {
	        return 12;
	    };
	    throw new Error("Failed pattern match at DOM.Node.NodeType line 55, column 1 - line 56, column 1: " + [v.constructor.name]);
	};
	var eqNodeType = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        if (x instanceof ElementNode && y instanceof ElementNode) {
	            return true;
	        };
	        if (x instanceof AttributeNode && y instanceof AttributeNode) {
	            return true;
	        };
	        if (x instanceof TextNode && y instanceof TextNode) {
	            return true;
	        };
	        if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
	            return true;
	        };
	        if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
	            return true;
	        };
	        if (x instanceof EntityNode && y instanceof EntityNode) {
	            return true;
	        };
	        if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
	            return true;
	        };
	        if (x instanceof CommentNode && y instanceof CommentNode) {
	            return true;
	        };
	        if (x instanceof DocumentNode && y instanceof DocumentNode) {
	            return true;
	        };
	        if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
	            return true;
	        };
	        if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
	            return true;
	        };
	        if (x instanceof NotationNode && y instanceof NotationNode) {
	            return true;
	        };
	        return false;
	    };
	});
	var ordNodeType = new Data_Ord.Ord(function () {
	    return eqNodeType;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
	    };
	});
	var enumNodeType = new Data_Enum.Enum(function () {
	    return ordNodeType;
	}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
	var boundedNodeType = new Data_Bounded.Bounded(function () {
	    return ordNodeType;
	}, ElementNode.value, NotationNode.value);
	var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
	    return boundedNodeType;
	}, function () {
	    return enumNodeType;
	}, 12, fromEnumNodeType, toEnumNodeType);
	module.exports = {
	    ElementNode: ElementNode,
	    AttributeNode: AttributeNode,
	    TextNode: TextNode,
	    CDATASectionNode: CDATASectionNode,
	    EntityReferenceNode: EntityReferenceNode,
	    EntityNode: EntityNode,
	    ProcessingInstructionNode: ProcessingInstructionNode,
	    CommentNode: CommentNode,
	    DocumentNode: DocumentNode,
	    DocumentTypeNode: DocumentTypeNode,
	    DocumentFragmentNode: DocumentFragmentNode,
	    NotationNode: NotationNode,
	    eqNodeType: eqNodeType,
	    ordNodeType: ordNodeType,
	    boundedNodeType: boundedNodeType,
	    enumNodeType: enumNodeType,
	    boundedEnumNodeType: boundedEnumNodeType
	};

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Monad_Aff_AVar = __webpack_require__(157);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var DOM = __webpack_require__(189);
	module.exports = {};

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Data_Exists = __webpack_require__(134);
	var Data_ExistsR = __webpack_require__(164);
	var Data_Foldable = __webpack_require__(70);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Data_Lazy = __webpack_require__(137);
	var Data_Maybe = __webpack_require__(72);
	var Data_Monoid = __webpack_require__(61);
	var Data_Nullable = __webpack_require__(191);
	var Halogen_Effects = __webpack_require__(204);
	var Halogen_Component_Tree = __webpack_require__(162);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Halogen_HTML_Events_Handler = __webpack_require__(186);
	var Halogen_Internal_VirtualDOM = __webpack_require__(206);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var Data_Function = __webpack_require__(10);
	var Control_Applicative = __webpack_require__(5);
	var Data_Unit = __webpack_require__(13);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Bind = __webpack_require__(17);
	var handleAff = function handleAff($40) {
	    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($40));
	};
	var renderProp = function renderProp(v) {
	    return function (v1) {
	        if (v1 instanceof Halogen_HTML_Core.Prop) {
	            return Data_Exists.runExists(function (v2) {
	                return Data_Function_Uncurried.runFn2(Halogen_Internal_VirtualDOM.prop)(Halogen_HTML_Core.runPropName(v2.value0))(v2.value1);
	            })(v1.value0);
	        };
	        if (v1 instanceof Halogen_HTML_Core.Attr) {
	            var attrName = Data_Maybe.maybe("")(function (ns$prime) {
	                return Halogen_HTML_Core.runNamespace(ns$prime) + ":";
	            })(v1.value0) + Halogen_HTML_Core.runAttrName(v1.value1);
	            return Data_Function_Uncurried.runFn2(Halogen_Internal_VirtualDOM.attr)(attrName)(v1.value2);
	        };
	        if (v1 instanceof Halogen_HTML_Core.Handler) {
	            return Data_ExistsR.runExistsR(function (v2) {
	                return Data_Function_Uncurried.runFn2(Halogen_Internal_VirtualDOM.handlerProp)(Halogen_HTML_Core.runEventName(v2.value0))(function (ev) {
	                    return Data_Function.apply(handleAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_HTML_Events_Handler.runEventHandler(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadEffAff)(ev)(v2.value1(ev)))(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(v)));
	                });
	            })(v1.value0);
	        };
	        if (v1 instanceof Halogen_HTML_Core.Ref) {
	            return Halogen_Internal_VirtualDOM.refProp(function ($41) {
	                return handleAff(v(v1.value0($41)));
	            });
	        };
	        return Data_Monoid.mempty(Halogen_Internal_VirtualDOM.monoidProps);
	    };
	};
	var findKey = function findKey(v) {
	    return function (v1) {
	        if (v1 instanceof Halogen_HTML_Core.Key) {
	            return new Data_Maybe.Just(v1.value0);
	        };
	        return v;
	    };
	};
	var renderHTML = function renderHTML(f) {
	    var go = function go(v) {
	        if (v instanceof Halogen_HTML_Core.Text) {
	            return Halogen_Internal_VirtualDOM.vtext(v.value0);
	        };
	        if (v instanceof Halogen_HTML_Core.Element) {
	            var tag = Halogen_HTML_Core.runTagName(v.value1);
	            var ns$prime = Data_Function.apply(Data_Nullable.toNullable)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(v.value0));
	            var key = Data_Function.apply(Data_Nullable.toNullable)(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(v.value2));
	            return Halogen_Internal_VirtualDOM.vnode(ns$prime)(tag)(key)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps)(renderProp(f))(v.value2))(Data_Functor.map(Data_Functor.functorArray)(go)(v.value3));
	        };
	        if (v instanceof Halogen_HTML_Core.Slot) {
	            return Halogen_Internal_VirtualDOM.vtext("");
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Renderer.VirtualDOM line 34, column 3 - line 34, column 26: " + [v.constructor.name]);
	    };
	    return go;
	};
	var renderTree = function renderTree(f) {
	    return Halogen_Component_Tree.runTree(function (tree) {
	        var go = function go(v) {
	            if (v instanceof Halogen_HTML_Core.Text) {
	                return Halogen_Internal_VirtualDOM.vtext(v.value0);
	            };
	            if (v instanceof Halogen_HTML_Core.Slot) {
	                return Halogen_Internal_VirtualDOM.widget(v.value0)(tree.eq)(renderTree(f));
	            };
	            if (v instanceof Halogen_HTML_Core.Element) {
	                var tag = Halogen_HTML_Core.runTagName(v.value1);
	                var ns$prime = Data_Function.apply(Data_Nullable.toNullable)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(v.value0));
	                var key = Data_Function.apply(Data_Nullable.toNullable)(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(v.value2));
	                return Halogen_Internal_VirtualDOM.vnode(ns$prime)(tag)(key)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps)(renderProp(f))(v.value2))(Data_Functor.map(Data_Functor.functorArray)(go)(v.value3));
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Renderer.VirtualDOM line 49, column 5 - line 56, column 28: " + [v.constructor.name]);
	        };
	        return go(Data_Lazy.force(tree.html));
	    });
	};
	module.exports = {
	    renderHTML: renderHTML,
	    renderTree: renderTree
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(207);
	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Data_Monoid = __webpack_require__(61);
	var Data_Maybe = __webpack_require__(72);
	var Data_Nullable = __webpack_require__(191);
	var Data_Function_Uncurried = __webpack_require__(80);
	var DOM = __webpack_require__(189);
	var DOM_HTML_Types = __webpack_require__(165);
	var Halogen_Component_Tree = __webpack_require__(162);
	var Data_Semigroup = __webpack_require__(34);
	var semigroupProps = new Data_Semigroup.Semigroup(Data_Function_Uncurried.runFn2($foreign.concatProps));
	var refProp = $foreign.refPropImpl(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	var monoidProps = new Data_Monoid.Monoid(function () {
	    return semigroupProps;
	}, $foreign.emptyProps);
	module.exports = {
	    refProp: refProp,
	    semigroupProps: semigroupProps,
	    monoidProps: monoidProps,
	    attr: $foreign.attr,
	    createElement: $foreign.createElement,
	    diff: $foreign.diff,
	    handlerProp: $foreign.handlerProp,
	    patch: $foreign.patch,
	    prop: $foreign.prop,
	    vnode: $foreign.vnode,
	    vtext: $foreign.vtext,
	    widget: $foreign.widget
	};

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/* global exports, require */
	"use strict";

	// module Halogen.Internal.VirtualDOM

	var vcreateElement = __webpack_require__(208);
	var vdiff = __webpack_require__(221);
	var vpatch = __webpack_require__(226);
	var VText = __webpack_require__(231);
	var VirtualNode = __webpack_require__(232);
	var SoftSetHook = __webpack_require__(233);

	// jshint maxparams: 2
	exports.prop = function (key, value) {
	  var props = {};
	  props[key] = value;
	  return props;
	};

	// jshint maxparams: 2
	exports.attr = function (key, value) {
	  var props = { attributes: {} };
	  props.attributes[key] = value;
	  return props;
	};

	function HandlerHook(key, f) {
	  this.key = key;
	  this.callback = function (e) {
	    f(e)();
	  };
	}

	HandlerHook.prototype = {
	  hook: function hook(node) {
	    node.addEventListener(this.key, this.callback);
	  },
	  unhook: function unhook(node) {
	    node.removeEventListener(this.key, this.callback);
	  }
	};

	// jshint maxparams: 2
	exports.handlerProp = function (key, f) {
	  var props = {};
	  props["halogen-hook-" + key] = new HandlerHook(key, f);
	  return props;
	};

	exports.refPropImpl = function (nothing) {
	  return function (just) {

	    var ifHookFn = function ifHookFn(init) {
	      // jshint maxparams: 3
	      return function (node, prop, diff) {
	        // jshint validthis: true
	        if (typeof diff === "undefined") {
	          this.f(init ? just(node) : nothing)();
	        }
	      };
	    };

	    // jshint maxparams: 1
	    function RefHook(f) {
	      this.f = f;
	    }

	    RefHook.prototype = {
	      hook: ifHookFn(true),
	      unhook: ifHookFn(false)
	    };

	    return function (f) {
	      return { "halogen-ref": new RefHook(f) };
	    };
	  };
	};

	// jshint maxparams: 3
	function HalogenWidget(tree, eq, render) {
	  this.tree = tree;
	  this.eq = eq;
	  this.render = render;
	  this.vdom = null;
	  this.el = null;
	}

	HalogenWidget.prototype = {
	  type: "Widget",
	  init: function init() {
	    this.vdom = this.render(this.tree);
	    this.el = vcreateElement(this.vdom);
	    return this.el;
	  },
	  update: function update(prev, node) {
	    if (!prev.tree || !this.eq(prev.tree.slot)(this.tree.slot)) {
	      return this.init();
	    }
	    if (this.tree.thunk) {
	      this.vdom = prev.vdom;
	      this.el = prev.el;
	    } else {
	      this.vdom = this.render(this.tree);
	      this.el = vpatch(node, vdiff(prev.vdom, this.vdom));
	    }
	  }
	};

	exports.widget = function (tree) {
	  return function (eq) {
	    return function (render) {
	      return new HalogenWidget(tree, eq, render);
	    };
	  };
	};

	exports.concatProps = function () {
	  // jshint maxparams: 2
	  var hOP = Object.prototype.hasOwnProperty;
	  var copy = function copy(props, result) {
	    for (var key in props) {
	      if (hOP.call(props, key)) {
	        if (key === "attributes") {
	          var attrs = props[key];
	          var resultAttrs = result[key] || (result[key] = {});
	          for (var attr in attrs) {
	            if (hOP.call(attrs, attr)) {
	              resultAttrs[attr] = attrs[attr];
	            }
	          }
	        } else {
	          result[key] = props[key];
	        }
	      }
	    }
	    return result;
	  };
	  return function (p1, p2) {
	    return copy(p2, copy(p1, {}));
	  };
	}();

	exports.emptyProps = {};

	exports.createElement = function (vtree) {
	  return vcreateElement(vtree);
	};

	exports.diff = function (vtree1) {
	  return function (vtree2) {
	    return vdiff(vtree1, vtree2);
	  };
	};

	exports.patch = function (p) {
	  return function (node) {
	    return function () {
	      return vpatch(node, p);
	    };
	  };
	};

	exports.vtext = function (s) {
	  return new VText(s);
	};

	exports.vnode = function (namespace) {
	  return function (name) {
	    return function (key) {
	      return function (props) {
	        return function (children) {
	          if (name === "input" && props.value !== undefined) {
	            props.value = new SoftSetHook(props.value);
	          }
	          return new VirtualNode(name, props, children, key, namespace);
	        };
	      };
	    };
	  };
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var createElement = __webpack_require__(209)

	module.exports = createElement


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(210)

	var applyProperties = __webpack_require__(212)

	var isVNode = __webpack_require__(215)
	var isVText = __webpack_require__(217)
	var isWidget = __webpack_require__(218)
	var handleThunk = __webpack_require__(219)

	module.exports = createElement

	function createElement(vnode, opts) {
	    var doc = opts ? opts.document || document : document
	    var warn = opts ? opts.warn : null

	    vnode = handleThunk(vnode).a

	    if (isWidget(vnode)) {
	        return vnode.init()
	    } else if (isVText(vnode)) {
	        return doc.createTextNode(vnode.text)
	    } else if (!isVNode(vnode)) {
	        if (warn) {
	            warn("Item is not a valid virtual dom node", vnode)
	        }
	        return null
	    }

	    var node = (vnode.namespace === null) ?
	        doc.createElement(vnode.tagName) :
	        doc.createElementNS(vnode.namespace, vnode.tagName)

	    var props = vnode.properties
	    applyProperties(node, props)

	    var children = vnode.children

	    for (var i = 0; i < children.length; i++) {
	        var childNode = createElement(children[i], opts)
	        if (childNode) {
	            node.appendChild(childNode)
	        }
	    }

	    return node
	}


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :
	    typeof window !== 'undefined' ? window : {}
	var minDoc = __webpack_require__(211);

	if (typeof document !== 'undefined') {
	    module.exports = document;
	} else {
	    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }

	    module.exports = doccy;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 211 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(213)
	var isHook = __webpack_require__(214)

	module.exports = applyProperties

	function applyProperties(node, props, previous) {
	    for (var propName in props) {
	        var propValue = props[propName]

	        if (propValue === undefined) {
	            removeProperty(node, propName, propValue, previous);
	        } else if (isHook(propValue)) {
	            removeProperty(node, propName, propValue, previous)
	            if (propValue.hook) {
	                propValue.hook(node,
	                    propName,
	                    previous ? previous[propName] : undefined)
	            }
	        } else {
	            if (isObject(propValue)) {
	                patchObject(node, props, previous, propName, propValue);
	            } else {
	                node[propName] = propValue
	            }
	        }
	    }
	}

	function removeProperty(node, propName, propValue, previous) {
	    if (previous) {
	        var previousValue = previous[propName]

	        if (!isHook(previousValue)) {
	            if (propName === "attributes") {
	                for (var attrName in previousValue) {
	                    node.removeAttribute(attrName)
	                }
	            } else if (propName === "style") {
	                for (var i in previousValue) {
	                    node.style[i] = ""
	                }
	            } else if (typeof previousValue === "string") {
	                node[propName] = ""
	            } else {
	                node[propName] = null
	            }
	        } else if (previousValue.unhook) {
	            previousValue.unhook(node, propName, propValue)
	        }
	    }
	}

	function patchObject(node, props, previous, propName, propValue) {
	    var previousValue = previous ? previous[propName] : undefined

	    // Set attributes
	    if (propName === "attributes") {
	        for (var attrName in propValue) {
	            var attrValue = propValue[attrName]

	            if (attrValue === undefined) {
	                node.removeAttribute(attrName)
	            } else {
	                node.setAttribute(attrName, attrValue)
	            }
	        }

	        return
	    }

	    if(previousValue && isObject(previousValue) &&
	        getPrototype(previousValue) !== getPrototype(propValue)) {
	        node[propName] = propValue
	        return
	    }

	    if (!isObject(node[propName])) {
	        node[propName] = {}
	    }

	    var replacer = propName === "style" ? "" : undefined

	    for (var k in propValue) {
	        var value = propValue[k]
	        node[propName][k] = (value === undefined) ? replacer : value
	    }
	}

	function getPrototype(value) {
	    if (Object.getPrototypeOf) {
	        return Object.getPrototypeOf(value)
	    } else if (value.__proto__) {
	        return value.__proto__
	    } else if (value.constructor) {
	        return value.constructor.prototype
	    }
	}


/***/ },
/* 213 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function isObject(x) {
		return typeof x === "object" && x !== null;
	};


/***/ },
/* 214 */
/***/ function(module, exports) {

	module.exports = isHook

	function isHook(hook) {
	    return hook &&
	      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||
	       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))
	}


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(216)

	module.exports = isVirtualNode

	function isVirtualNode(x) {
	    return x && x.type === "VirtualNode" && x.version === version
	}


/***/ },
/* 216 */
/***/ function(module, exports) {

	module.exports = "2"


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(216)

	module.exports = isVirtualText

	function isVirtualText(x) {
	    return x && x.type === "VirtualText" && x.version === version
	}


/***/ },
/* 218 */
/***/ function(module, exports) {

	module.exports = isWidget

	function isWidget(w) {
	    return w && w.type === "Widget"
	}


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var isVNode = __webpack_require__(215)
	var isVText = __webpack_require__(217)
	var isWidget = __webpack_require__(218)
	var isThunk = __webpack_require__(220)

	module.exports = handleThunk

	function handleThunk(a, b) {
	    var renderedA = a
	    var renderedB = b

	    if (isThunk(b)) {
	        renderedB = renderThunk(b, a)
	    }

	    if (isThunk(a)) {
	        renderedA = renderThunk(a, null)
	    }

	    return {
	        a: renderedA,
	        b: renderedB
	    }
	}

	function renderThunk(thunk, previous) {
	    var renderedThunk = thunk.vnode

	    if (!renderedThunk) {
	        renderedThunk = thunk.vnode = thunk.render(previous)
	    }

	    if (!(isVNode(renderedThunk) ||
	            isVText(renderedThunk) ||
	            isWidget(renderedThunk))) {
	        throw new Error("thunk did not return a valid node");
	    }

	    return renderedThunk
	}


/***/ },
/* 220 */
/***/ function(module, exports) {

	module.exports = isThunk

	function isThunk(t) {
	    return t && t.type === "Thunk"
	}


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var diff = __webpack_require__(222)

	module.exports = diff


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(223)

	var VPatch = __webpack_require__(224)
	var isVNode = __webpack_require__(215)
	var isVText = __webpack_require__(217)
	var isWidget = __webpack_require__(218)
	var isThunk = __webpack_require__(220)
	var handleThunk = __webpack_require__(219)

	var diffProps = __webpack_require__(225)

	module.exports = diff

	function diff(a, b) {
	    var patch = { a: a }
	    walk(a, b, patch, 0)
	    return patch
	}

	function walk(a, b, patch, index) {
	    if (a === b) {
	        return
	    }

	    var apply = patch[index]
	    var applyClear = false

	    if (isThunk(a) || isThunk(b)) {
	        thunks(a, b, patch, index)
	    } else if (b == null) {

	        // If a is a widget we will add a remove patch for it
	        // Otherwise any child widgets/hooks must be destroyed.
	        // This prevents adding two remove patches for a widget.
	        if (!isWidget(a)) {
	            clearState(a, patch, index)
	            apply = patch[index]
	        }

	        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
	    } else if (isVNode(b)) {
	        if (isVNode(a)) {
	            if (a.tagName === b.tagName &&
	                a.namespace === b.namespace &&
	                a.key === b.key) {
	                var propsPatch = diffProps(a.properties, b.properties)
	                if (propsPatch) {
	                    apply = appendPatch(apply,
	                        new VPatch(VPatch.PROPS, a, propsPatch))
	                }
	                apply = diffChildren(a, b, patch, apply, index)
	            } else {
	                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	                applyClear = true
	            }
	        } else {
	            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	            applyClear = true
	        }
	    } else if (isVText(b)) {
	        if (!isVText(a)) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	            applyClear = true
	        } else if (a.text !== b.text) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	        }
	    } else if (isWidget(b)) {
	        if (!isWidget(a)) {
	            applyClear = true
	        }

	        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
	    }

	    if (apply) {
	        patch[index] = apply
	    }

	    if (applyClear) {
	        clearState(a, patch, index)
	    }
	}

	function diffChildren(a, b, patch, apply, index) {
	    var aChildren = a.children
	    var orderedSet = reorder(aChildren, b.children)
	    var bChildren = orderedSet.children

	    var aLen = aChildren.length
	    var bLen = bChildren.length
	    var len = aLen > bLen ? aLen : bLen

	    for (var i = 0; i < len; i++) {
	        var leftNode = aChildren[i]
	        var rightNode = bChildren[i]
	        index += 1

	        if (!leftNode) {
	            if (rightNode) {
	                // Excess nodes in b need to be added
	                apply = appendPatch(apply,
	                    new VPatch(VPatch.INSERT, null, rightNode))
	            }
	        } else {
	            walk(leftNode, rightNode, patch, index)
	        }

	        if (isVNode(leftNode) && leftNode.count) {
	            index += leftNode.count
	        }
	    }

	    if (orderedSet.moves) {
	        // Reorder nodes last
	        apply = appendPatch(apply, new VPatch(
	            VPatch.ORDER,
	            a,
	            orderedSet.moves
	        ))
	    }

	    return apply
	}

	function clearState(vNode, patch, index) {
	    // TODO: Make this a single walk, not two
	    unhook(vNode, patch, index)
	    destroyWidgets(vNode, patch, index)
	}

	// Patch records for all destroyed widgets must be added because we need
	// a DOM node reference for the destroy function
	function destroyWidgets(vNode, patch, index) {
	    if (isWidget(vNode)) {
	        if (typeof vNode.destroy === "function") {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(VPatch.REMOVE, vNode, null)
	            )
	        }
	    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
	        var children = vNode.children
	        var len = children.length
	        for (var i = 0; i < len; i++) {
	            var child = children[i]
	            index += 1

	            destroyWidgets(child, patch, index)

	            if (isVNode(child) && child.count) {
	                index += child.count
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}

	// Create a sub-patch for thunks
	function thunks(a, b, patch, index) {
	    var nodes = handleThunk(a, b)
	    var thunkPatch = diff(nodes.a, nodes.b)
	    if (hasPatches(thunkPatch)) {
	        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
	    }
	}

	function hasPatches(patch) {
	    for (var index in patch) {
	        if (index !== "a") {
	            return true
	        }
	    }

	    return false
	}

	// Execute hooks when two nodes are identical
	function unhook(vNode, patch, index) {
	    if (isVNode(vNode)) {
	        if (vNode.hooks) {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(
	                    VPatch.PROPS,
	                    vNode,
	                    undefinedKeys(vNode.hooks)
	                )
	            )
	        }

	        if (vNode.descendantHooks || vNode.hasThunks) {
	            var children = vNode.children
	            var len = children.length
	            for (var i = 0; i < len; i++) {
	                var child = children[i]
	                index += 1

	                unhook(child, patch, index)

	                if (isVNode(child) && child.count) {
	                    index += child.count
	                }
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}

	function undefinedKeys(obj) {
	    var result = {}

	    for (var key in obj) {
	        result[key] = undefined
	    }

	    return result
	}

	// List diff, naive left to right reordering
	function reorder(aChildren, bChildren) {
	    // O(M) time, O(M) memory
	    var bChildIndex = keyIndex(bChildren)
	    var bKeys = bChildIndex.keys
	    var bFree = bChildIndex.free

	    if (bFree.length === bChildren.length) {
	        return {
	            children: bChildren,
	            moves: null
	        }
	    }

	    // O(N) time, O(N) memory
	    var aChildIndex = keyIndex(aChildren)
	    var aKeys = aChildIndex.keys
	    var aFree = aChildIndex.free

	    if (aFree.length === aChildren.length) {
	        return {
	            children: bChildren,
	            moves: null
	        }
	    }

	    // O(MAX(N, M)) memory
	    var newChildren = []

	    var freeIndex = 0
	    var freeCount = bFree.length
	    var deletedItems = 0

	    // Iterate through a and match a node in b
	    // O(N) time,
	    for (var i = 0 ; i < aChildren.length; i++) {
	        var aItem = aChildren[i]
	        var itemIndex

	        if (aItem.key) {
	            if (bKeys.hasOwnProperty(aItem.key)) {
	                // Match up the old keys
	                itemIndex = bKeys[aItem.key]
	                newChildren.push(bChildren[itemIndex])

	            } else {
	                // Remove old keyed items
	                itemIndex = i - deletedItems++
	                newChildren.push(null)
	            }
	        } else {
	            // Match the item in a with the next free item in b
	            if (freeIndex < freeCount) {
	                itemIndex = bFree[freeIndex++]
	                newChildren.push(bChildren[itemIndex])
	            } else {
	                // There are no free items in b to match with
	                // the free items in a, so the extra free nodes
	                // are deleted.
	                itemIndex = i - deletedItems++
	                newChildren.push(null)
	            }
	        }
	    }

	    var lastFreeIndex = freeIndex >= bFree.length ?
	        bChildren.length :
	        bFree[freeIndex]

	    // Iterate through b and append any new keys
	    // O(M) time
	    for (var j = 0; j < bChildren.length; j++) {
	        var newItem = bChildren[j]

	        if (newItem.key) {
	            if (!aKeys.hasOwnProperty(newItem.key)) {
	                // Add any new keyed items
	                // We are adding new items to the end and then sorting them
	                // in place. In future we should insert new items in place.
	                newChildren.push(newItem)
	            }
	        } else if (j >= lastFreeIndex) {
	            // Add any leftover non-keyed items
	            newChildren.push(newItem)
	        }
	    }

	    var simulate = newChildren.slice()
	    var simulateIndex = 0
	    var removes = []
	    var inserts = []
	    var simulateItem

	    for (var k = 0; k < bChildren.length;) {
	        var wantedItem = bChildren[k]
	        simulateItem = simulate[simulateIndex]

	        // remove items
	        while (simulateItem === null && simulate.length) {
	            removes.push(remove(simulate, simulateIndex, null))
	            simulateItem = simulate[simulateIndex]
	        }

	        if (!simulateItem || simulateItem.key !== wantedItem.key) {
	            // if we need a key in this position...
	            if (wantedItem.key) {
	                if (simulateItem && simulateItem.key) {
	                    // if an insert doesn't put this key in place, it needs to move
	                    if (bKeys[simulateItem.key] !== k + 1) {
	                        removes.push(remove(simulate, simulateIndex, simulateItem.key))
	                        simulateItem = simulate[simulateIndex]
	                        // if the remove didn't put the wanted item in place, we need to insert it
	                        if (!simulateItem || simulateItem.key !== wantedItem.key) {
	                            inserts.push({key: wantedItem.key, to: k})
	                        }
	                        // items are matching, so skip ahead
	                        else {
	                            simulateIndex++
	                        }
	                    }
	                    else {
	                        inserts.push({key: wantedItem.key, to: k})
	                    }
	                }
	                else {
	                    inserts.push({key: wantedItem.key, to: k})
	                }
	                k++
	            }
	            // a key in simulate has no matching wanted key, remove it
	            else if (simulateItem && simulateItem.key) {
	                removes.push(remove(simulate, simulateIndex, simulateItem.key))
	            }
	        }
	        else {
	            simulateIndex++
	            k++
	        }
	    }

	    // remove all the remaining nodes from simulate
	    while(simulateIndex < simulate.length) {
	        simulateItem = simulate[simulateIndex]
	        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))
	    }

	    // If the only moves we have are deletes then we can just
	    // let the delete patch remove these items.
	    if (removes.length === deletedItems && !inserts.length) {
	        return {
	            children: newChildren,
	            moves: null
	        }
	    }

	    return {
	        children: newChildren,
	        moves: {
	            removes: removes,
	            inserts: inserts
	        }
	    }
	}

	function remove(arr, index, key) {
	    arr.splice(index, 1)

	    return {
	        from: index,
	        key: key
	    }
	}

	function keyIndex(children) {
	    var keys = {}
	    var free = []
	    var length = children.length

	    for (var i = 0; i < length; i++) {
	        var child = children[i]

	        if (child.key) {
	            keys[child.key] = i
	        } else {
	            free.push(i)
	        }
	    }

	    return {
	        keys: keys,     // A hash of key name to index
	        free: free      // An array of unkeyed item indices
	    }
	}

	function appendPatch(apply, patch) {
	    if (apply) {
	        if (isArray(apply)) {
	            apply.push(patch)
	        } else {
	            apply = [apply, patch]
	        }

	        return apply
	    } else {
	        return patch
	    }
	}


/***/ },
/* 223 */
/***/ function(module, exports) {

	var nativeIsArray = Array.isArray
	var toString = Object.prototype.toString

	module.exports = nativeIsArray || isArray

	function isArray(obj) {
	    return toString.call(obj) === "[object Array]"
	}


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(216)

	VirtualPatch.NONE = 0
	VirtualPatch.VTEXT = 1
	VirtualPatch.VNODE = 2
	VirtualPatch.WIDGET = 3
	VirtualPatch.PROPS = 4
	VirtualPatch.ORDER = 5
	VirtualPatch.INSERT = 6
	VirtualPatch.REMOVE = 7
	VirtualPatch.THUNK = 8

	module.exports = VirtualPatch

	function VirtualPatch(type, vNode, patch) {
	    this.type = Number(type)
	    this.vNode = vNode
	    this.patch = patch
	}

	VirtualPatch.prototype.version = version
	VirtualPatch.prototype.type = "VirtualPatch"


/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(213)
	var isHook = __webpack_require__(214)

	module.exports = diffProps

	function diffProps(a, b) {
	    var diff

	    for (var aKey in a) {
	        if (!(aKey in b)) {
	            diff = diff || {}
	            diff[aKey] = undefined
	        }

	        var aValue = a[aKey]
	        var bValue = b[aKey]

	        if (aValue === bValue) {
	            continue
	        } else if (isObject(aValue) && isObject(bValue)) {
	            if (getPrototype(bValue) !== getPrototype(aValue)) {
	                diff = diff || {}
	                diff[aKey] = bValue
	            } else if (isHook(bValue)) {
	                 diff = diff || {}
	                 diff[aKey] = bValue
	            } else {
	                var objectDiff = diffProps(aValue, bValue)
	                if (objectDiff) {
	                    diff = diff || {}
	                    diff[aKey] = objectDiff
	                }
	            }
	        } else {
	            diff = diff || {}
	            diff[aKey] = bValue
	        }
	    }

	    for (var bKey in b) {
	        if (!(bKey in a)) {
	            diff = diff || {}
	            diff[bKey] = b[bKey]
	        }
	    }

	    return diff
	}

	function getPrototype(value) {
	  if (Object.getPrototypeOf) {
	    return Object.getPrototypeOf(value)
	  } else if (value.__proto__) {
	    return value.__proto__
	  } else if (value.constructor) {
	    return value.constructor.prototype
	  }
	}


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var patch = __webpack_require__(227)

	module.exports = patch


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(210)
	var isArray = __webpack_require__(223)

	var render = __webpack_require__(209)
	var domIndex = __webpack_require__(228)
	var patchOp = __webpack_require__(229)
	module.exports = patch

	function patch(rootNode, patches, renderOptions) {
	    renderOptions = renderOptions || {}
	    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch
	        ? renderOptions.patch
	        : patchRecursive
	    renderOptions.render = renderOptions.render || render

	    return renderOptions.patch(rootNode, patches, renderOptions)
	}

	function patchRecursive(rootNode, patches, renderOptions) {
	    var indices = patchIndices(patches)

	    if (indices.length === 0) {
	        return rootNode
	    }

	    var index = domIndex(rootNode, patches.a, indices)
	    var ownerDocument = rootNode.ownerDocument

	    if (!renderOptions.document && ownerDocument !== document) {
	        renderOptions.document = ownerDocument
	    }

	    for (var i = 0; i < indices.length; i++) {
	        var nodeIndex = indices[i]
	        rootNode = applyPatch(rootNode,
	            index[nodeIndex],
	            patches[nodeIndex],
	            renderOptions)
	    }

	    return rootNode
	}

	function applyPatch(rootNode, domNode, patchList, renderOptions) {
	    if (!domNode) {
	        return rootNode
	    }

	    var newNode

	    if (isArray(patchList)) {
	        for (var i = 0; i < patchList.length; i++) {
	            newNode = patchOp(patchList[i], domNode, renderOptions)

	            if (domNode === rootNode) {
	                rootNode = newNode
	            }
	        }
	    } else {
	        newNode = patchOp(patchList, domNode, renderOptions)

	        if (domNode === rootNode) {
	            rootNode = newNode
	        }
	    }

	    return rootNode
	}

	function patchIndices(patches) {
	    var indices = []

	    for (var key in patches) {
	        if (key !== "a") {
	            indices.push(Number(key))
	        }
	    }

	    return indices
	}


/***/ },
/* 228 */
/***/ function(module, exports) {

	// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
	// We don't want to read all of the DOM nodes in the tree so we use
	// the in-order tree indexing to eliminate recursion down certain branches.
	// We only recurse into a DOM node if we know that it contains a child of
	// interest.

	var noChild = {}

	module.exports = domIndex

	function domIndex(rootNode, tree, indices, nodes) {
	    if (!indices || indices.length === 0) {
	        return {}
	    } else {
	        indices.sort(ascending)
	        return recurse(rootNode, tree, indices, nodes, 0)
	    }
	}

	function recurse(rootNode, tree, indices, nodes, rootIndex) {
	    nodes = nodes || {}


	    if (rootNode) {
	        if (indexInRange(indices, rootIndex, rootIndex)) {
	            nodes[rootIndex] = rootNode
	        }

	        var vChildren = tree.children

	        if (vChildren) {

	            var childNodes = rootNode.childNodes

	            for (var i = 0; i < tree.children.length; i++) {
	                rootIndex += 1

	                var vChild = vChildren[i] || noChild
	                var nextIndex = rootIndex + (vChild.count || 0)

	                // skip recursion down the tree if there are no nodes down here
	                if (indexInRange(indices, rootIndex, nextIndex)) {
	                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
	                }

	                rootIndex = nextIndex
	            }
	        }
	    }

	    return nodes
	}

	// Binary search for an index in the interval [left, right]
	function indexInRange(indices, left, right) {
	    if (indices.length === 0) {
	        return false
	    }

	    var minIndex = 0
	    var maxIndex = indices.length - 1
	    var currentIndex
	    var currentItem

	    while (minIndex <= maxIndex) {
	        currentIndex = ((maxIndex + minIndex) / 2) >> 0
	        currentItem = indices[currentIndex]

	        if (minIndex === maxIndex) {
	            return currentItem >= left && currentItem <= right
	        } else if (currentItem < left) {
	            minIndex = currentIndex + 1
	        } else  if (currentItem > right) {
	            maxIndex = currentIndex - 1
	        } else {
	            return true
	        }
	    }

	    return false;
	}

	function ascending(a, b) {
	    return a > b ? 1 : -1
	}


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var applyProperties = __webpack_require__(212)

	var isWidget = __webpack_require__(218)
	var VPatch = __webpack_require__(224)

	var updateWidget = __webpack_require__(230)

	module.exports = applyPatch

	function applyPatch(vpatch, domNode, renderOptions) {
	    var type = vpatch.type
	    var vNode = vpatch.vNode
	    var patch = vpatch.patch

	    switch (type) {
	        case VPatch.REMOVE:
	            return removeNode(domNode, vNode)
	        case VPatch.INSERT:
	            return insertNode(domNode, patch, renderOptions)
	        case VPatch.VTEXT:
	            return stringPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.WIDGET:
	            return widgetPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.VNODE:
	            return vNodePatch(domNode, vNode, patch, renderOptions)
	        case VPatch.ORDER:
	            reorderChildren(domNode, patch)
	            return domNode
	        case VPatch.PROPS:
	            applyProperties(domNode, patch, vNode.properties)
	            return domNode
	        case VPatch.THUNK:
	            return replaceRoot(domNode,
	                renderOptions.patch(domNode, patch, renderOptions))
	        default:
	            return domNode
	    }
	}

	function removeNode(domNode, vNode) {
	    var parentNode = domNode.parentNode

	    if (parentNode) {
	        parentNode.removeChild(domNode)
	    }

	    destroyWidget(domNode, vNode);

	    return null
	}

	function insertNode(parentNode, vNode, renderOptions) {
	    var newNode = renderOptions.render(vNode, renderOptions)

	    if (parentNode) {
	        parentNode.appendChild(newNode)
	    }

	    return parentNode
	}

	function stringPatch(domNode, leftVNode, vText, renderOptions) {
	    var newNode

	    if (domNode.nodeType === 3) {
	        domNode.replaceData(0, domNode.length, vText.text)
	        newNode = domNode
	    } else {
	        var parentNode = domNode.parentNode
	        newNode = renderOptions.render(vText, renderOptions)

	        if (parentNode && newNode !== domNode) {
	            parentNode.replaceChild(newNode, domNode)
	        }
	    }

	    return newNode
	}

	function widgetPatch(domNode, leftVNode, widget, renderOptions) {
	    var updating = updateWidget(leftVNode, widget)
	    var newNode

	    if (updating) {
	        newNode = widget.update(leftVNode, domNode) || domNode
	    } else {
	        newNode = renderOptions.render(widget, renderOptions)
	    }

	    var parentNode = domNode.parentNode

	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }

	    if (!updating) {
	        destroyWidget(domNode, leftVNode)
	    }

	    return newNode
	}

	function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
	    var parentNode = domNode.parentNode
	    var newNode = renderOptions.render(vNode, renderOptions)

	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }

	    return newNode
	}

	function destroyWidget(domNode, w) {
	    if (typeof w.destroy === "function" && isWidget(w)) {
	        w.destroy(domNode)
	    }
	}

	function reorderChildren(domNode, moves) {
	    var childNodes = domNode.childNodes
	    var keyMap = {}
	    var node
	    var remove
	    var insert

	    for (var i = 0; i < moves.removes.length; i++) {
	        remove = moves.removes[i]
	        node = childNodes[remove.from]
	        if (remove.key) {
	            keyMap[remove.key] = node
	        }
	        domNode.removeChild(node)
	    }

	    var length = childNodes.length
	    for (var j = 0; j < moves.inserts.length; j++) {
	        insert = moves.inserts[j]
	        node = keyMap[insert.key]
	        // this is the weirdest bug i've ever seen in webkit
	        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])
	    }
	}

	function replaceRoot(oldRoot, newRoot) {
	    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
	        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
	    }

	    return newRoot;
	}


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var isWidget = __webpack_require__(218)

	module.exports = updateWidget

	function updateWidget(a, b) {
	    if (isWidget(a) && isWidget(b)) {
	        if ("name" in a && "name" in b) {
	            return a.id === b.id
	        } else {
	            return a.init === b.init
	        }
	    }

	    return false
	}


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(216)

	module.exports = VirtualText

	function VirtualText(text) {
	    this.text = String(text)
	}

	VirtualText.prototype.version = version
	VirtualText.prototype.type = "VirtualText"


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(216)
	var isVNode = __webpack_require__(215)
	var isWidget = __webpack_require__(218)
	var isThunk = __webpack_require__(220)
	var isVHook = __webpack_require__(214)

	module.exports = VirtualNode

	var noProperties = {}
	var noChildren = []

	function VirtualNode(tagName, properties, children, key, namespace) {
	    this.tagName = tagName
	    this.properties = properties || noProperties
	    this.children = children || noChildren
	    this.key = key != null ? String(key) : undefined
	    this.namespace = (typeof namespace === "string") ? namespace : null

	    var count = (children && children.length) || 0
	    var descendants = 0
	    var hasWidgets = false
	    var hasThunks = false
	    var descendantHooks = false
	    var hooks

	    for (var propName in properties) {
	        if (properties.hasOwnProperty(propName)) {
	            var property = properties[propName]
	            if (isVHook(property) && property.unhook) {
	                if (!hooks) {
	                    hooks = {}
	                }

	                hooks[propName] = property
	            }
	        }
	    }

	    for (var i = 0; i < count; i++) {
	        var child = children[i]
	        if (isVNode(child)) {
	            descendants += child.count || 0

	            if (!hasWidgets && child.hasWidgets) {
	                hasWidgets = true
	            }

	            if (!hasThunks && child.hasThunks) {
	                hasThunks = true
	            }

	            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
	                descendantHooks = true
	            }
	        } else if (!hasWidgets && isWidget(child)) {
	            if (typeof child.destroy === "function") {
	                hasWidgets = true
	            }
	        } else if (!hasThunks && isThunk(child)) {
	            hasThunks = true;
	        }
	    }

	    this.count = count + descendants
	    this.hasWidgets = hasWidgets
	    this.hasThunks = hasThunks
	    this.hooks = hooks
	    this.descendantHooks = descendantHooks
	}

	VirtualNode.prototype.version = version
	VirtualNode.prototype.type = "VirtualNode"


/***/ },
/* 233 */
/***/ function(module, exports) {

	'use strict';

	module.exports = SoftSetHook;

	function SoftSetHook(value) {
	    if (!(this instanceof SoftSetHook)) {
	        return new SoftSetHook(value);
	    }

	    this.value = value;
	}

	SoftSetHook.prototype.hook = function (node, propertyName) {
	    if (node[propertyName] !== this.value) {
	        node[propertyName] = this.value;
	    }
	};


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Halogen_HTML = __webpack_require__(235);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Halogen_HTML_Elements_Indexed = __webpack_require__(237);
	module.exports = {};

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Halogen_Component = __webpack_require__(115);
	var Halogen_Component_ChildPath = __webpack_require__(140);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Halogen_HTML_Elements = __webpack_require__(236);
	var Data_Functor = __webpack_require__(8);
	var text = Halogen_HTML_Core.Text.create;
	var slot$prime = function slot$prime(dictFunctor) {
	    return function (i) {
	        return function (p) {
	            return function (l) {
	                var transform = function transform(def) {
	                    return {
	                        component: Halogen_Component.transformChild(dictFunctor)(i)(def.component),
	                        initialState: Halogen_Component_ChildPath.injState(i)(def.initialState)
	                    };
	                };
	                return new Halogen_HTML_Core.Slot(new Halogen_Component.SlotConstructor(Halogen_Component_ChildPath.injSlot(i)(p), Data_Functor.map(Data_Functor.functorFn)(transform)(l)));
	            };
	        };
	    };
	};
	var slot = function slot(p) {
	    return function (l) {
	        return new Halogen_HTML_Core.Slot(new Halogen_Component.SlotConstructor(p, l));
	    };
	};
	module.exports = {
	    slot: slot,
	    "slot'": slot$prime,
	    text: text
	};

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Halogen_HTML_Core = __webpack_require__(163);
	var wbr = function wbr(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("wbr"))(props)([]);
	};
	var video = function video(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("video"))(xs);
	};
	var video_ = video([]);
	var $$var = function $$var(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("var"))(xs);
	};
	var var_ = $$var([]);
	var ul = function ul(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ul"))(xs);
	};
	var ul_ = ul([]);
	var u = function u(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("u"))(xs);
	};
	var u_ = u([]);
	var tt = function tt(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tt"))(xs);
	};
	var tt_ = tt([]);
	var track = function track(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("track"))(props)([]);
	};
	var tr = function tr(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tr"))(xs);
	};
	var tr_ = tr([]);
	var title = function title(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("title"))(xs);
	};
	var title_ = title([]);
	var time = function time(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("time"))(xs);
	};
	var time_ = time([]);
	var thead = function thead(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("thead"))(xs);
	};
	var thead_ = thead([]);
	var th = function th(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("th"))(xs);
	};
	var th_ = th([]);
	var tfoot = function tfoot(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tfoot"))(xs);
	};
	var tfoot_ = tfoot([]);
	var textarea = function textarea(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("textarea"))(xs)([]);
	};
	var td = function td(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("td"))(xs);
	};
	var td_ = td([]);
	var tbody = function tbody(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tbody"))(xs);
	};
	var tbody_ = tbody([]);
	var table = function table(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("table"))(xs);
	};
	var table_ = table([]);
	var sup = function sup(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("sup"))(xs);
	};
	var sup_ = sup([]);
	var summary = function summary(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("summary"))(xs);
	};
	var summary_ = summary([]);
	var sub = function sub(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("sub"))(xs);
	};
	var sub_ = sub([]);
	var style = function style(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("style"))(xs);
	};
	var style_ = style([]);
	var strong = function strong(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("strong"))(xs);
	};
	var strong_ = strong([]);
	var strike = function strike(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("strike"))(xs);
	};
	var strike_ = strike([]);
	var span = function span(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("span"))(xs);
	};
	var span_ = span([]);
	var source = function source(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("source"))(props)([]);
	};
	var small = function small(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("small"))(xs);
	};
	var small_ = small([]);
	var select = function select(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("select"))(xs);
	};
	var select_ = select([]);
	var section = function section(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("section"))(xs);
	};
	var section_ = section([]);
	var script = function script(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("script"))(xs);
	};
	var script_ = script([]);
	var samp = function samp(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("samp"))(xs);
	};
	var samp_ = samp([]);
	var s = function s(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("s"))(xs);
	};
	var s_ = s([]);
	var ruby = function ruby(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ruby"))(xs);
	};
	var ruby_ = ruby([]);
	var rt = function rt(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("rt"))(xs);
	};
	var rt_ = rt([]);
	var rp = function rp(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("rp"))(xs);
	};
	var rp_ = rp([]);
	var q = function q(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("q"))(xs);
	};
	var q_ = q([]);
	var progress = function progress(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("progress"))(xs);
	};
	var progress_ = progress([]);
	var pre = function pre(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("pre"))(xs);
	};
	var pre_ = pre([]);
	var param = function param(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("param"))(props)([]);
	};
	var p = function p(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("p"))(xs);
	};
	var p_ = p([]);
	var output = function output(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("output"))(xs);
	};
	var output_ = output([]);
	var option = function option(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("option"))(xs);
	};
	var option_ = option([]);
	var optgroup = function optgroup(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("optgroup"))(xs);
	};
	var optgroup_ = optgroup([]);
	var ol = function ol(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ol"))(xs);
	};
	var ol_ = ol([]);
	var object = function object(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("object"))(xs);
	};
	var object_ = object([]);
	var noscript = function noscript(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("noscript"))(xs);
	};
	var noscript_ = noscript([]);
	var noframes = function noframes(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("noframes"))(xs);
	};
	var noframes_ = noframes([]);
	var nav = function nav(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("nav"))(xs);
	};
	var nav_ = nav([]);
	var meter = function meter(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("meter"))(xs);
	};
	var meter_ = meter([]);
	var meta = function meta(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("meta"))(props)([]);
	};
	var menuitem = function menuitem(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("menuitem"))(xs);
	};
	var menuitem_ = menuitem([]);
	var menu = function menu(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("menu"))(xs);
	};
	var menu_ = menu([]);
	var mark = function mark(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("mark"))(xs);
	};
	var mark_ = mark([]);
	var map = function map(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("map"))(xs);
	};
	var map_ = map([]);
	var main = function main(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("main"))(xs);
	};
	var main_ = main([]);
	var link = function link(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("link"))(props)([]);
	};
	var li = function li(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("li"))(xs);
	};
	var li_ = li([]);
	var legend = function legend(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("legend"))(xs);
	};
	var legend_ = legend([]);
	var label = function label(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("label"))(xs);
	};
	var label_ = label([]);
	var keygen = function keygen(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("keygen"))(props)([]);
	};
	var kbd = function kbd(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("kbd"))(xs);
	};
	var kbd_ = kbd([]);
	var ins = function ins(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ins"))(xs);
	};
	var ins_ = ins([]);
	var input = function input(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("input"))(props)([]);
	};
	var img = function img(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("img"))(props)([]);
	};
	var iframe = function iframe(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("iframe"))(props)([]);
	};
	var i = function i(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("i"))(xs);
	};
	var i_ = i([]);
	var html = function html(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("html"))(xs);
	};
	var html_ = html([]);
	var hr = function hr(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("hr"))(props)([]);
	};
	var hr_ = hr([]);
	var header = function header(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("header"))(xs);
	};
	var header_ = header([]);
	var head = function head(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("head"))(xs);
	};
	var head_ = head([]);
	var h6 = function h6(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h6"))(xs);
	};
	var h6_ = h6([]);
	var h5 = function h5(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h5"))(xs);
	};
	var h5_ = h5([]);
	var h4 = function h4(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h4"))(xs);
	};
	var h4_ = h4([]);
	var h3 = function h3(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h3"))(xs);
	};
	var h3_ = h3([]);
	var h2 = function h2(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h2"))(xs);
	};
	var h2_ = h2([]);
	var h1 = function h1(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h1"))(xs);
	};
	var h1_ = h1([]);
	var frameset = function frameset(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("frameset"))(xs);
	};
	var frameset_ = frameset([]);
	var frame = function frame(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("frame"))(xs);
	};
	var frame_ = frame([]);
	var form = function form(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("form"))(xs);
	};
	var form_ = form([]);
	var footer = function footer(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("footer"))(xs);
	};
	var footer_ = footer([]);
	var font = function font(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("font"))(xs);
	};
	var font_ = font([]);
	var figure = function figure(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("figure"))(xs);
	};
	var figure_ = figure([]);
	var figcaption = function figcaption(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("figcaption"))(xs);
	};
	var figcaption_ = figcaption([]);
	var fieldset = function fieldset(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("fieldset"))(xs);
	};
	var fieldset_ = fieldset([]);
	var embed = function embed(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("embed"))(xs);
	};
	var embed_ = embed([]);
	var em = Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("em"));
	var em_ = em([]);
	var dt = function dt(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dt"))(xs);
	};
	var dt_ = dt([]);
	var dl = function dl(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dl"))(xs);
	};
	var dl_ = dl([]);
	var div = function div(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("div"))(xs);
	};
	var div_ = div([]);
	var dir = function dir(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dir"))(xs);
	};
	var dir_ = dir([]);
	var dialog = function dialog(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dialog"))(xs);
	};
	var dialog_ = dialog([]);
	var dfn = function dfn(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dfn"))(xs);
	};
	var dfn_ = dfn([]);
	var details = function details(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("details"))(xs);
	};
	var details_ = details([]);
	var del = function del(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("del"))(xs);
	};
	var del_ = del([]);
	var dd = function dd(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dd"))(xs);
	};
	var dd_ = dd([]);
	var datalist = function datalist(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("datalist"))(xs);
	};
	var datalist_ = datalist([]);
	var command = function command(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("command"))(props)([]);
	};
	var colgroup = function colgroup(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("colgroup"))(xs);
	};
	var colgroup_ = colgroup([]);
	var col = function col(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("col"))(props)([]);
	};
	var code = function code(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("code"))(xs);
	};
	var code_ = code([]);
	var cite = function cite(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("cite"))(xs);
	};
	var cite_ = cite([]);
	var center = function center(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("center"))(xs);
	};
	var center_ = center([]);
	var caption = function caption(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("caption"))(xs);
	};
	var caption_ = caption([]);
	var canvas = function canvas(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("canvas"))(props)([]);
	};
	var button = function button(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("button"))(xs);
	};
	var button_ = button([]);
	var br = function br(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("br"))(props)([]);
	};
	var br_ = br([]);
	var body = function body(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("body"))(xs);
	};
	var body_ = body([]);
	var blockquote = function blockquote(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("blockquote"))(xs);
	};
	var blockquote_ = blockquote([]);
	var big = function big(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("big"))(xs);
	};
	var big_ = big([]);
	var bdo = function bdo(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("bdo"))(xs);
	};
	var bdo_ = bdo([]);
	var bdi = function bdi(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("bdi"))(xs);
	};
	var bdi_ = bdi([]);
	var basefont = function basefont(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("basefont"))(xs);
	};
	var basefont_ = basefont([]);
	var base = function base(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("base"))(props)([]);
	};
	var b = function b(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("b"))(xs);
	};
	var b_ = b([]);
	var audio = function audio(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("audio"))(xs);
	};
	var audio_ = audio([]);
	var aside = function aside(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("aside"))(xs);
	};
	var aside_ = aside([]);
	var article = function article(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("article"))(xs);
	};
	var article_ = article([]);
	var area = function area(props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("area"))(props)([]);
	};
	var applet = function applet(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("applet"))(xs);
	};
	var applet_ = applet([]);
	var address = function address(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("address"))(xs);
	};
	var address_ = address([]);
	var acronym = function acronym(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("acronym"))(xs);
	};
	var acronym_ = acronym([]);
	var abbr = function abbr(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("abbr"))(xs);
	};
	var abbr_ = abbr([]);
	var a = function a(xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("a"))(xs);
	};
	var a_ = a([]);
	module.exports = {
	    a: a,
	    a_: a_,
	    abbr: abbr,
	    abbr_: abbr_,
	    acronym: acronym,
	    acronym_: acronym_,
	    address: address,
	    address_: address_,
	    applet: applet,
	    applet_: applet_,
	    area: area,
	    article: article,
	    article_: article_,
	    aside: aside,
	    aside_: aside_,
	    audio: audio,
	    audio_: audio_,
	    b: b,
	    b_: b_,
	    base: base,
	    basefont: basefont,
	    basefont_: basefont_,
	    bdi: bdi,
	    bdi_: bdi_,
	    bdo: bdo,
	    bdo_: bdo_,
	    big: big,
	    big_: big_,
	    blockquote: blockquote,
	    blockquote_: blockquote_,
	    body: body,
	    body_: body_,
	    br: br,
	    br_: br_,
	    button: button,
	    button_: button_,
	    canvas: canvas,
	    caption: caption,
	    caption_: caption_,
	    center: center,
	    center_: center_,
	    cite: cite,
	    cite_: cite_,
	    code: code,
	    code_: code_,
	    col: col,
	    colgroup: colgroup,
	    colgroup_: colgroup_,
	    command: command,
	    datalist: datalist,
	    datalist_: datalist_,
	    dd: dd,
	    dd_: dd_,
	    del: del,
	    del_: del_,
	    details: details,
	    details_: details_,
	    dfn: dfn,
	    dfn_: dfn_,
	    dialog: dialog,
	    dialog_: dialog_,
	    dir: dir,
	    dir_: dir_,
	    div: div,
	    div_: div_,
	    dl: dl,
	    dl_: dl_,
	    dt: dt,
	    dt_: dt_,
	    em: em,
	    em_: em_,
	    embed: embed,
	    embed_: embed_,
	    fieldset: fieldset,
	    fieldset_: fieldset_,
	    figcaption: figcaption,
	    figcaption_: figcaption_,
	    figure: figure,
	    figure_: figure_,
	    font: font,
	    font_: font_,
	    footer: footer,
	    footer_: footer_,
	    form: form,
	    form_: form_,
	    frame: frame,
	    frame_: frame_,
	    frameset: frameset,
	    frameset_: frameset_,
	    h1: h1,
	    h1_: h1_,
	    h2: h2,
	    h2_: h2_,
	    h3: h3,
	    h3_: h3_,
	    h4: h4,
	    h4_: h4_,
	    h5: h5,
	    h5_: h5_,
	    h6: h6,
	    h6_: h6_,
	    head: head,
	    head_: head_,
	    header: header,
	    header_: header_,
	    hr: hr,
	    hr_: hr_,
	    html: html,
	    html_: html_,
	    i: i,
	    i_: i_,
	    iframe: iframe,
	    img: img,
	    input: input,
	    ins: ins,
	    ins_: ins_,
	    kbd: kbd,
	    kbd_: kbd_,
	    keygen: keygen,
	    label: label,
	    label_: label_,
	    legend: legend,
	    legend_: legend_,
	    li: li,
	    li_: li_,
	    link: link,
	    main: main,
	    main_: main_,
	    map: map,
	    map_: map_,
	    mark: mark,
	    mark_: mark_,
	    menu: menu,
	    menu_: menu_,
	    menuitem: menuitem,
	    menuitem_: menuitem_,
	    meta: meta,
	    meter: meter,
	    meter_: meter_,
	    nav: nav,
	    nav_: nav_,
	    noframes: noframes,
	    noframes_: noframes_,
	    noscript: noscript,
	    noscript_: noscript_,
	    object: object,
	    object_: object_,
	    ol: ol,
	    ol_: ol_,
	    optgroup: optgroup,
	    optgroup_: optgroup_,
	    option: option,
	    option_: option_,
	    output: output,
	    output_: output_,
	    p: p,
	    p_: p_,
	    param: param,
	    pre: pre,
	    pre_: pre_,
	    progress: progress,
	    progress_: progress_,
	    q: q,
	    q_: q_,
	    rp: rp,
	    rp_: rp_,
	    rt: rt,
	    rt_: rt_,
	    ruby: ruby,
	    ruby_: ruby_,
	    s: s,
	    s_: s_,
	    samp: samp,
	    samp_: samp_,
	    script: script,
	    script_: script_,
	    section: section,
	    section_: section_,
	    select: select,
	    select_: select_,
	    small: small,
	    small_: small_,
	    source: source,
	    span: span,
	    span_: span_,
	    strike: strike,
	    strike_: strike_,
	    strong: strong,
	    strong_: strong_,
	    style: style,
	    style_: style_,
	    sub: sub,
	    sub_: sub_,
	    summary: summary,
	    summary_: summary_,
	    sup: sup,
	    sup_: sup_,
	    table: table,
	    table_: table_,
	    tbody: tbody,
	    tbody_: tbody_,
	    td: td,
	    td_: td_,
	    textarea: textarea,
	    tfoot: tfoot,
	    tfoot_: tfoot_,
	    th: th,
	    th_: th_,
	    thead: thead,
	    thead_: thead_,
	    time: time,
	    time_: time_,
	    title: title,
	    title_: title_,
	    tr: tr,
	    tr_: tr_,
	    track: track,
	    tt: tt,
	    tt_: tt_,
	    u: u,
	    u_: u_,
	    ul: ul,
	    ul_: ul_,
	    "var": $$var,
	    var_: var_,
	    video: video,
	    video_: video_,
	    wbr: wbr
	};

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Halogen_HTML_Core = __webpack_require__(163);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(238);
	var Halogen_HTML_Elements_1 = __webpack_require__(236);
	var Halogen_HTML_Elements_1 = __webpack_require__(236);
	var Unsafe_Coerce = __webpack_require__(112);
	var wbr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.wbr);
	var video = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.video);
	var $$var = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1["var"]);
	var ul = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ul);
	var u = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.u);
	var tt = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tt);
	var track = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.track);
	var tr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tr);
	var title = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.title);
	var time = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.time);
	var thead = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.thead);
	var th = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.th);
	var tfoot = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tfoot);
	var textarea = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.textarea);
	var td = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.td);
	var tbody = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tbody);
	var table = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.table);
	var sup = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.sup);
	var summary = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.summary);
	var sub = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.sub);
	var style = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.style);
	var strong = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.strong);
	var span = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.span);
	var source = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.source);
	var small = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.small);
	var select = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.select);
	var section = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.section);
	var script = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.script);
	var samp = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.samp);
	var s = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.s);
	var ruby = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ruby);
	var rt = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.rt);
	var rp = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.rp);
	var q = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.q);
	var progress = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.progress);
	var pre = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.pre);
	var param = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.param);
	var p = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.p);
	var output = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.output);
	var option = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.option);
	var optgroup = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.optgroup);
	var ol = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ol);
	var object = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.object);
	var noscript = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.noscript);
	var noframes = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.noframes);
	var nav = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.nav);
	var meter = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.meter);
	var meta = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.meta);
	var menuitem = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.menuitem);
	var menu = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.menu);
	var mark = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.mark);
	var map = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.map);
	var main = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.main);
	var link = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.link);
	var li = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.li);
	var legend = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.legend);
	var label = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.label);
	var keygen = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.keygen);
	var kbd = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.kbd);
	var ins = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ins);
	var input = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.input);
	var img = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.img);
	var iframe = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.iframe);
	var i = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.i);
	var html = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.html);
	var hr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.hr);
	var header = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.header);
	var head = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.head);
	var h6 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h6);
	var h5 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h5);
	var h4 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h4);
	var h3 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h3);
	var h2 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h2);
	var h1 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h1);
	var form = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.form);
	var footer = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.footer);
	var figure = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.figure);
	var figcaption = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.figcaption);
	var fieldset = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.fieldset);
	var embed = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.embed);
	var em = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.em);
	var dt = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dt);
	var dl = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dl);
	var div = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.div);
	var dir = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dir);
	var dialog = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dialog);
	var dfn = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dfn);
	var details = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.details);
	var del = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.del);
	var dd = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dd);
	var datalist = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.datalist);
	var command = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.command);
	var colgroup = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.colgroup);
	var col = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.col);
	var code = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.code);
	var cite = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.cite);
	var center = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.center);
	var caption = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.caption);
	var canvas = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.canvas);
	var button = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.button);
	var br = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.br);
	var body = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.body);
	var blockquote = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.blockquote);
	var big = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.big);
	var bdo = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.bdo);
	var bdi = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.bdi);
	var basefont = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.basefont);
	var base = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.base);
	var b = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.b);
	var audio = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.audio);
	var aside = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.aside);
	var article = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.article);
	var area = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.area);
	var applet = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.applet);
	var address = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.address);
	var acronym = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.acronym);
	var abbr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.a);
	var a = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.a);
	module.exports = {
	    a: a,
	    abbr: abbr,
	    acronym: acronym,
	    address: address,
	    applet: applet,
	    area: area,
	    article: article,
	    aside: aside,
	    audio: audio,
	    b: b,
	    base: base,
	    basefont: basefont,
	    bdi: bdi,
	    bdo: bdo,
	    big: big,
	    blockquote: blockquote,
	    body: body,
	    br: br,
	    button: button,
	    canvas: canvas,
	    caption: caption,
	    center: center,
	    cite: cite,
	    code: code,
	    col: col,
	    colgroup: colgroup,
	    command: command,
	    datalist: datalist,
	    dd: dd,
	    del: del,
	    details: details,
	    dfn: dfn,
	    dialog: dialog,
	    dir: dir,
	    div: div,
	    dl: dl,
	    dt: dt,
	    em: em,
	    embed: embed,
	    fieldset: fieldset,
	    figcaption: figcaption,
	    figure: figure,
	    footer: footer,
	    form: form,
	    h1: h1,
	    h2: h2,
	    h3: h3,
	    h4: h4,
	    h5: h5,
	    h6: h6,
	    head: head,
	    header: header,
	    hr: hr,
	    html: html,
	    i: i,
	    iframe: iframe,
	    img: img,
	    input: input,
	    ins: ins,
	    kbd: kbd,
	    keygen: keygen,
	    label: label,
	    legend: legend,
	    li: li,
	    link: link,
	    main: main,
	    map: map,
	    mark: mark,
	    menu: menu,
	    menuitem: menuitem,
	    meta: meta,
	    meter: meter,
	    nav: nav,
	    noframes: noframes,
	    noscript: noscript,
	    object: object,
	    ol: ol,
	    optgroup: optgroup,
	    option: option,
	    output: output,
	    p: p,
	    param: param,
	    pre: pre,
	    progress: progress,
	    q: q,
	    rp: rp,
	    rt: rt,
	    ruby: ruby,
	    s: s,
	    samp: samp,
	    script: script,
	    section: section,
	    select: select,
	    small: small,
	    source: source,
	    span: span,
	    strong: strong,
	    style: style,
	    sub: sub,
	    summary: summary,
	    sup: sup,
	    table: table,
	    tbody: tbody,
	    td: td,
	    textarea: textarea,
	    tfoot: tfoot,
	    th: th,
	    thead: thead,
	    time: time,
	    title: title,
	    tr: tr,
	    track: track,
	    tt: tt,
	    u: u,
	    ul: ul,
	    "var": $$var,
	    video: video,
	    wbr: wbr
	};

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Array = __webpack_require__(122);
	var Data_Foldable = __webpack_require__(70);
	var Data_Maybe = __webpack_require__(72);
	var Data_Tuple = __webpack_require__(100);
	var Unsafe_Coerce = __webpack_require__(112);
	var DOM_HTML_Types = __webpack_require__(165);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Halogen_HTML_Properties_1 = __webpack_require__(239);
	var Halogen_HTML_Properties_1 = __webpack_require__(239);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Eq = __webpack_require__(28);
	var Data_Boolean = __webpack_require__(20);
	var Data_Monoid = __webpack_require__(61);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var MenuitemCommand = function () {
	    function MenuitemCommand() {};
	    MenuitemCommand.value = new MenuitemCommand();
	    return MenuitemCommand;
	}();
	var MenuitemCheckbox = function () {
	    function MenuitemCheckbox() {};
	    MenuitemCheckbox.value = new MenuitemCheckbox();
	    return MenuitemCheckbox;
	}();
	var MenuitemRadio = function () {
	    function MenuitemRadio() {};
	    MenuitemRadio.value = new MenuitemRadio();
	    return MenuitemRadio;
	}();
	var MenuList = function () {
	    function MenuList() {};
	    MenuList.value = new MenuList();
	    return MenuList;
	}();
	var MenuContext = function () {
	    function MenuContext() {};
	    MenuContext.value = new MenuContext();
	    return MenuContext;
	}();
	var MenuToolbar = function () {
	    function MenuToolbar() {};
	    MenuToolbar.value = new MenuToolbar();
	    return MenuToolbar;
	}();
	var InputButton = function () {
	    function InputButton() {};
	    InputButton.value = new InputButton();
	    return InputButton;
	}();
	var InputCheckbox = function () {
	    function InputCheckbox() {};
	    InputCheckbox.value = new InputCheckbox();
	    return InputCheckbox;
	}();
	var InputColor = function () {
	    function InputColor() {};
	    InputColor.value = new InputColor();
	    return InputColor;
	}();
	var InputDate = function () {
	    function InputDate() {};
	    InputDate.value = new InputDate();
	    return InputDate;
	}();
	var InputDatetime = function () {
	    function InputDatetime() {};
	    InputDatetime.value = new InputDatetime();
	    return InputDatetime;
	}();
	var InputDatetimeLocal = function () {
	    function InputDatetimeLocal() {};
	    InputDatetimeLocal.value = new InputDatetimeLocal();
	    return InputDatetimeLocal;
	}();
	var InputEmail = function () {
	    function InputEmail() {};
	    InputEmail.value = new InputEmail();
	    return InputEmail;
	}();
	var InputFile = function () {
	    function InputFile() {};
	    InputFile.value = new InputFile();
	    return InputFile;
	}();
	var InputHidden = function () {
	    function InputHidden() {};
	    InputHidden.value = new InputHidden();
	    return InputHidden;
	}();
	var InputImage = function () {
	    function InputImage() {};
	    InputImage.value = new InputImage();
	    return InputImage;
	}();
	var InputMonth = function () {
	    function InputMonth() {};
	    InputMonth.value = new InputMonth();
	    return InputMonth;
	}();
	var InputNumber = function () {
	    function InputNumber() {};
	    InputNumber.value = new InputNumber();
	    return InputNumber;
	}();
	var InputPassword = function () {
	    function InputPassword() {};
	    InputPassword.value = new InputPassword();
	    return InputPassword;
	}();
	var InputRadio = function () {
	    function InputRadio() {};
	    InputRadio.value = new InputRadio();
	    return InputRadio;
	}();
	var InputRange = function () {
	    function InputRange() {};
	    InputRange.value = new InputRange();
	    return InputRange;
	}();
	var InputReset = function () {
	    function InputReset() {};
	    InputReset.value = new InputReset();
	    return InputReset;
	}();
	var InputSearch = function () {
	    function InputSearch() {};
	    InputSearch.value = new InputSearch();
	    return InputSearch;
	}();
	var InputSubmit = function () {
	    function InputSubmit() {};
	    InputSubmit.value = new InputSubmit();
	    return InputSubmit;
	}();
	var InputTel = function () {
	    function InputTel() {};
	    InputTel.value = new InputTel();
	    return InputTel;
	}();
	var InputText = function () {
	    function InputText() {};
	    InputText.value = new InputText();
	    return InputText;
	}();
	var InputTime = function () {
	    function InputTime() {};
	    InputTime.value = new InputTime();
	    return InputTime;
	}();
	var InputUrl = function () {
	    function InputUrl() {};
	    InputUrl.value = new InputUrl();
	    return InputUrl;
	}();
	var InputWeek = function () {
	    function InputWeek() {};
	    InputWeek.value = new InputWeek();
	    return InputWeek;
	}();
	var IProp = function IProp(x) {
	    return x;
	};
	var Uppercase = function () {
	    function Uppercase() {};
	    Uppercase.value = new Uppercase();
	    return Uppercase;
	}();
	var Lowercase = function () {
	    function Lowercase() {};
	    Lowercase.value = new Lowercase();
	    return Lowercase;
	}();
	var NumeralDecimal = function () {
	    function NumeralDecimal() {};
	    NumeralDecimal.value = new NumeralDecimal();
	    return NumeralDecimal;
	}();
	var NumeralRoman = function () {
	    function NumeralRoman(value0) {
	        this.value0 = value0;
	    };
	    NumeralRoman.create = function (value0) {
	        return new NumeralRoman(value0);
	    };
	    return NumeralRoman;
	}();
	var OrderedListNumeric = function () {
	    function OrderedListNumeric(value0) {
	        this.value0 = value0;
	    };
	    OrderedListNumeric.create = function (value0) {
	        return new OrderedListNumeric(value0);
	    };
	    return OrderedListNumeric;
	}();
	var OrderedListAlphabetic = function () {
	    function OrderedListAlphabetic(value0) {
	        this.value0 = value0;
	    };
	    OrderedListAlphabetic.create = function (value0) {
	        return new OrderedListAlphabetic(value0);
	    };
	    return OrderedListAlphabetic;
	}();
	var ButtonButton = function () {
	    function ButtonButton() {};
	    ButtonButton.value = new ButtonButton();
	    return ButtonButton;
	}();
	var ButtonSubmit = function () {
	    function ButtonSubmit() {};
	    ButtonSubmit.value = new ButtonSubmit();
	    return ButtonSubmit;
	}();
	var ButtonReset = function () {
	    function ButtonReset() {};
	    ButtonReset.value = new ButtonReset();
	    return ButtonReset;
	}();
	var renderOrderedListType = function renderOrderedListType(ty) {
	    if (ty instanceof OrderedListNumeric) {
	        if (ty.value0 instanceof NumeralDecimal) {
	            return "1";
	        };
	        if (ty.value0 instanceof NumeralRoman) {
	            if (ty.value0.value0 instanceof Lowercase) {
	                return "i";
	            };
	            if (ty.value0.value0 instanceof Uppercase) {
	                return "I";
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 296, column 11 - line 299, column 5: " + [ty.value0.value0.constructor.name]);
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 293, column 7 - line 299, column 5: " + [ty.value0.constructor.name]);
	    };
	    if (ty instanceof OrderedListAlphabetic) {
	        if (ty.value0 instanceof Lowercase) {
	            return "a";
	        };
	        if (ty.value0 instanceof Uppercase) {
	            return "A";
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 300, column 7 - line 304, column 1: " + [ty.value0.constructor.name]);
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 291, column 3 - line 304, column 1: " + [ty.constructor.name]);
	};
	var renderMenuitemType = function renderMenuitemType(ty) {
	    if (ty instanceof MenuitemCommand) {
	        return "command";
	    };
	    if (ty instanceof MenuitemCheckbox) {
	        return "checkbox";
	    };
	    if (ty instanceof MenuitemRadio) {
	        return "radio";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 234, column 3 - line 239, column 1: " + [ty.constructor.name]);
	};
	var renderMenuType = function renderMenuType(ty) {
	    if (ty instanceof MenuList) {
	        return "list";
	    };
	    if (ty instanceof MenuContext) {
	        return "context";
	    };
	    if (ty instanceof MenuToolbar) {
	        return "toolbar";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 219, column 3 - line 224, column 1: " + [ty.constructor.name]);
	};
	var renderMediaType = function renderMediaType(ty) {
	    var renderParameter = function renderParameter(v) {
	        return v.value0 + ("=" + v.value1);
	    };
	    var renderParameters = function renderParameters(ps) {
	        if (Data_Array.length(ps) === 0) {
	            return "";
	        };
	        if (Data_Boolean.otherwise) {
	            return ";" + Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(";")(Data_Functor.map(Data_Functor.functorArray)(renderParameter)(ps));
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 252, column 5 - line 254, column 68: " + [ps.constructor.name]);
	    };
	    return ty.type + ("/" + (ty.subtype + renderParameters(ty.parameters)));
	};
	var renderInputType = function renderInputType(ty) {
	    if (ty instanceof InputButton) {
	        return "button";
	    };
	    if (ty instanceof InputCheckbox) {
	        return "checkbox";
	    };
	    if (ty instanceof InputColor) {
	        return "color";
	    };
	    if (ty instanceof InputDate) {
	        return "date";
	    };
	    if (ty instanceof InputDatetime) {
	        return "datetime";
	    };
	    if (ty instanceof InputDatetimeLocal) {
	        return "datetime-local";
	    };
	    if (ty instanceof InputEmail) {
	        return "email";
	    };
	    if (ty instanceof InputFile) {
	        return "file";
	    };
	    if (ty instanceof InputHidden) {
	        return "hidden";
	    };
	    if (ty instanceof InputImage) {
	        return "image";
	    };
	    if (ty instanceof InputMonth) {
	        return "month";
	    };
	    if (ty instanceof InputNumber) {
	        return "number";
	    };
	    if (ty instanceof InputPassword) {
	        return "password";
	    };
	    if (ty instanceof InputRadio) {
	        return "radio";
	    };
	    if (ty instanceof InputRange) {
	        return "range";
	    };
	    if (ty instanceof InputReset) {
	        return "reset";
	    };
	    if (ty instanceof InputSearch) {
	        return "search";
	    };
	    if (ty instanceof InputSubmit) {
	        return "submit";
	    };
	    if (ty instanceof InputTel) {
	        return "tel";
	    };
	    if (ty instanceof InputText) {
	        return "text";
	    };
	    if (ty instanceof InputTime) {
	        return "time";
	    };
	    if (ty instanceof InputUrl) {
	        return "url";
	    };
	    if (ty instanceof InputWeek) {
	        return "week";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 184, column 3 - line 209, column 1: " + [ty.constructor.name]);
	};
	var renderButtonType = function renderButtonType(ty) {
	    if (ty instanceof ButtonButton) {
	        return "button";
	    };
	    if (ty instanceof ButtonSubmit) {
	        return "submit";
	    };
	    if (ty instanceof ButtonReset) {
	        return "reset";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 269, column 3 - line 274, column 1: " + [ty.constructor.name]);
	};
	var refine = Unsafe_Coerce.unsafeCoerce;
	var rel = refine(Halogen_HTML_Properties_1.rel);
	var required = refine(Halogen_HTML_Properties_1.required);
	var rowSpan = refine(Halogen_HTML_Properties_1.rowSpan);
	var rows = refine(Halogen_HTML_Properties_1.rows);
	var selected = refine(Halogen_HTML_Properties_1.selected);
	var spellcheck = refine(Halogen_HTML_Properties_1.spellcheck);
	var src = refine(Halogen_HTML_Properties_1.src);
	var tabIndex = refine(Halogen_HTML_Properties_1.tabIndex);
	var target = refine(Halogen_HTML_Properties_1.target);
	var title = refine(Halogen_HTML_Properties_1.title);
	var value = refine(Halogen_HTML_Properties_1.value);
	var width = refine(Halogen_HTML_Properties_1.width);
	var ref = refine(Halogen_HTML_Properties_1.ref);
	var readonly = refine(Halogen_HTML_Properties_1.readonly);
	var placeholder = refine(Halogen_HTML_Properties_1.placeholder);
	var olType = function olType($16) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderOrderedListType($16));
	};
	var name = refine(Halogen_HTML_Properties_1.name);
	var multiple = refine(Halogen_HTML_Properties_1.multiple);
	var menuitemType = function menuitemType($17) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderMenuitemType($17));
	};
	var menuType = function menuType($18) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderMenuType($18));
	};
	var mediaType = function mediaType($19) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderMediaType($19));
	};
	var key = refine(Halogen_HTML_Properties_1.key);
	var inputType = function inputType($20) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderInputType($20));
	};
	var id_ = refine(Halogen_HTML_Properties_1.id_);
	var href = refine(Halogen_HTML_Properties_1.href);
	var height = refine(Halogen_HTML_Properties_1.height);
	var $$for = refine(Halogen_HTML_Properties_1["for"]);
	var draggable = refine(Halogen_HTML_Properties_1.draggable);
	var disabled = refine(Halogen_HTML_Properties_1.disabled);
	var enabled = function enabled($21) {
	    return disabled(!$21);
	};
	var cols = refine(Halogen_HTML_Properties_1.cols);
	var colSpan = refine(Halogen_HTML_Properties_1.colSpan);
	var classes = refine(Halogen_HTML_Properties_1.classes);
	var class_ = refine(Halogen_HTML_Properties_1.class_);
	var checked = refine(Halogen_HTML_Properties_1.checked);
	var charset = refine(Halogen_HTML_Properties_1.charset);
	var buttonType = function buttonType($22) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderButtonType($22));
	};
	var autofocus = refine(Halogen_HTML_Properties_1.autofocus);
	var autocomplete = refine(Halogen_HTML_Properties_1.autocomplete);
	var alt = refine(Halogen_HTML_Properties_1.alt);
	module.exports = {
	    ButtonButton: ButtonButton,
	    ButtonSubmit: ButtonSubmit,
	    ButtonReset: ButtonReset,
	    Uppercase: Uppercase,
	    Lowercase: Lowercase,
	    IProp: IProp,
	    InputButton: InputButton,
	    InputCheckbox: InputCheckbox,
	    InputColor: InputColor,
	    InputDate: InputDate,
	    InputDatetime: InputDatetime,
	    InputDatetimeLocal: InputDatetimeLocal,
	    InputEmail: InputEmail,
	    InputFile: InputFile,
	    InputHidden: InputHidden,
	    InputImage: InputImage,
	    InputMonth: InputMonth,
	    InputNumber: InputNumber,
	    InputPassword: InputPassword,
	    InputRadio: InputRadio,
	    InputRange: InputRange,
	    InputReset: InputReset,
	    InputSearch: InputSearch,
	    InputSubmit: InputSubmit,
	    InputTel: InputTel,
	    InputText: InputText,
	    InputTime: InputTime,
	    InputUrl: InputUrl,
	    InputWeek: InputWeek,
	    MenuList: MenuList,
	    MenuContext: MenuContext,
	    MenuToolbar: MenuToolbar,
	    MenuitemCommand: MenuitemCommand,
	    MenuitemCheckbox: MenuitemCheckbox,
	    MenuitemRadio: MenuitemRadio,
	    NumeralDecimal: NumeralDecimal,
	    NumeralRoman: NumeralRoman,
	    OrderedListNumeric: OrderedListNumeric,
	    OrderedListAlphabetic: OrderedListAlphabetic,
	    alt: alt,
	    autocomplete: autocomplete,
	    autofocus: autofocus,
	    buttonType: buttonType,
	    charset: charset,
	    checked: checked,
	    class_: class_,
	    classes: classes,
	    colSpan: colSpan,
	    cols: cols,
	    disabled: disabled,
	    draggable: draggable,
	    enabled: enabled,
	    "for": $$for,
	    height: height,
	    href: href,
	    id_: id_,
	    inputType: inputType,
	    key: key,
	    mediaType: mediaType,
	    menuType: menuType,
	    menuitemType: menuitemType,
	    multiple: multiple,
	    name: name,
	    olType: olType,
	    placeholder: placeholder,
	    readonly: readonly,
	    ref: ref,
	    rel: rel,
	    required: required,
	    rowSpan: rowSpan,
	    rows: rows,
	    selected: selected,
	    spellcheck: spellcheck,
	    src: src,
	    tabIndex: tabIndex,
	    target: target,
	    title: title,
	    value: value,
	    width: width
	};

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Data_Maybe = __webpack_require__(72);
	var Data_String = __webpack_require__(126);
	var DOM_HTML_Types = __webpack_require__(165);
	var Halogen_HTML_Core = __webpack_require__(163);
	var Data_Function = __webpack_require__(10);
	var Data_Show = __webpack_require__(15);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Functor = __webpack_require__(8);
	var Pixels = function () {
	    function Pixels(value0) {
	        this.value0 = value0;
	    };
	    Pixels.create = function (value0) {
	        return new Pixels(value0);
	    };
	    return Pixels;
	}();
	var Percent = function () {
	    function Percent(value0) {
	        this.value0 = value0;
	    };
	    Percent.create = function (value0) {
	        return new Percent(value0);
	    };
	    return Percent;
	}();
	var value = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("value"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("value")));
	var type_ = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("type"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("type")));
	var title = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("title"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("title")));
	var target = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("target"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("target")));
	var tabIndex = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("tabIndex"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("tabindex")));
	var src = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("src"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("src")));
	var spellcheck = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("spellcheck"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("spellcheck")));
	var selected = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("selected"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("selected")));
	var rows = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("rows"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("rows")));
	var rowSpan = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("rowSpan"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("rowspan")));
	var required = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("required"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("required")));
	var rel = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("rel"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("rel")));
	var ref = Halogen_HTML_Core.Ref.create;
	var readonly = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("readOnly"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("readonly")));
	var printLengthLiteral = function printLengthLiteral(v) {
	    if (v instanceof Pixels) {
	        return Data_Show.show(Data_Show.showInt)(v.value0);
	    };
	    if (v instanceof Percent) {
	        return Data_Show.show(Data_Show.showNumber)(v.value0) + "%";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties line 61, column 1 - line 61, column 39: " + [v.constructor.name]);
	};
	var width = function width($5) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("width"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("width")))(printLengthLiteral($5));
	};
	var placeholder = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("placeholder"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("placeholder")));
	var name = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("name"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("name")));
	var multiple = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("multiple"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("multiple")));
	var key = Halogen_HTML_Core.Key.create;
	var id_ = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("id"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("id")));
	var href = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("href"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("href")));
	var height = function height($6) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("height"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("height")))(printLengthLiteral($6));
	};
	var $$for = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("htmlFor"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("for")));
	var draggable = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("draggable"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("draggable")));
	var disabled = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("disabled"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("disabled")));
	var enabled = function enabled($7) {
	    return disabled(!$7);
	};
	var cols = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("cols"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("cols")));
	var colSpan = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("colSpan"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("colspan")));
	var classes = function classes($8) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("className"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("class")))(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.runClassName)($8)));
	};
	var class_ = function class_($9) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("className"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("class")))(Halogen_HTML_Core.runClassName($9));
	};
	var checked = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("checked"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("checked")));
	var charset = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("charset"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("charset")));
	var autofocus = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("autofocus"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("autofocus")));
	var autocomplete = function autocomplete($10) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("autocomplete"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("autocomplete")))(function (b) {
	        if (b) {
	            return "on";
	        };
	        if (!b) {
	            return "off";
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties line 155, column 91 - line 155, column 116: " + [b.constructor.name]);
	    }($10));
	};
	var alt = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("alt"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("alt")));
	module.exports = {
	    Pixels: Pixels,
	    Percent: Percent,
	    alt: alt,
	    autocomplete: autocomplete,
	    autofocus: autofocus,
	    charset: charset,
	    checked: checked,
	    class_: class_,
	    classes: classes,
	    colSpan: colSpan,
	    cols: cols,
	    disabled: disabled,
	    draggable: draggable,
	    enabled: enabled,
	    "for": $$for,
	    height: height,
	    href: href,
	    id_: id_,
	    key: key,
	    multiple: multiple,
	    name: name,
	    placeholder: placeholder,
	    readonly: readonly,
	    ref: ref,
	    rel: rel,
	    required: required,
	    rowSpan: rowSpan,
	    rows: rows,
	    selected: selected,
	    spellcheck: spellcheck,
	    src: src,
	    tabIndex: tabIndex,
	    target: target,
	    title: title,
	    type_: type_,
	    value: value,
	    width: width
	};

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Bind = __webpack_require__(17);
	var Control_Monad_Aff = __webpack_require__(45);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Class = __webpack_require__(83);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Control_Monad_Error_Class = __webpack_require__(84);
	var Data_Maybe = __webpack_require__(72);
	var Data_Either = __webpack_require__(58);
	var Data_Nullable = __webpack_require__(191);
	var Data_Foreign = __webpack_require__(167);
	var DOM = __webpack_require__(189);
	var DOM_Event_EventTarget = __webpack_require__(241);
	var DOM_HTML_Event_EventTypes = __webpack_require__(243);
	var DOM_HTML = __webpack_require__(244);
	var DOM_HTML_Types = __webpack_require__(165);
	var DOM_HTML_Window = __webpack_require__(246);
	var DOM_Node_ParentNode = __webpack_require__(248);
	var Halogen_Effects = __webpack_require__(204);
	var Data_Function = __webpack_require__(10);
	var Data_Functor = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Applicative = __webpack_require__(5);
	var Data_Unit = __webpack_require__(13);
	var selectElement = function selectElement(query) {
	    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($8) {
	        return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($8));
	    })(DOM_HTML_Window.document))(DOM_HTML.window))))(function (v) {
	        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(function () {
	            if (v instanceof Data_Maybe.Nothing) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v instanceof Data_Maybe.Just) {
	                return Data_Function.apply(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0)));
	            };
	            throw new Error("Failed pattern match at Halogen.Util line 54, column 3 - line 56, column 76: " + [v.constructor.name]);
	        }());
	    });
	};
	var runHalogenAff = function runHalogenAff($9) {
	    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($9));
	};
	var awaitLoad = Control_Monad_Aff.makeAff(function (v) {
	    return function (callback) {
	        return Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff))(function __do() {
	            var $10 = DOM_HTML.window();
	            return DOM_Event_EventTarget.addEventListener(DOM_HTML_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(function (v1) {
	                return callback(Data_Unit.unit);
	            }))(false)(DOM_HTML_Types.windowToEventTarget($10))();
	        });
	    };
	});
	var awaitBody = Control_Bind.bind(Control_Monad_Aff.bindAff)(awaitLoad)(function () {
	    return Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Could not find body")))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)))(selectElement("body"));
	});
	module.exports = {
	    awaitBody: awaitBody,
	    awaitLoad: awaitLoad,
	    runHalogenAff: runHalogenAff,
	    selectElement: selectElement
	};

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(242);
	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var DOM = __webpack_require__(189);
	var DOM_Event_Types = __webpack_require__(183);
	module.exports = {
	    addEventListener: $foreign.addEventListener,
	    dispatchEvent: $foreign.dispatchEvent,
	    eventListener: $foreign.eventListener,
	    removeEventListener: $foreign.removeEventListener
	};

/***/ },
/* 242 */
/***/ function(module, exports) {

	"use strict";

	exports.eventListener = function (fn) {
	  return function (event) {
	    return fn(event)();
	  };
	};

	exports.addEventListener = function (type) {
	  return function (listener) {
	    return function (useCapture) {
	      return function (target) {
	        return function () {
	          target.addEventListener(type, listener, useCapture);
	          return {};
	        };
	      };
	    };
	  };
	};

	exports.removeEventListener = function (type) {
	  return function (listener) {
	    return function (useCapture) {
	      return function (target) {
	        return function () {
	          target.removeEventListener(type, listener, useCapture);
	          return {};
	        };
	      };
	    };
	  };
	};

	exports.dispatchEvent = function (event) {
	  return function (target) {
	    return function () {
	      return target.dispatchEvent(event);
	    };
	  };
	};

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var DOM_Event_Types = __webpack_require__(183);
	var wheel = "wheel";
	var visibilitychange = "visibilitychange";
	var unload = "unload";
	var transitionend = "transitionend";
	var touchstart = "touchstart";
	var touchmove = "touchmove";
	var touchleave = "touchleave";
	var touchenter = "touchenter";
	var touchend = "touchend";
	var touchcancel = "touchcancel";
	var timeupdate = "timeupdate";
	var timeout = "timeout";
	var suspend = "suspend";
	var submit = "submit";
	var stalled = "stalled";
	var show = "show";
	var select = "select";
	var seeking = "seeking";
	var seeked = "seeked";
	var scroll = "scroll";
	var resize = "resize";
	var reset = "reset";
	var readystatechange = "readystatechange";
	var ratechange = "ratechange";
	var progress = "progress";
	var popstate = "popstate";
	var playing = "playing";
	var play = "play";
	var pause = "pause";
	var pageshow = "pageshow";
	var pagehide = "pagehide";
	var open = "open";
	var mouseup = "mouseup";
	var mouseover = "mouseover";
	var mouseout = "mouseout";
	var mousemove = "mousemove";
	var mouseleave = "mouseleave";
	var mouseenter = "mouseenter";
	var mousedown = "mousedown";
	var message = "message";
	var loadstart = "loadstart";
	var loadend = "loadend";
	var loadedmetadata = "loadedmetadata";
	var loadeddata = "loadeddata";
	var load = "load";
	var keyup = "keyup";
	var keypress = "keypress";
	var keydown = "keydown";
	var input = "input";
	var hashchange = "hashchange";
	var focus = "focus";
	var error = "error";
	var drop = "drop";
	var dragstart = "dragstart";
	var dragover = "dragover";
	var dragleave = "dragleave";
	var dragenter = "dragenter";
	var dragend = "dragend";
	var drag = "drag";
	var dblclick = "dblclick";
	var contextmenu = "contextmenu";
	var compositionupdate = "compositionupdate";
	var compositionstart = "compositionstart";
	var compositionend = "compositionend";
	var complete = "complete";
	var click = "click";
	var change = "change";
	var blur = "blur";
	var beforeunload = "beforeunload";
	var animationstart = "animationstart";
	var animationiteration = "animationiteration";
	var animationend = "animationend";
	var abort = "abort";
	module.exports = {
	    abort: abort,
	    animationend: animationend,
	    animationiteration: animationiteration,
	    animationstart: animationstart,
	    beforeunload: beforeunload,
	    blur: blur,
	    change: change,
	    click: click,
	    complete: complete,
	    compositionend: compositionend,
	    compositionstart: compositionstart,
	    compositionupdate: compositionupdate,
	    contextmenu: contextmenu,
	    dblclick: dblclick,
	    drag: drag,
	    dragend: dragend,
	    dragenter: dragenter,
	    dragleave: dragleave,
	    dragover: dragover,
	    dragstart: dragstart,
	    drop: drop,
	    error: error,
	    focus: focus,
	    hashchange: hashchange,
	    input: input,
	    keydown: keydown,
	    keypress: keypress,
	    keyup: keyup,
	    load: load,
	    loadeddata: loadeddata,
	    loadedmetadata: loadedmetadata,
	    loadend: loadend,
	    loadstart: loadstart,
	    message: message,
	    mousedown: mousedown,
	    mouseenter: mouseenter,
	    mouseleave: mouseleave,
	    mousemove: mousemove,
	    mouseout: mouseout,
	    mouseover: mouseover,
	    mouseup: mouseup,
	    open: open,
	    pagehide: pagehide,
	    pageshow: pageshow,
	    pause: pause,
	    play: play,
	    playing: playing,
	    popstate: popstate,
	    progress: progress,
	    ratechange: ratechange,
	    readystatechange: readystatechange,
	    reset: reset,
	    resize: resize,
	    scroll: scroll,
	    seeked: seeked,
	    seeking: seeking,
	    select: select,
	    show: show,
	    stalled: stalled,
	    submit: submit,
	    suspend: suspend,
	    timeout: timeout,
	    timeupdate: timeupdate,
	    touchcancel: touchcancel,
	    touchend: touchend,
	    touchenter: touchenter,
	    touchleave: touchleave,
	    touchmove: touchmove,
	    touchstart: touchstart,
	    transitionend: transitionend,
	    unload: unload,
	    visibilitychange: visibilitychange,
	    wheel: wheel
	};

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(245);
	var Control_Monad_Eff = __webpack_require__(56);
	var DOM = __webpack_require__(189);
	var DOM_HTML_Types = __webpack_require__(165);
	module.exports = {
	    window: $foreign.window
	};

/***/ },
/* 245 */
/***/ function(module, exports) {

	/* global window */
	"use strict";

	exports.window = function () {
	  return window;
	};

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(247);
	var Control_Monad_Eff = __webpack_require__(56);
	var DOM = __webpack_require__(189);
	var DOM_HTML_Types = __webpack_require__(165);
	module.exports = {
	    document: $foreign.document,
	    innerHeight: $foreign.innerHeight,
	    innerWidth: $foreign.innerWidth,
	    location: $foreign.location,
	    navigator: $foreign.navigator
	};

/***/ },
/* 247 */
/***/ function(module, exports) {

	"use strict";

	exports.document = function (window) {
	  return function () {
	    return window.document;
	  };
	};

	exports.navigator = function (window) {
	  return function () {
	    return window.navigator;
	  };
	};

	exports.location = function (window) {
	  return function () {
	    return window.location;
	  };
	};

	exports.innerWidth = function (window) {
	  return function () {
	    return window.innerWidth;
	  };
	};

	exports.innerHeight = function (window) {
	  return function () {
	    return window.innerHeight;
	  };
	};

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(249);
	var Control_Monad_Eff = __webpack_require__(56);
	var Data_Nullable = __webpack_require__(191);
	var DOM = __webpack_require__(189);
	var DOM_Node_Types = __webpack_require__(185);
	module.exports = {
	    childElementCount: $foreign.childElementCount,
	    children: $foreign.children,
	    firstElementChild: $foreign.firstElementChild,
	    lastElementChild: $foreign.lastElementChild,
	    querySelector: $foreign.querySelector,
	    querySelectorAll: $foreign.querySelectorAll
	};

/***/ },
/* 249 */
/***/ function(module, exports) {

	"use strict";

	var getEffProp = function getEffProp(name) {
	  return function (node) {
	    return function () {
	      return node[name];
	    };
	  };
	};

	exports.children = getEffProp("children");

	exports.firstElementChild = getEffProp("firstElementChild");

	exports.lastElementChild = getEffProp("lastElementChild");

	exports.childElementCount = getEffProp("childElementCount");

	exports.querySelector = function (selector) {
	  return function (node) {
	    return function () {
	      return node.querySelector(selector);
	    };
	  };
	};

	exports.querySelectorAll = function (selector) {
	  return function (node) {
	    return function () {
	      return node.querySelectorAll(selector);
	    };
	  };
	};

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Prelude = __webpack_require__(4);
	var Control_Monad_Eff = __webpack_require__(56);
	var Data_Decidable = __webpack_require__(251);
	var Data_Decide = __webpack_require__(253);
	var Data_Divide = __webpack_require__(254);
	var Data_Divisible = __webpack_require__(258);
	var Data_Tuple = __webpack_require__(100);
	var Data_Either = __webpack_require__(58);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Control_Bind = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var Control_Apply = __webpack_require__(6);
	var Control_Applicative = __webpack_require__(5);
	var Data_Unit = __webpack_require__(13);
	var Data_Void = __webpack_require__(30);
	var SettableVar = function SettableVar(x) {
	    return x;
	};
	var GettableVar = function GettableVar(x) {
	    return x;
	};
	var Var = function () {
	    function Var(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Var.create = function (value0) {
	        return function (value1) {
	            return new Var(value0, value1);
	        };
	    };
	    return Var;
	}();
	var Gettable = function Gettable(get) {
	    this.get = get;
	};
	var Settable = function Settable(set) {
	    this.set = set;
	};
	var Updatable = function Updatable(update) {
	    this.update = update;
	};
	var update = function update(dict) {
	    return dict.update;
	};
	var settableVar = new Settable(function (v) {
	    return v.value1;
	});
	var settableSettableVar = new Settable(function (v) {
	    return v;
	});
	var set = function set(dict) {
	    return dict.set;
	};
	var makeSettableVar = SettableVar;
	var makeGettableVar = GettableVar;
	var makeVar = function makeVar(g) {
	    return function (s) {
	        return new Var(makeGettableVar(g), makeSettableVar(s));
	    };
	};
	var gettableGettableVar = new Gettable(function (v) {
	    return v;
	});
	var get = function get(dict) {
	    return dict.get;
	};
	var gettableVar = new Gettable(function (v) {
	    return get(gettableGettableVar)(v.value0);
	});
	var updatableVar = new Updatable(function (v) {
	    return function (f) {
	        return function __do() {
	            var $43 = get(gettableVar)(v)();
	            return set(settableVar)(v)(f($43))();
	        };
	    };
	});
	var functorGettableVar = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(f)(v);
	    };
	});
	var contravariantSettableVar = new Data_Functor_Contravariant.Contravariant(function (f) {
	    return function (v) {
	        return function ($44) {
	            return v(f($44));
	        };
	    };
	});
	var divideSettableVar = new Data_Divide.Divide(function () {
	    return contravariantSettableVar;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function (a) {
	                var $29 = f(a);
	                return function __do() {
	                    v($29.value0)();
	                    return v1($29.value1)();
	                };
	            };
	        };
	    };
	});
	var decideSettableVar = new Data_Decide.Decide(function () {
	    return divideSettableVar;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function ($45) {
	                return Data_Either.either(v)(v1)(f($45));
	            };
	        };
	    };
	});
	var divisibleSettableVar = new Data_Divisible.Divisible(function () {
	    return divideSettableVar;
	}, function (v) {
	    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	});
	var decidableSettableVar = new Data_Decidable.Decidable(function () {
	    return decideSettableVar;
	}, function () {
	    return divisibleSettableVar;
	}, function (f) {
	    return function ($46) {
	        return Data_Void.absurd(f($46));
	    };
	});
	var invariantVar = new Data_Functor_Invariant.Invariant(function (ab) {
	    return function (ba) {
	        return function (v) {
	            return new Var(Data_Functor.map(functorGettableVar)(ab)(v.value0), Data_Functor_Contravariant.cmap(contravariantSettableVar)(ba)(v.value1));
	        };
	    };
	});
	var applyGettableVar = new Control_Apply.Apply(function () {
	    return functorGettableVar;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Control_Monad_Eff.applyEff)(v)(v1);
	    };
	});
	var applicativeGettableVar = new Control_Applicative.Applicative(function () {
	    return applyGettableVar;
	}, function ($47) {
	    return GettableVar(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($47));
	});
	module.exports = {
	    Gettable: Gettable,
	    Settable: Settable,
	    Updatable: Updatable,
	    get: get,
	    makeGettableVar: makeGettableVar,
	    makeSettableVar: makeSettableVar,
	    makeVar: makeVar,
	    set: set,
	    update: update,
	    settableVar: settableVar,
	    gettableVar: gettableVar,
	    updatableVar: updatableVar,
	    invariantVar: invariantVar,
	    gettableGettableVar: gettableGettableVar,
	    functorGettableVar: functorGettableVar,
	    applyGettableVar: applyGettableVar,
	    applicativeGettableVar: applicativeGettableVar,
	    settableSettableVar: settableSettableVar,
	    contravariantSettableVar: contravariantSettableVar,
	    divideSettableVar: divideSettableVar,
	    divisibleSettableVar: divisibleSettableVar,
	    decideSettableVar: decideSettableVar,
	    decidableSettableVar: decidableSettableVar
	};

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Comparison = __webpack_require__(252);
	var Data_Decide = __webpack_require__(253);
	var Data_Divisible = __webpack_require__(258);
	var Data_Equivalence = __webpack_require__(255);
	var Data_Function = __webpack_require__(10);
	var Data_Monoid = __webpack_require__(61);
	var Data_Op = __webpack_require__(256);
	var Data_Predicate = __webpack_require__(257);
	var Data_Void = __webpack_require__(30);
	var Control_Category = __webpack_require__(11);
	var Decidable = function Decidable(__superclass_Data$dotDecide$dotDecide_0, __superclass_Data$dotDivisible$dotDivisible_1, lose) {
	    this["__superclass_Data.Decide.Decide_0"] = __superclass_Data$dotDecide$dotDecide_0;
	    this["__superclass_Data.Divisible.Divisible_1"] = __superclass_Data$dotDivisible$dotDivisible_1;
	    this.lose = lose;
	};
	var lose = function lose(dict) {
	    return dict.lose;
	};
	var lost = function lost(dictDecidable) {
	    return lose(dictDecidable)(Control_Category.id(Control_Category.categoryFn));
	};
	var decidablePredicate = new Decidable(function () {
	    return Data_Decide.choosePredicate;
	}, function () {
	    return Data_Divisible.divisiblePredicate;
	}, function (f) {
	    return function (a) {
	        return Data_Void.absurd(f(a));
	    };
	});
	var decidableOp = function decidableOp(dictMonoid) {
	    return new Decidable(function () {
	        return Data_Decide.chooseOp(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, function () {
	        return Data_Divisible.divisibleOp(dictMonoid);
	    }, function (f) {
	        return function (a) {
	            return Data_Void.absurd(f(a));
	        };
	    });
	};
	var decidableEquivalence = new Decidable(function () {
	    return Data_Decide.chooseEquivalence;
	}, function () {
	    return Data_Divisible.divisibleEquivalence;
	}, function (f) {
	    return function (a) {
	        return Data_Void.absurd(f(a));
	    };
	});
	var decidableComparison = new Decidable(function () {
	    return Data_Decide.chooseComparison;
	}, function () {
	    return Data_Divisible.divisibleComparison;
	}, function (f) {
	    return function (a) {
	        return function (v) {
	            return Data_Void.absurd(f(a));
	        };
	    };
	});
	module.exports = {
	    Decidable: Decidable,
	    lose: lose,
	    lost: lost,
	    decidableComparison: decidableComparison,
	    decidableEquivalence: decidableEquivalence,
	    decidablePredicate: decidablePredicate,
	    decidableOp: decidableOp
	};

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Function = __webpack_require__(10);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ord = __webpack_require__(26);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Ordering = __webpack_require__(33);
	var Comparison = function Comparison(x) {
	    return x;
	};
	var semigroupComparison = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return Data_Semigroup.append(Data_Semigroup.semigroupFn(Data_Semigroup.semigroupFn(Data_Ordering.semigroupOrdering)))(v)(v1);
	    };
	});
	var runComparison = function runComparison(v) {
	    return v;
	};
	var monoidComparison = new Data_Monoid.Monoid(function () {
	    return semigroupComparison;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var defaultComparison = function defaultComparison(dictOrd) {
	    return Data_Ord.compare(dictOrd);
	};
	var contravariantComparison = new Data_Functor_Contravariant.Contravariant(function (f) {
	    return function (v) {
	        return Data_Function.on(v)(f);
	    };
	});
	module.exports = {
	    Comparison: Comparison,
	    defaultComparison: defaultComparison,
	    runComparison: runComparison,
	    contravariantComparison: contravariantComparison,
	    semigroupComparison: semigroupComparison,
	    monoidComparison: monoidComparison
	};

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Comparison = __webpack_require__(252);
	var Data_Divide = __webpack_require__(254);
	var Data_Either = __webpack_require__(58);
	var Data_Equivalence = __webpack_require__(255);
	var Data_Function = __webpack_require__(10);
	var Data_Op = __webpack_require__(256);
	var Data_Ordering = __webpack_require__(33);
	var Data_Predicate = __webpack_require__(257);
	var Data_Semigroup = __webpack_require__(34);
	var Control_Semigroupoid = __webpack_require__(12);
	var Control_Category = __webpack_require__(11);
	var Decide = function Decide(__superclass_Data$dotDivide$dotDivide_0, choose) {
	    this["__superclass_Data.Divide.Divide_0"] = __superclass_Data$dotDivide$dotDivide_0;
	    this.choose = choose;
	};
	var choosePredicate = new Decide(function () {
	    return Data_Divide.dividePredicate;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function ($40) {
	                return Data_Either.either(v)(v1)(f($40));
	            };
	        };
	    };
	});
	var chooseOp = function chooseOp(dictSemigroup) {
	    return new Decide(function () {
	        return Data_Divide.divideOp(dictSemigroup);
	    }, function (f) {
	        return function (v) {
	            return function (v1) {
	                return function ($41) {
	                    return Data_Either.either(v)(v1)(f($41));
	                };
	            };
	        };
	    });
	};
	var chooseEquivalence = new Decide(function () {
	    return Data_Divide.divideEquivalence;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function (a) {
	                return function (b) {
	                    var $19 = f(a);
	                    if ($19 instanceof Data_Either.Left) {
	                        var $20 = f(b);
	                        if ($20 instanceof Data_Either.Left) {
	                            return v($19.value0)($20.value0);
	                        };
	                        if ($20 instanceof Data_Either.Right) {
	                            return false;
	                        };
	                        throw new Error("Failed pattern match at Data.Decide line 28, column 15 - line 30, column 23: " + [$20.constructor.name]);
	                    };
	                    if ($19 instanceof Data_Either.Right) {
	                        var $24 = f(b);
	                        if ($24 instanceof Data_Either.Left) {
	                            return false;
	                        };
	                        if ($24 instanceof Data_Either.Right) {
	                            return v1($19.value0)($24.value0);
	                        };
	                        throw new Error("Failed pattern match at Data.Decide line 31, column 16 - line 33, column 23: " + [$24.constructor.name]);
	                    };
	                    throw new Error("Failed pattern match at Data.Decide line 27, column 66 - line 33, column 23: " + [$19.constructor.name]);
	                };
	            };
	        };
	    };
	});
	var chooseComparison = new Decide(function () {
	    return Data_Divide.divideComparison;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function (a) {
	                return function (b) {
	                    var $31 = f(a);
	                    if ($31 instanceof Data_Either.Left) {
	                        var $32 = f(b);
	                        if ($32 instanceof Data_Either.Left) {
	                            return v($31.value0)($32.value0);
	                        };
	                        if ($32 instanceof Data_Either.Right) {
	                            return Data_Ordering.LT.value;
	                        };
	                        throw new Error("Failed pattern match at Data.Decide line 19, column 15 - line 21, column 20: " + [$32.constructor.name]);
	                    };
	                    if ($31 instanceof Data_Either.Right) {
	                        var $36 = f(b);
	                        if ($36 instanceof Data_Either.Left) {
	                            return Data_Ordering.GT.value;
	                        };
	                        if ($36 instanceof Data_Either.Right) {
	                            return v1($31.value0)($36.value0);
	                        };
	                        throw new Error("Failed pattern match at Data.Decide line 22, column 16 - line 24, column 23: " + [$36.constructor.name]);
	                    };
	                    throw new Error("Failed pattern match at Data.Decide line 18, column 63 - line 24, column 23: " + [$31.constructor.name]);
	                };
	            };
	        };
	    };
	});
	var choose = function choose(dict) {
	    return dict.choose;
	};
	var chosen = function chosen(dictDecide) {
	    return choose(dictDecide)(Control_Category.id(Control_Category.categoryFn));
	};
	module.exports = {
	    Decide: Decide,
	    choose: choose,
	    chosen: chosen,
	    chooseComparison: chooseComparison,
	    chooseEquivalence: chooseEquivalence,
	    choosePredicate: choosePredicate,
	    chooseOp: chooseOp
	};

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Category = __webpack_require__(11);
	var Data_Comparison = __webpack_require__(252);
	var Data_Equivalence = __webpack_require__(255);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Op = __webpack_require__(256);
	var Data_Predicate = __webpack_require__(257);
	var Data_Semigroup = __webpack_require__(34);
	var Data_Tuple = __webpack_require__(100);
	var Data_Ordering = __webpack_require__(33);
	var Divide = function Divide(__superclass_Data$dotFunctor$dotContravariant$dotContravariant_0, divide) {
	    this["__superclass_Data.Functor.Contravariant.Contravariant_0"] = __superclass_Data$dotFunctor$dotContravariant$dotContravariant_0;
	    this.divide = divide;
	};
	var dividePredicate = new Divide(function () {
	    return Data_Predicate.contravariantPredicate;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function (a) {
	                var $13 = f(a);
	                return v($13.value0) && v1($13.value1);
	            };
	        };
	    };
	});
	var divideOp = function divideOp(dictSemigroup) {
	    return new Divide(function () {
	        return Data_Op.contravariantOp;
	    }, function (f) {
	        return function (v) {
	            return function (v1) {
	                return function (a) {
	                    var $19 = f(a);
	                    return Data_Semigroup.append(dictSemigroup)(v($19.value0))(v1($19.value1));
	                };
	            };
	        };
	    });
	};
	var divideEquivalence = new Divide(function () {
	    return Data_Equivalence.contravariantEquivalence;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function (a) {
	                return function (b) {
	                    var $25 = f(a);
	                    var $26 = f(b);
	                    return v($25.value0)($26.value0) && v1($25.value1)($26.value1);
	                };
	            };
	        };
	    };
	});
	var divideComparison = new Divide(function () {
	    return Data_Comparison.contravariantComparison;
	}, function (f) {
	    return function (v) {
	        return function (v1) {
	            return function (a) {
	                return function (b) {
	                    var $34 = f(a);
	                    var $35 = f(b);
	                    return Data_Semigroup.append(Data_Ordering.semigroupOrdering)(v($34.value0)($35.value0))(v1($34.value1)($35.value1));
	                };
	            };
	        };
	    };
	});
	var divide = function divide(dict) {
	    return dict.divide;
	};
	var divided = function divided(dictDivide) {
	    return divide(dictDivide)(Control_Category.id(Control_Category.categoryFn));
	};
	module.exports = {
	    Divide: Divide,
	    divide: divide,
	    divided: divided,
	    divideComparison: divideComparison,
	    divideEquivalence: divideEquivalence,
	    dividePredicate: dividePredicate,
	    divideOp: divideOp
	};

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_HeytingAlgebra = __webpack_require__(22);
	var Data_Comparison = __webpack_require__(252);
	var Data_Eq = __webpack_require__(28);
	var Data_Function = __webpack_require__(10);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Data_Monoid = __webpack_require__(61);
	var Data_Ordering = __webpack_require__(33);
	var Data_Semigroup = __webpack_require__(34);
	var Equivalence = function Equivalence(x) {
	    return x;
	};
	var semigroupEquivalence = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function (a) {
	            return function (b) {
	                return v(a)(b) && v1(a)(b);
	            };
	        };
	    };
	});
	var runEquivalence = function runEquivalence(v) {
	    return v;
	};
	var monoidEquivalence = new Data_Monoid.Monoid(function () {
	    return semigroupEquivalence;
	}, function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var defaultEquivalence = function defaultEquivalence(dictEq) {
	    return Data_Eq.eq(dictEq);
	};
	var contravariantEquivalence = new Data_Functor_Contravariant.Contravariant(function (f) {
	    return function (v) {
	        return Data_Function.on(v)(f);
	    };
	});
	var comparisonEquivalence = function comparisonEquivalence(v) {
	    return function (a) {
	        return function (b) {
	            return Data_Eq.eq(Data_Ordering.eqOrdering)(v(a)(b))(Data_Ordering.EQ.value);
	        };
	    };
	};
	module.exports = {
	    Equivalence: Equivalence,
	    comparisonEquivalence: comparisonEquivalence,
	    defaultEquivalence: defaultEquivalence,
	    runEquivalence: runEquivalence,
	    contravariantEquivalence: contravariantEquivalence,
	    semigroupEquivalence: semigroupEquivalence,
	    monoidEquivalence: monoidEquivalence
	};

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Category = __webpack_require__(11);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Op = function Op(x) {
	    return x;
	};
	var semigroupoidOp = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return function ($9) {
	            return v1(v($9));
	        };
	    };
	});
	var runOp = function runOp(v) {
	    return v;
	};
	var contravariantOp = new Data_Functor_Contravariant.Contravariant(function (f) {
	    return function (v) {
	        return function ($10) {
	            return v(f($10));
	        };
	    };
	});
	var categoryOp = new Control_Category.Category(function () {
	    return semigroupoidOp;
	}, Control_Category.id(Control_Category.categoryFn));
	module.exports = {
	    Op: Op,
	    runOp: runOp,
	    semigroupoidOp: semigroupoidOp,
	    categoryOp: categoryOp,
	    contravariantOp: contravariantOp
	};

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Predicate = function Predicate(x) {
	    return x;
	};
	var runPredicate = function runPredicate(v) {
	    return v;
	};
	var contravariantPredicate = new Data_Functor_Contravariant.Contravariant(function (f) {
	    return function (v) {
	        return function ($5) {
	            return v(f($5));
	        };
	    };
	});
	module.exports = {
	    Predicate: Predicate,
	    runPredicate: runPredicate,
	    contravariantPredicate: contravariantPredicate
	};

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Comparison = __webpack_require__(252);
	var Data_Divide = __webpack_require__(254);
	var Data_Equivalence = __webpack_require__(255);
	var Data_Function = __webpack_require__(10);
	var Data_Monoid = __webpack_require__(61);
	var Data_Op = __webpack_require__(256);
	var Data_Ordering = __webpack_require__(33);
	var Data_Predicate = __webpack_require__(257);
	var Divisible = function Divisible(__superclass_Data$dotDivide$dotDivide_0, conquer) {
	    this["__superclass_Data.Divide.Divide_0"] = __superclass_Data$dotDivide$dotDivide_0;
	    this.conquer = conquer;
	};
	var divisiblePredicate = new Divisible(function () {
	    return Data_Divide.dividePredicate;
	}, Data_Function["const"](true));
	var divisibleOp = function divisibleOp(dictMonoid) {
	    return new Divisible(function () {
	        return Data_Divide.divideOp(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Function.apply(Data_Op.Op)(Data_Function["const"](Data_Monoid.mempty(dictMonoid))));
	};
	var divisibleEquivalence = new Divisible(function () {
	    return Data_Divide.divideEquivalence;
	}, Data_Function.apply(Data_Equivalence.Equivalence)(function (v) {
	    return function (v1) {
	        return true;
	    };
	}));
	var divisibleComparison = new Divisible(function () {
	    return Data_Divide.divideComparison;
	}, Data_Function.apply(Data_Comparison.Comparison)(function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	}));
	var conquer = function conquer(dict) {
	    return dict.conquer;
	};
	module.exports = {
	    Divisible: Divisible,
	    conquer: conquer,
	    divisibleComparison: divisibleComparison,
	    divisibleEquivalence: divisibleEquivalence,
	    divisiblePredicate: divisiblePredicate,
	    divisibleOp: divisibleOp
	};

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var $foreign = __webpack_require__(260);
	var Control_Monad_Eff = __webpack_require__(56);
	var Control_Monad_Eff_Exception = __webpack_require__(54);
	var Control_Monad_Eff_Var = __webpack_require__(250);
	var DOM_Event_EventTarget = __webpack_require__(241);
	var DOM_Event_Types = __webpack_require__(183);
	var DOM_Websocket_Event_Types = __webpack_require__(261);
	var Data_Either = __webpack_require__(58);
	var Data_Enum = __webpack_require__(200);
	var Data_Foreign = __webpack_require__(167);
	var Data_Foreign_Index = __webpack_require__(176);
	var Data_Function_Uncurried = __webpack_require__(80);
	var Data_Functor_Contravariant = __webpack_require__(143);
	var Data_Functor_Invariant = __webpack_require__(64);
	var Data_Generic = __webpack_require__(120);
	var Data_Maybe = __webpack_require__(72);
	var Data_Nullable = __webpack_require__(191);
	var Prelude = __webpack_require__(4);
	var Unsafe_Coerce = __webpack_require__(112);
	var Control_Apply = __webpack_require__(6);
	var Data_Unit = __webpack_require__(13);
	var Data_Eq = __webpack_require__(28);
	var Data_Ord = __webpack_require__(26);
	var Data_Show = __webpack_require__(15);
	var Data_Bounded = __webpack_require__(24);
	var Data_Function = __webpack_require__(10);
	var Control_Semigroupoid = __webpack_require__(12);
	var Data_Functor = __webpack_require__(8);
	var URL = function URL(x) {
	    return x;
	};
	var Reason = function Reason(x) {
	    return x;
	};
	var Connecting = function () {
	    function Connecting() {};
	    Connecting.value = new Connecting();
	    return Connecting;
	}();
	var Open = function () {
	    function Open() {};
	    Open.value = new Open();
	    return Open;
	}();
	var Closing = function () {
	    function Closing() {};
	    Closing.value = new Closing();
	    return Closing;
	}();
	var Closed = function () {
	    function Closed() {};
	    Closed.value = new Closed();
	    return Closed;
	}();
	var Protocol = function Protocol(x) {
	    return x;
	};
	var Message = function Message(x) {
	    return x;
	};
	var Code = function Code(x) {
	    return x;
	};
	var BufferedAmount = function BufferedAmount(x) {
	    return x;
	};
	var Blob = function () {
	    function Blob() {};
	    Blob.value = new Blob();
	    return Blob;
	}();
	var $$ArrayBuffer = function () {
	    function ArrayBuffer() {};
	    ArrayBuffer.value = new ArrayBuffer();
	    return ArrayBuffer;
	}();
	var Connection = function Connection(x) {
	    return x;
	};
	var toEnumReadyState = function toEnumReadyState(v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Connecting.value);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(Open.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(Closing.value);
	    };
	    if (v === 3) {
	        return new Data_Maybe.Just(Closed.value);
	    };
	    return Data_Maybe.Nothing.value;
	};
	var toBinaryType = function toBinaryType(v) {
	    if (v === "blob") {
	        return Blob.value;
	    };
	    if (v === "arraybuffer") {
	        return $$ArrayBuffer.value;
	    };
	    return $foreign.specViolation("binaryType should be either 'blob' or 'arraybuffer'");
	};
	var runURL = function runURL(v) {
	    return v;
	};
	var runReason = function runReason(v) {
	    return v;
	};
	var runProtocol = function runProtocol(v) {
	    return v;
	};
	var runMessageEvent = function runMessageEvent(event) {
	    var $57 = Data_Foreign_Index.prop("data")(Data_Foreign.toForeign(event));
	    if ($57 instanceof Data_Either.Right) {
	        return Data_Foreign.unsafeFromForeign($57.value0);
	    };
	    if ($57 instanceof Data_Either.Left) {
	        return $foreign.specViolation("'data' missing from MessageEvent");
	    };
	    throw new Error("Failed pattern match at WebSocket line 61, column 25 - line 65, column 1: " + [$57.constructor.name]);
	};
	var runMessage = function runMessage(v) {
	    return v;
	};
	var runCode = function runCode(v) {
	    return v;
	};
	var runBufferedAmount = function runBufferedAmount(v) {
	    return v;
	};
	var genericURL = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.URL" && v.value1.length === 1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(URL))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.URL", [{
	        sigConstructor: "WebSocket.URL",
	        sigValues: [function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
	        }]
	    }]);
	}, function (v) {
	    return new Data_Generic.SProd("WebSocket.URL", [function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericString)(v);
	    }]);
	});
	var genericReason = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Reason" && v.value1.length === 1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Reason))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.Reason", [{
	        sigConstructor: "WebSocket.Reason",
	        sigValues: [function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
	        }]
	    }]);
	}, function (v) {
	    return new Data_Generic.SProd("WebSocket.Reason", [function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericString)(v);
	    }]);
	});
	var genericReadyState = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Connecting" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Connecting.value);
	    };
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Open" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Open.value);
	    };
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Closing" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Closing.value);
	    };
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Closed" && v.value1.length === 0) {
	        return new Data_Maybe.Just(Closed.value);
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.ReadyState", [{
	        sigConstructor: "WebSocket.Connecting",
	        sigValues: []
	    }, {
	        sigConstructor: "WebSocket.Open",
	        sigValues: []
	    }, {
	        sigConstructor: "WebSocket.Closing",
	        sigValues: []
	    }, {
	        sigConstructor: "WebSocket.Closed",
	        sigValues: []
	    }]);
	}, function (v) {
	    if (v instanceof Connecting) {
	        return new Data_Generic.SProd("WebSocket.Connecting", []);
	    };
	    if (v instanceof Open) {
	        return new Data_Generic.SProd("WebSocket.Open", []);
	    };
	    if (v instanceof Closing) {
	        return new Data_Generic.SProd("WebSocket.Closing", []);
	    };
	    if (v instanceof Closed) {
	        return new Data_Generic.SProd("WebSocket.Closed", []);
	    };
	    throw new Error("Failed pattern match at WebSocket line 200, column 1 - line 200, column 56: " + [v.constructor.name]);
	});
	var showReadyState = new Data_Show.Show(Data_Generic.gShow(genericReadyState));
	var genericProtocol = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Protocol" && v.value1.length === 1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Protocol))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.Protocol", [{
	        sigConstructor: "WebSocket.Protocol",
	        sigValues: [function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
	        }]
	    }]);
	}, function (v) {
	    return new Data_Generic.SProd("WebSocket.Protocol", [function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericString)(v);
	    }]);
	});
	var genericMessage = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Reason" && v.value1.length === 1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Reason))(Data_Generic.fromSpine(Data_Generic.genericString)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.Reason", [{
	        sigConstructor: "WebSocket.Reason",
	        sigValues: [function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
	        }]
	    }]);
	}, function (v) {
	    return new Data_Generic.SProd("WebSocket.Reason", [function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericString)(v);
	    }]);
	});
	var genericCode = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.Code" && v.value1.length === 1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Code))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.Code", [{
	        sigConstructor: "WebSocket.Code",
	        sigValues: [function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
	        }]
	    }]);
	}, function (v) {
	    return new Data_Generic.SProd("WebSocket.Code", [function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
	    }]);
	});
	var genericBufferedAmount = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && v.value0 === "WebSocket.BufferedAmount" && v.value1.length === 1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(BufferedAmount))(Data_Generic.fromSpine(Data_Generic.genericInt)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("WebSocket.BufferedAmount", [{
	        sigConstructor: "WebSocket.BufferedAmount",
	        sigValues: [function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
	        }]
	    }]);
	}, function (v) {
	    return new Data_Generic.SProd("WebSocket.BufferedAmount", [function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericInt)(v);
	    }]);
	});
	var fromEnumReadyState = function fromEnumReadyState(v) {
	    if (v instanceof Connecting) {
	        return 0;
	    };
	    if (v instanceof Open) {
	        return 1;
	    };
	    if (v instanceof Closing) {
	        return 2;
	    };
	    if (v instanceof Closed) {
	        return 3;
	    };
	    throw new Error("Failed pattern match at WebSocket line 232, column 1 - line 233, column 1: " + [v.constructor.name]);
	};
	var fromBinaryType = function fromBinaryType(v) {
	    if (v instanceof Blob) {
	        return "blob";
	    };
	    if (v instanceof $$ArrayBuffer) {
	        return "arraybuffer";
	    };
	    throw new Error("Failed pattern match at WebSocket line 170, column 1 - line 171, column 1: " + [v.constructor.name]);
	};
	var eqReadyState = new Data_Eq.Eq(Data_Generic.gEq(genericReadyState));
	var ordReadyState = new Data_Ord.Ord(function () {
	    return eqReadyState;
	}, Data_Generic.gCompare(genericReadyState));
	var eqProtocol = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        return v === v1;
	    };
	});
	var ordProtocol = new Data_Ord.Ord(function () {
	    return eqProtocol;
	}, function (v) {
	    return function (v1) {
	        return Data_Ord.compare(Data_Ord.ordString)(v)(v1);
	    };
	});
	var eqCode = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        return v === v1;
	    };
	});
	var ordCode = new Data_Ord.Ord(function () {
	    return eqCode;
	}, function (v) {
	    return function (v1) {
	        return Data_Ord.compare(Data_Ord.ordInt)(v)(v1);
	    };
	});
	var eqBufferedAmount = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        return v === v1;
	    };
	});
	var ordBufferedAmount = new Data_Ord.Ord(function () {
	    return eqBufferedAmount;
	}, function (v) {
	    return function (v1) {
	        return Data_Ord.compare(Data_Ord.ordInt)(v)(v1);
	    };
	});
	var enumReadyState = new Data_Enum.Enum(function () {
	    return ordReadyState;
	}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
	var coerceEvent = Unsafe_Coerce.unsafeCoerce;
	var boundedReadyState = new Data_Bounded.Bounded(function () {
	    return ordReadyState;
	}, Connecting.value, Closed.value);
	var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
	    return boundedReadyState;
	}, function () {
	    return enumReadyState;
	}, 4, fromEnumReadyState, toEnumReadyState);
	var enhanceConnection = function enhanceConnection(c) {
	    var unsafeReadyState = function unsafeReadyState(x) {
	        return Data_Maybe.fromMaybe($foreign.specViolation("readyState isn't in the range of valid constants"))(Data_Enum.toEnum(boundedEnumReadyState)(x));
	    };
	    return Data_Function.apply(Connection)({
	        binaryType: Data_Function.apply(Data_Functor_Invariant.imap(Control_Monad_Eff_Var.invariantVar)(toBinaryType)(fromBinaryType))(Control_Monad_Eff_Var.makeVar(c.getBinaryType)(c.setBinaryType)),
	        bufferedAmount: Control_Monad_Eff_Var.makeGettableVar(c.getBufferedAmount),
	        onclose: Data_Functor_Contravariant.cmap(Control_Monad_Eff_Var.contravariantSettableVar)(function ($117) {
	            return DOM_Event_EventTarget.eventListener(function (v) {
	                return Data_Functor.map(Data_Functor.functorFn)(v)(coerceEvent);
	            }($117));
	        })(Control_Monad_Eff_Var.makeSettableVar(c.setOnclose)),
	        onerror: Data_Functor_Contravariant.cmap(Control_Monad_Eff_Var.contravariantSettableVar)(function ($118) {
	            return DOM_Event_EventTarget.eventListener(function (v) {
	                return Data_Functor.map(Data_Functor.functorFn)(v)(coerceEvent);
	            }($118));
	        })(Control_Monad_Eff_Var.makeSettableVar(c.setOnerror)),
	        onmessage: Data_Functor_Contravariant.cmap(Control_Monad_Eff_Var.contravariantSettableVar)(function ($119) {
	            return DOM_Event_EventTarget.eventListener(function (v) {
	                return Data_Functor.map(Data_Functor.functorFn)(v)(coerceEvent);
	            }($119));
	        })(Control_Monad_Eff_Var.makeSettableVar(c.setOnmessage)),
	        onopen: Data_Functor_Contravariant.cmap(Control_Monad_Eff_Var.contravariantSettableVar)(function ($120) {
	            return DOM_Event_EventTarget.eventListener(function (v) {
	                return Data_Functor.map(Data_Functor.functorFn)(v)(coerceEvent);
	            }($120));
	        })(Control_Monad_Eff_Var.makeSettableVar(c.setOnopen)),
	        protocol: Control_Monad_Eff_Var.makeVar(c.getProtocol)(c.setProtocol),
	        readyState: Data_Functor.map(Control_Monad_Eff_Var.functorGettableVar)(unsafeReadyState)(Control_Monad_Eff_Var.makeGettableVar(c.getReadyState)),
	        url: Control_Monad_Eff_Var.makeGettableVar(c.getUrl),
	        close: c.closeImpl(Data_Nullable.toNullable(Data_Maybe.Nothing.value)),
	        "close'": function close(code) {
	            return function (reason) {
	                return c.closeImpl(Data_Nullable.toNullable(new Data_Maybe.Just({
	                    code: code,
	                    reason: Data_Nullable.toNullable(reason)
	                })));
	            };
	        },
	        send: c.sendImpl,
	        socket: Control_Monad_Eff_Var.makeGettableVar(c.getSocket)
	    });
	};
	var newWebSocket = function newWebSocket(url) {
	    return function (protocols) {
	        return Data_Functor.map(Control_Monad_Eff.functorEff)(enhanceConnection)(Data_Function_Uncurried.runFn2($foreign.newWebSocketImpl)(url)(protocols));
	    };
	};
	module.exports = {
	    Blob: Blob,
	    "ArrayBuffer": $$ArrayBuffer,
	    Code: Code,
	    Connection: Connection,
	    Message: Message,
	    Protocol: Protocol,
	    Connecting: Connecting,
	    Open: Open,
	    Closing: Closing,
	    Closed: Closed,
	    Reason: Reason,
	    URL: URL,
	    newWebSocket: newWebSocket,
	    runBufferedAmount: runBufferedAmount,
	    runCode: runCode,
	    runMessage: runMessage,
	    runMessageEvent: runMessageEvent,
	    runProtocol: runProtocol,
	    runReason: runReason,
	    runURL: runURL,
	    genericBufferedAmount: genericBufferedAmount,
	    eqBufferedAmount: eqBufferedAmount,
	    ordBufferedAmount: ordBufferedAmount,
	    genericProtocol: genericProtocol,
	    eqProtocol: eqProtocol,
	    ordProtocol: ordProtocol,
	    genericReadyState: genericReadyState,
	    eqReadyState: eqReadyState,
	    ordReadyState: ordReadyState,
	    showReadyState: showReadyState,
	    boundedReadyState: boundedReadyState,
	    boundedEnumReadyState: boundedEnumReadyState,
	    enumReadyState: enumReadyState,
	    genericCode: genericCode,
	    eqCode: eqCode,
	    ordCode: ordCode,
	    genericReason: genericReason,
	    genericURL: genericURL,
	    genericMessage: genericMessage
	};

/***/ },
/* 260 */
/***/ function(module, exports) {

	/* global exports */
	"use strict";

	// module WebSocket

	exports.specViolation = function (s) {
	  throw new Error(s);
	};

	exports.newWebSocketImpl = function (url, protocols) {
	  return function () {
	    var socket = new WebSocket(url, protocols);
	    var getSocketProp = function getSocketProp(prop) {
	      return function () {
	        return socket[prop];
	      };
	    };
	    var setSocketProp = function setSocketProp(prop) {
	      return function (v) {
	        return function () {
	          socket[prop] = v;
	          return {};
	        };
	      };
	    };
	    return { setBinaryType: setSocketProp("binaryType"),
	      getBinaryType: getSocketProp("binaryType"),
	      getBufferedAmount: getSocketProp("bufferedAmount"),
	      setOnclose: setSocketProp("onclose"),
	      getOnclose: getSocketProp("onclose"),
	      setOnerror: setSocketProp("onerror"),
	      getOnerror: getSocketProp("onerror"),
	      setOnmessage: setSocketProp("onmessage"),
	      getOnmessage: getSocketProp("onmessage"),
	      setOnopen: setSocketProp("onopen"),
	      getOnopen: getSocketProp("onopen"),
	      setProtocol: setSocketProp("protocol"),
	      getProtocol: getSocketProp("protocol"),
	      getReadyState: getSocketProp("readyState"),
	      getUrl: getSocketProp("url"),
	      closeImpl: function closeImpl(params) {
	        return function () {
	          if (params == null) {
	            socket.close();
	          } else if (params.reason == null) {
	            socket.close(params.code);
	          } else {
	            socket.close(params.code, params.reason);
	          }
	          return {};
	        };
	      },
	      sendImpl: function sendImpl(message) {
	        return function () {
	          socket.send(message);
	          return {};
	        };
	      },
	      getSocket: function getSocket() {
	        return socket;
	      }
	    };
	  };
	};

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";

	var Data_Foreign = __webpack_require__(167);
	var Data_Foreign_Class = __webpack_require__(175);
	var DOM_Event_Types = __webpack_require__(183);
	var Unsafe_Coerce = __webpack_require__(112);
	var readMessageEvent = Data_Foreign.unsafeReadTagged("MessageEvent");
	var readCloseEvent = Data_Foreign.unsafeReadTagged("CloseEvent");
	var messageEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var isForeignMessageEvent = new Data_Foreign_Class.IsForeign(readMessageEvent);
	var isForeignCloseEvent = new Data_Foreign_Class.IsForeign(readCloseEvent);
	var closeEventToEvent = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    closeEventToEvent: closeEventToEvent,
	    messageEventToEvent: messageEventToEvent,
	    readCloseEvent: readCloseEvent,
	    readMessageEvent: readMessageEvent,
	    isForeignCloseEvent: isForeignCloseEvent,
	    isForeignMessageEvent: isForeignMessageEvent
	};

/***/ }
/******/ ]);